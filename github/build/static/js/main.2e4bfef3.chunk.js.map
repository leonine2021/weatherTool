{"version":3,"sources":["AddItem.js","NumericalField.js","FieldChart/calColors.js","FieldChart/PrimaryLegend.js","FieldChart/PrimarySelection.js","FieldChart/SecondarySelection.js","SaveImgButtons.js","FieldChart/SideBar.js","ItemHeader.js","FieldChart/WaterMark.js","FieldChart/Field.js","Histogram/calcBins.js","Histogram/PrimarySelection.js","Histogram/SideBar.js","Histogram/ScaleButtons.js","Histogram/Histogram.js","NvPotential/PrimaryLegend.js","NvPotential/PrimarySelection.js","NvPotential/SecondarySelection.js","NvPotential/SideBar.js","NvPotential/NV.js","psych.js","Psychrometric/ScaleButtons.js","Psychrometric/PsyChart.js","Summary/SideBar.js","Summary/utils.js","Summary/Summary.js","WindField/Instruction.js","WindField/SideBar.js","WindField/WindField.js","DataDisplay.js","NorthArrow.js","radiationCalcs.js","prepareData.js","ToggleSwitch.js","DataLoader.js","App.js","index.js"],"names":["AddItem","text","getText","className","id","onClick","NumericField","getNumericInputs","useState","startHourVal","setStartHourVal","endHourVal","setEndHourVal","startDateVal","setStartDateVal","endDateVal","setEndDateVal","useEffect","startHour","endHour","startDate","endDate","htmlFor","min","max","value","size","onChange","dayToDate","day","updateDiscreteColors","bounds","colorScale","avgs","cols","i","length","push","updateBinColors","numBins","cArray","inRangeX","x","a","b","c","bool","colorScaleDiscrete","v","currentMin","currentMax","discreteColors","calcStats","filters","numHoursBounds","newMin","newBounds","newMax","PrimaryLegend","getDataFromChild","binColors","legendRectSize","margin","innerHeight","continuous","setContinuous","setNewMin","setNewMax","newUppper","setNewUpper","newThird","setNewThird","newSecond","setNewSecond","newLower","setNewLower","setNewBounds","isEven","setIsEven","toggleDiscrete","legendScale","d3","domain","range","type","checked","toFixed","disabled","width","height","transform","y","fill","map","dy","textAnchor","fontSize","x1","y1","x2","y2","stroke","strokeWidth","PrimarySelection","dropdownOptions","currentMinMax","onSelectValueChange","getDataFromPrimarySelection","optionValueList","d","noncaps","selectedValue","setSelectedValue","e","indexOf","target","l","capsUnits","caps","min1","max1","SecondarySelection","getDataFromSecondarySelection","min2","max2","SaveImgButtons","SideBar","getPrimarySelectionIdx","getSecondarySelectionIdx","getPrimaryFilters","getSecondaryFilters","getPeriodFilters","ItemHeader","clickToClose","toUpperCase","WaterMark","weatherStation","primarySelection","secondarySelection","unit1","unit2","numHours","turn","spacing","Field","dataObj","innerWidth","params","dataParams","data","labels","isClosed","setIsClosed","primarySelectionIdx","setPrimarySelectionIdx","secondarySelectionIdx","setSecondarySelectionIdx","primaryFilters","setPrimaryFilters","secondaryFilters","setSecondaryFilters","periodFilters","setPeriodFilters","currentBounds","currentColorScale","xScale","yScale","months","hours","monthScale","hourScale","displayData","useMemo","filter1","filter2","filter3","filter","date","clock","getDisplayData","forEach","getStats","radius","dotRadius","outerRadiusMonth","heatmapThickness","angleScale","Math","PI","radiusHourScale","dotRadiusScale","centerCoordinates","angleScaleMonth","closeSignal","cx","cy","r","units","cos","sin","monthlyData","innerRadius","outerRadius","startAngle","month","endAngle","padAngle","calcHistogram","altZBool","selectedIdxPrimary","selectedIdxSecondary","currentMin1","currentMax1","currentMin2","currentMax2","bins","dx","n","calcBins","totalHours","maxHours","v2","hour","countZero","check","inRange","checkRanges","ScaleButtons","minX","maxX","maxY","binColor","lineColor","initialValues","getValues","newMinX","setNewMinX","newMaxX","setNewMaxX","newMaxY","setNewMaxY","newNumBins","setNewNumBins","newBinColor","setNewBinColor","newLineColor","setNewLineColor","xmin","xmax","ymax","Histogram","unit","toggleSum","setToggleSum","showPopup","setShowPopup","xMin","setXMin","xMax","setXMax","setNumBins","setBinColor","setLineColor","histogram","yMax","setYMax","nice","sumScale","tw","bw","xAxisTicksValues","isNaN","class","Button","Popover","isOpen","toggle","fade","placement","PopoverHeader","PopoverBody","childProps","tickVal","style","ticks","round","bin","interpolate","curve","temp_lower","temp_upper","step","NV","psych","p","tdb","inv","innum","outnum","si_bool","twb","dew","rh","w","h","out","undefined","pow","hum_rat","part_press","sat_press","rel_hum","hum_rat2","w_normal","wet_bulb","w_new","abs","w_new2","c14","c15","c16","c17","c18","pw","alpha","log","tdp1","tdp2","dew_point","enthalpy_air_h2o","alert","dry_air_density","tk","pws","ws","PsyChart","toggleDb","setToggleDb","toggleHr","setToggleHr","toggleRh","setToggleRh","toggleWb","setToggleWb","toggleEnt","setToggleEnt","tTicks","lt","hTicks","lh","rhLines","wbLines","entLines","lT","uT","dbLines","hrLines","tempFromHR","hr","lH","uH","mT","mH","coordsEntLabels","ent","lEnt","uEnt","mEnt","tempFromEnt","label","rhs","j","uWB","wbs","wb","ents","coordsWbLabels","coordsRHLabels","coords","rhEndPoints","clipPath1","clipPath2","p1","p2","pLabelX","pLabelY","k","hideArrow","mask","clipPath","atan","opacity","numEnt","strokeDasharray","getHtClDegrees","heatingDegree","setHeatingDegree","coolingDegree","setCoolingDegree","skipCount","setSkipCount","hsp","csp","mHours","addCommas","s","s2","ls","split","highContrast","col","c1","contrastRatio","relativeLuminance","hexToRGB","l1","l2","rgb","red","green","blue","h2d","Summary","setHsp","setCsp","columnLables","rowLabels","u0","u1","degreedays","degreehours","getRowLabels","rowLabelWidth","cellH","cellW","values","m1","m2","totalrad","south","east","north","west","meantemp","dailyavg","hdd","hdh","cdd","cdh","monthcount","totalradMonthly","sM","eM","nM","wM","meantempMonthly","hddMonthly","hdhMonthly","cddMonthly","cdhMonthly","maxMonthly","minMonthly","totalradVals","sV","eV","nV","wV","radMin","radMax","meantempVals","hddVals","hdhVals","cddVals","cdhVals","maxVals","minVals","temp","trm","radMaxTot","calcValues","rscale","rscaleTot","tableObj","param","o","horRow","nRow","eRow","sRow","wRow","maxRow","minRow","meanRow","hddRow","hdhRow","cddRow","cdhRow","blank","tr","nr","er","sr","wr","tc","nc","ec","sc","wc","f","getTableObj","console","dd","ii","fontWeight","Instruction","WindField","weatherStationn","displayIdx","fiter","inds","getDisplayIdx","radScale","getSectionIdx","idx","maxNumCols","floor","dataPoints","spd","dir","sectionIdx","sectionDistance","tri","pel","rot","includes","xPos","yPos","speeds","wunit","legendData","tMin","tMax","tunit","texts","fontStyle","DataDisplay","itemList","NorthArrow","getTurn","setTurn","solarPosition","time","location","logs","latitude","longitude","shift","gmt","log6","alat","nonZero","rad","sinlat","coslat","tanlat","decl","getDeclination","sindec","cosdec","tandec","cc","ss","tt","bounded","acos","w1","hourAngle","w2","hx","hextra","getECC","coshr","coszen","zenith","sinzen","sinhr","sinazm","sazm","asin","cwew","wew","sign","pi","log2","solarZenith","solarAzimuth","cosZenith","sinZenith","gBeta","beta","offset","et","getEOT","radiationMode","noteVar","beamBool","diffBool","globalBool","radMode","extrapolateRadiation","solarPos","beam","diffuse","global","tambBool","rhBool","beamDiffuse","globalAndTemp","globalOnly","globalDiffuse","diffuseratio","beamratio","dfract","xkt","hd","tamb","diff","hhor","hb","incidentRadiation","slope","azimuth","radiation","solConst","axslp","axazm","alf","surfDiff","surfDiffCirc","surfDiffBright","surfDiffIso","sinslp","cosslp","costt","rb","surfBeam","surfGrndRef","log4","a1","b1","log5","surfTotal","total","grndRef","diffIso","diffCirc","diffBright","rank","nbin","pa","eps","prepareData","metricUnits","presentVariables","getLocations","g","prompt","temp1","missingData","dataset2","populateHourly","convertDataset","te","populateMonthly","populateParams","presentVars","nv","interval","slice","parseInt","match","dataVar","ldv","varAr","replace","allVar","lva","lav","ia","ib","ic","parseFloat","solarTime","trim","count","temp2","parseData","lt2","lnv","indV","num","array","array1","array2","ar","ar2","log1","log3","TimeStep","pos","this","timeStepData","humidityRatio","wetBulb","dewPoint","hor","av","totalRad","ds","nd","tsd","dataset","conv","cf","dh","ip","val","turnDataset","t","grndRed","MonthlyTimeStep","alldata","monthEnd","sum","primeArray","sumn","nm","averageAr","DataType","setData","ind","sigdigs","capsList","noncapsList","noncapsUnits","dataLabels","cList","alt","colorDomain","colorRange","relCol","ctof","scale","legendColors","genGradient","ldom","stopcolor","so","ToggleSwitch","getUnit","isMetricUnit","setIsMetricUnit","name","DataLoader","getData","setWeatherStation","setLatitude","setLongitude","setGmt","dataString","setDataString","setDataObj","newDataObj2","newDataset","turnData","file","files","reader","FileReader","onload","fileName","currentWeatherStationName","currentDataString","result","currentDataObj","readAsText","App","setItemList","counter","setCounter","buttonText","currentCounter","currentList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4bfef3.chunk.js","sourcesContent":["// button components for generating different visualizations\nexport const AddItem = ({ text, getText }) => {\n  // pass the button text to its parent component: App\n  const passText = () => {\n    getText(text);\n  };\n  return (\n    <button\n      className=\"btn btn-success ms-1\"\n      id={\"btn-\" + text}\n      onClick={passText}\n    >\n      {text}\n    </button>\n  );\n};\n","// Component of numeric input group, setting display date and time\n\nimport NumericInput from \"react-numeric-input\";\nimport { useState, useEffect } from \"react\";\n\nexport const NumericField = ({ getNumericInputs }) => {\n  const [startHourVal, setStartHourVal] = useState(0);\n  const [endHourVal, setEndHourVal] = useState(23);\n  const [startDateVal, setStartDateVal] = useState(1);\n  const [endDateVal, setEndDateVal] = useState(365);\n\n  // pass states to parent\n  useEffect(() => {\n    getNumericInputs({\n      startHour: startHourVal,\n      endHour: endHourVal,\n      startDate: startDateVal,\n      endDate: endDateVal,\n    });\n  }, [startHourVal, endHourVal, startDateVal, endDateVal]);\n\n  return (\n    <>\n      <label className=\"row mt-3\" id=\"period-label\">\n        <strong>Display Periods</strong>\n      </label>\n      <div className=\"row period\">\n        <div className=\"col-5\">\n          <label className=\"nice-text\" htmlFor=\"end-hour\">\n            End Hour\n          </label>\n        </div>\n        <div className=\"col-4 button\">\n          <NumericInput\n            id=\"end-hour\"\n            min={0}\n            max={23}\n            value={endHourVal}\n            size={3}\n            onChange={setEndHourVal}\n          />\n        </div>\n      </div>\n\n      <div className=\"row period\">\n        <div className=\"col-5\">\n          <label className=\"nice-text\" htmlFor=\"start-hour\">\n            Start Hour\n          </label>\n        </div>\n        <div className=\"col-4 button\">\n          <NumericInput\n            id=\"start-hour\"\n            min={0}\n            max={23}\n            value={startHourVal}\n            size={3}\n            onChange={setStartHourVal}\n          />\n        </div>\n      </div>\n      <div className=\"row period\">\n        <div className=\"col-5\">\n          <label className=\"nice-text\" htmlFor=\"end-date\">\n            End Day\n          </label>\n        </div>\n        <div className=\"col-4 button\">\n          <NumericInput\n            id=\"end-date\"\n            min={1}\n            max={365}\n            value={endDateVal}\n            size={3}\n            onChange={setEndDateVal}\n          />\n        </div>\n        <div className=\"col-3\">\n          <label className=\"date\">{dayToDate(endDateVal)}</label>\n        </div>\n      </div>\n      <div className=\"row period\">\n        <div className=\"col-5\">\n          <label className=\"nice-text\" htmlFor=\"start-date\">\n            Start Day\n          </label>\n        </div>\n        <div className=\"col-4 button\">\n          <NumericInput\n            id=\"start-date\"\n            min={1}\n            max={365}\n            value={startDateVal}\n            size={3}\n            onChange={setStartDateVal}\n          />\n        </div>\n        <div className=\"col-3\">\n          <label className=\"date\">{dayToDate(startDateVal)}</label>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport const dayToDate = (day) => {\n  if (day > 0 && day <= 31)\n    //Jan\n    return `Jan.${day}`;\n  else if (day > 31 && day <= 59)\n    // Feb\n    return `Feb.${day - 31}`;\n  else if (day > 59 && day <= 90)\n    //Mar\n    return `Mar.${day - 59}`;\n  else if (day > 90 && day <= 120)\n    //Apr\n    return `Apr.${day - 90}`;\n  else if (day > 120 && day <= 151)\n    //May\n    return `May.${day - 120}`;\n  else if (day > 151 && day <= 181)\n    //Jun\n    return `Jun.${day - 151}`;\n  else if (day > 181 && day <= 212)\n    //Jul\n    return `Jul.${day - 181}`;\n  else if (day > 212 && day <= 243)\n    //Aug\n    return `Aug.${day - 212}`;\n  else if (day > 243 && day <= 273)\n    //Sep\n    return `Sep.${day - 243}`;\n  else if (day > 273 && day <= 304)\n    //Oct\n    return `Oct.${day - 273}`;\n  else if (day > 304 && day <= 334)\n    //Nov\n    return `Nov.${day - 304}`;\n  else if (day > 334 && day <= 365)\n    //Dec\n    return `Dec.${day - 334}`;\n  else if (day <= 0)\n    //Dec\n    return `Jan.1`;\n};\n","const updateDiscreteColors = (min, max, bounds, colorScale) => {\n  let avgs = [\n    (min + bounds[0]) / 2,\n    (bounds[0] + bounds[1]) / 2,\n    (bounds[1] + bounds[2]) / 2,\n    (bounds[2] + bounds[3]) / 2,\n    (bounds[3] + max) / 2,\n  ];\n  var cols = [];\n  for (let i = 0; i < avgs.length; i++) {\n    cols.push(colorScale(avgs[i]));\n  }\n  return cols;\n};\n\nconst updateBinColors = (min, max, numBins, colorScale) => {\n  var cArray = [];\n  for (var i = 0; i < numBins; i++) {\n    cArray.push(colorScale(min + ((max - min) * i) / numBins));\n  }\n  return cArray;\n};\n\nconst inRangeX = (x) => {\n  let a = x[0],\n    b = x[1],\n    c = x[2];\n  let bool = false;\n  if (a < b) {\n    if (c >= a && c < b) bool = true;\n    else bool = false;\n  }\n  if (a > b) {\n    if (c >= b && c < a) bool = true;\n    else bool = false;\n  }\n  return bool;\n};\n\nconst colorScaleDiscrete = (\n  v,\n  bounds,\n  currentMin,\n  currentMax,\n  discreteColors\n) => {\n  if (inRangeX([currentMin, bounds[0], v])) return discreteColors[0];\n  if (inRangeX([bounds[0], bounds[1], v])) return discreteColors[1];\n  if (inRangeX([bounds[1], bounds[2], v])) return discreteColors[2];\n  if (inRangeX([bounds[2], bounds[3], v])) return discreteColors[3];\n  if (inRangeX([bounds[3], currentMax + 1, v])) return discreteColors[4];\n};\n\n//which dots to show?\n// const checkDots = (\n//   d,\n//   idx1,\n//   idx2,\n//   primaryFilters,\n//   secondaryFilters,\n//   periodFilters,\n//   altZBool,\n//   numHoursBounds,\n//   numHours\n// ) => {\n//   let ind = d.date - 1;\n//   let hr = d.clock;\n//   let v1 = d.data[idx1];\n//   let v2 = d.data[idx2];\n\n//   let matrix = [\n//     [periodFilters.startDate - 1, periodFilters.endDate - 1, ind],\n//     [periodFilters.startHour, periodFilters.endHour, hr],\n//     [secondaryFilters.newMin, secondaryFilters.newMax, v2],\n//   ];\n\n//   if (altZBool)\n//     matrix.push([\n//       Math.max(0.1, primaryFilters.newMin),\n//       primaryFilters.newMax,\n//       v1,\n//     ]);\n//   else matrix.push([primaryFilters.newMin, primaryFilters.newMax, v1]);\n\n//   if (evalRanges(matrix)) {\n//     calcStats(\n//       v1,\n//       primaryFilters.newMin,\n//       primaryFilters.newMax,\n//       primaryFilters.newBounds,\n//       numHoursBounds,\n//       numHours\n//     ); //calculate stats before discounting those dots off screen\n//     return true;\n//   }\n//   return false;\n// };\n\nconst calcStats = (v, filters, numHoursBounds) => {\n  //evaluate stats\n  // numHours++;\n  if (inRangeX([filters.newMin, filters.newBounds[0], v])) numHoursBounds[0]++;\n  if (inRangeX([filters.newBounds[0], filters.newBounds[1], v]))\n    numHoursBounds[1]++;\n  if (inRangeX([filters.newBounds[1], filters.newBounds[2], v]))\n    numHoursBounds[2]++;\n  if (inRangeX([filters.newBounds[2], filters.newBounds[3], v]))\n    numHoursBounds[3]++;\n  if (inRangeX([filters.newBounds[3], filters.newMax + 1, v]))\n    numHoursBounds[4]++;\n};\n\n//evalRanges\n// const evalRanges = (ar) => {\n//   let bool = true;\n//   let lar = ar.length;\n//   while (lar--) {\n//     if (!inRange(ar[lar])) bool = false;\n//   }\n//   return bool;\n// };\n\n//inRange\n//determine if c is between a and b\n// const inRange = (x) => {\n//   let a = x[0],\n//     b = x[1],\n//     c = x[2];\n//   if (a < b) {\n//     if (c >= a && c <= b) return true;\n//     else return false;\n//   }\n//   if (a > b) {\n//     if (c >= a || c <= b) return true;\n//     else return false;\n//   }\n//   return false;\n// };\n\nexport {\n  updateDiscreteColors,\n  updateBinColors,\n  colorScaleDiscrete,\n  inRangeX,\n  calcStats,\n};\n","import NumericInput from \"react-numeric-input\";\nimport * as d3 from \"d3\";\nimport { useState, useEffect } from \"react\";\nimport { updateDiscreteColors, updateBinColors } from \"./calColors\";\n\nexport const PrimaryLegend = ({\n  min,\n  max,\n  bounds,\n  colorScale,\n  getDataFromChild,\n}) => {\n  let discreteColors = updateDiscreteColors(min, max, bounds, colorScale);\n  let binColors = updateBinColors(min, max, 20, colorScale);\n  let legendRectSize = 7.5;\n  let svgWidth = 80;\n  let svgHeight = 150;\n  let margin = { left: 0, top: 3, right: 0, bottom: 3 };\n  let innerHeight = svgHeight - margin.top - margin.bottom;\n\n  const [continuous, setContinuous] = useState(true);\n  const [newMin, setNewMin] = useState(min);\n  const [newMax, setNewMax] = useState(max);\n  const [newUppper, setNewUpper] = useState(bounds[3]);\n  const [newThird, setNewThird] = useState(bounds[2]);\n  const [newSecond, setNewSecond] = useState(bounds[1]);\n  const [newLower, setNewLower] = useState(bounds[0]);\n  const [newBounds, setNewBounds] = useState(bounds);\n  const [isEven, setIsEven] = useState(false);\n\n  // update min,max, bounds when primary selection change\n  useEffect(() => {\n    setNewLower(bounds[0]);\n    setNewSecond(bounds[1]);\n    setNewThird(bounds[2]);\n    setNewUpper(bounds[3]);\n    setNewMin(min);\n    setNewMax(max);\n  }, [bounds]);\n\n  // update bounds when number inputs change\n  useEffect(() => {\n    setNewBounds([newLower, newSecond, newThird, newUppper]);\n  }, [newLower, newSecond, newThird, newUppper]);\n\n  // pass the new min, max, bounds, continuity to the parent level\n  useEffect(() => {\n    getDataFromChild({\n      newMax: newMax,\n      newMin: newMin,\n      newBounds: newBounds,\n      continuous: continuous,\n    });\n  }, [newMax, newMin, newBounds, continuous]);\n\n  const toggleDiscrete = () => {\n    setContinuous(!continuous);\n  };\n\n  const toggleEvenSpace = () => {\n    setIsEven(!isEven);\n  };\n\n  let legendScale = d3.scaleLinear().domain([max, min]).range([0, innerHeight]);\n\n  //handle even distribution\n  useEffect(() => {\n    if (isEven) {\n      setNewLower(newMin + (newMax - newMin) / 5);\n      setNewSecond(newMin + ((newMax - newMin) * 2) / 5);\n      setNewThird(newMin + ((newMax - newMin) * 3) / 5);\n      setNewUpper(newMin + ((newMax - newMin) * 4) / 5);\n    }\n  }, [isEven, newMax, newMin]);\n\n  return (\n    <>\n      <div className=\"row\" id=\"continue-or-discrete\">\n        <div className=\"col-6\">\n          <input\n            type={\"checkbox\"}\n            checked={continuous}\n            id=\"continue\"\n            onChange={toggleDiscrete}\n          ></input>\n          <label htmlFor=\"continue\">Continuous</label>\n        </div>\n        <div className=\"col-6\">\n          <input\n            type={\"checkbox\"}\n            id=\"discrete\"\n            checked={!continuous}\n            onChange={toggleDiscrete}\n          ></input>\n          <label htmlFor=\"discrete\">Discrete</label>\n        </div>\n      </div>\n      <div className=\"row mt-3\" id=\"primary-legend-area\">\n        <div className=\"col-8\" id=\"min-max-bounds\">\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Max: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newUppper}\n                max={max}\n                value={newMax.toFixed(1)}\n                onChange={setNewMax}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Upper Bound: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newThird}\n                max={newMax}\n                disabled={isEven}\n                value={newUppper.toFixed(1)}\n                onChange={setNewUpper}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Third Bound:</label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newSecond}\n                max={newUppper}\n                disabled={isEven}\n                value={newThird.toFixed(1)}\n                onChange={setNewThird}\n              />\n            </div>\n          </div>\n\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Second Bound:</label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newLower}\n                max={newThird}\n                disabled={isEven}\n                value={newSecond.toFixed(1)}\n                onChange={setNewSecond}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Lower Bound: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newMin}\n                max={newSecond}\n                disabled={isEven}\n                value={newLower.toFixed(1)}\n                onChange={setNewLower}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Min: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={min}\n                max={newLower}\n                value={newMin.toFixed(1)}\n                onChange={setNewMin}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\" id=\"primary-legend\">\n          <div className=\"row ms-1\">\n            <svg\n              width={svgWidth}\n              height={svgHeight}\n              className=\"primary-legend-bars\"\n            >\n              <g\n                className=\"discrete-color-legend\"\n                transform={`translate(${margin.left},${margin.top})`}\n              >\n                <rect\n                  x={10}\n                  y={legendScale(newMax)}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[3]) - legendScale(newMax)}\n                  fill={discreteColors[4]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[3])}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[2]) - legendScale(newBounds[3])}\n                  fill={discreteColors[3]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[2])}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[1]) - legendScale(newBounds[2])}\n                  fill={discreteColors[2]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[1])}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[0]) - legendScale(newBounds[1])}\n                  fill={discreteColors[1]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[0])}\n                  width={legendRectSize}\n                  height={legendScale(newMin) - legendScale(newBounds[0])}\n                  fill={discreteColors[0]}\n                ></rect>\n              </g>\n              <g\n                className=\"continuous-color-legend\"\n                transform={`translate(${margin.left + 62.5},${margin.top})`}\n              >\n                {binColors.map((c, i) => {\n                  return (\n                    <rect\n                      x={0}\n                      y={(innerHeight / 20) * (binColors.length - 1 - i)}\n                      width={innerHeight / 20}\n                      height={innerHeight / 20}\n                      fill={c}\n                    ></rect>\n                  );\n                })}\n                <text\n                  x={-3}\n                  y={0}\n                  dy={\"0.79em\"}\n                  textAnchor={\"end\"}\n                  fontSize=\"8pt\"\n                >\n                  {max.toFixed(1)}\n                </text>\n                <text\n                  x={-3}\n                  y={innerHeight - 9}\n                  dy={\"0.79em\"}\n                  textAnchor={\"end\"}\n                  fontSize=\"8pt\"\n                >\n                  {min.toFixed(1)}\n                </text>\n                <line\n                  x1={-2}\n                  y1={legendScale(newMax)}\n                  x2={innerHeight / 20 + 2}\n                  y2={legendScale(newMax)}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  id=\"mark-top\"\n                ></line>\n                <line\n                  x1={-2}\n                  y1={legendScale(newMin)}\n                  x2={innerHeight / 20 + 2}\n                  y2={legendScale(newMin)}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  id=\"mark-bottom\"\n                ></line>\n              </g>\n            </svg>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-1\" id=\"even-space\">\n        <div className=\"col-1\">\n          <input type={\"checkbox\"} id=\"even\" onChange={toggleEvenSpace}></input>\n        </div>\n        <div className=\"col-10\">\n          <label htmlFor=\"even\">Evenly Spaced Bounds</label>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { PrimaryLegend } from \"./PrimaryLegend\";\nimport { useState } from \"react\";\n\nexport const PrimarySelection = ({\n  dropdownOptions,\n  currentMinMax,\n  bounds,\n  colorScale,\n  onSelectValueChange,\n  getDataFromPrimarySelection,\n}) => {\n  let optionValueList = dropdownOptions.map((d) => d.noncaps);\n  const [selectedValue, setSelectedValue] = useState(\"temperature\");\n\n  return (\n    <>\n      <label htmlFor=\"data-options\" id=\"primary-label\">\n        <strong>Primary Selection Criteria</strong>\n      </label>\n      <select\n        className=\"form-control\"\n        id={\"data-options\"}\n        value={selectedValue}\n        onChange={(e) => {\n          onSelectValueChange(optionValueList.indexOf(e.target.value));\n          setSelectedValue(e.target.value);\n        }}\n      >\n        {dropdownOptions.map((l) => {\n          return (\n            <option key={l.caps} value={l.noncaps}>\n              {l.capsUnits}\n            </option>\n          );\n        })}\n      </select>\n      <PrimaryLegend\n        min={currentMinMax.min1}\n        max={currentMinMax.max1}\n        bounds={bounds}\n        colorScale={colorScale}\n        getDataFromChild={getDataFromPrimarySelection}\n      />\n    </>\n  );\n};\n","import NumericInput from \"react-numeric-input\";\nimport { useState, useEffect } from \"react\";\n\nexport const SecondarySelection = ({\n  dropdownOptions,\n  currentMinMax,\n  onSelectValueChange,\n  getDataFromSecondarySelection,\n}) => {\n  let min = currentMinMax.min2;\n  let max = currentMinMax.max2;\n  let optionValueList = dropdownOptions.map((d) => d.noncaps);\n  const [selectedValue, setSelectedValue] = useState(\"relative humidity\");\n\n  const [newMin, setNewMin] = useState(min);\n  const [newMax, setNewMax] = useState(max);\n\n  // change the new min, max when the secondary selection updates\n  useEffect(() => {\n    setNewMax(max);\n    setNewMin(min);\n  }, [selectedValue]);\n\n  // pass the new min, max to the parent level\n  useEffect(() => {\n    getDataFromSecondarySelection({\n      newMin: newMin,\n      newMax: newMax,\n    });\n  }, [newMin, newMax]);\n\n  return (\n    <>\n      <label htmlFor=\"data-options\" id=\"secondary-label\">\n        <strong>Secondary Selection Criteria</strong>\n      </label>\n      <select\n        className=\"form-control\"\n        id={\"data-options\"}\n        value={selectedValue}\n        onChange={(e) => {\n          onSelectValueChange(optionValueList.indexOf(e.target.value));\n          setSelectedValue(e.target.value);\n        }}\n      >\n        {dropdownOptions.map((l) => {\n          return (\n            <option key={l.caps} value={l.noncaps}>\n              {l.capsUnits}\n            </option>\n          );\n        })}\n      </select>\n      <br></br>\n      <div className=\"row numeric-input mt-3\">\n        <div className=\"col-5\">\n          <label>Max: </label>\n        </div>\n        <div className=\"col-7 button\">\n          <NumericInput\n            size={3}\n            min={newMin}\n            max={max}\n            value={newMax}\n            onChange={setNewMax}\n          />\n        </div>\n      </div>\n      <div className=\"row numeric-input\">\n        <div className=\"col-5\">\n          <label>Min: </label>\n        </div>\n        <div className=\"col-7 button\">\n          <NumericInput\n            size={3}\n            min={min}\n            max={newMax}\n            value={newMin}\n            onChange={setNewMin}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","export const SaveImgButtons = () => {\n  return (\n    <div className=\"row mt-3\" id=\"save-to-png\">\n      <div className=\"col-5\">\n        <button type=\"button\" className=\"btn btn-success btn-sm\" id=\"save-png\">\n          {\"Save PNG\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { NumericField } from \"../NumericalField\";\nimport { PrimarySelection } from \"./PrimarySelection\";\nimport { SecondarySelection } from \"./SecondarySelection\";\nimport { SaveImgButtons } from \"../SaveImgButtons\";\n\nexport const SideBar = ({\n  dropdownOptions,\n  currentMinMax,\n  bounds,\n  colorScale,\n  getPrimarySelectionIdx,\n  getSecondarySelectionIdx,\n  getPrimaryFilters,\n  getSecondaryFilters,\n  getPeriodFilters,\n}) => {\n  return (\n    <div className=\"row\" id=\"side-bar\">\n      <PrimarySelection\n        dropdownOptions={dropdownOptions}\n        currentMinMax={currentMinMax}\n        bounds={bounds}\n        colorScale={colorScale}\n        onSelectValueChange={getPrimarySelectionIdx}\n        getDataFromPrimarySelection={getPrimaryFilters}\n      />\n      <SecondarySelection\n        dropdownOptions={dropdownOptions}\n        currentMinMax={currentMinMax}\n        onSelectValueChange={getSecondarySelectionIdx}\n        getDataFromSecondarySelection={getSecondaryFilters}\n      />\n      <NumericField getNumericInputs={getPeriodFilters} />\n      <SaveImgButtons />\n    </div>\n  );\n};\n","export const ItemHeader = ({ id, text, clickToClose }) => {\n  const closeInstance = () => {\n    clickToClose(true);\n  };\n  return (\n    <section className=\"row header\" id={\"header\" + id}>\n      <div className=\"col-11\">\n        <div className=\"header-text\">\n          <strong>{(\"Chart Type: \" + text).toUpperCase()}</strong>\n        </div>\n      </div>\n      <div className=\"col-1\">\n        <button\n          type=\"button\"\n          className=\"btn-close btn-close-white\"\n          onClick={closeInstance}\n        ></button>\n      </div>\n    </section>\n  );\n};\n","export const WaterMark = ({\n  className,\n  weatherStation,\n  primarySelection,\n  secondarySelection,\n  unit1,\n  unit2,\n  min1,\n  max1,\n  min2,\n  max2,\n  startDate,\n  endDate,\n  startHour,\n  endHour,\n  numHours,\n  turn,\n  fontSize,\n  spacing,\n}) => {\n  return (\n    <>\n      <text\n        className={className}\n        x={0}\n        y={0}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`Station Name: ${weatherStation}`}</text>\n      <text\n        className={className}\n        x={0}\n        y={spacing}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`${primarySelection} between ${min1} and ${max1} ${unit1}`}</text>\n      <text\n        className={className}\n        x={0}\n        y={spacing * 2}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`${secondarySelection} between ${min2} and ${max2} ${unit2}`}</text>\n      <text\n        className={className}\n        x={0}\n        y={spacing * 3}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`${startDate} to ${endDate}`}</text>\n      <text\n        className={className}\n        x={0}\n        y={spacing * 4}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`From ${startHour} to ${endHour}h`}</text>\n      <text\n        className={className}\n        x={0}\n        y={spacing * 5}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`${numHours}h (${((numHours / 8760) * 100).toFixed(\n        1\n      )}%) within selection criteria`}</text>\n      <text\n        className={className}\n        x={0}\n        y={spacing * 6}\n        dy={\"0.71em\"}\n        fontSize={fontSize}\n      >{`Turn: ${turn} degrees`}</text>\n    </>\n  );\n};\n","import { SideBar } from \"./SideBar\";\nimport { ItemHeader } from \"../ItemHeader\";\nimport { useState, useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport {\n  updateDiscreteColors,\n  colorScaleDiscrete,\n  calcStats,\n} from \"./calColors\";\nimport { WaterMark } from \"./WaterMark\";\nimport { dayToDate } from \"../NumericalField\";\n\nexport const Field = ({ text, id, dataObj, weatherStation, turn }) => {\n  const width = 980;\n  const height = 340;\n  const margin = { top: 60, right: 20, bottom: 240, left: 30 };\n\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n\n  const params = dataObj.dataParams;\n  const data = dataObj.data;\n  const labels = params.map((d) => d.labels);\n\n  //close button\n  const [isClosed, setIsClosed] = useState(false);\n  const closeInstance = (closeSignal) => {\n    setIsClosed(closeSignal);\n  };\n\n  const [primarySelectionIdx, setPrimarySelectionIdx] = useState(3);\n  const [secondarySelectionIdx, setSecondarySelectionIdx] = useState(5);\n\n  // min, max and bounds got from all inputs in the primary selection\n  const [primaryFilters, setPrimaryFilters] = useState({\n    newMax: params[3].max,\n    newMin: params[3].min,\n    newBounds: params[3].bounds,\n    continuous: true,\n  });\n\n  const [secondaryFilters, setSecondaryFilters] = useState({\n    newMax: params[5].max,\n    newMin: params[5].min,\n  });\n\n  const [periodFilters, setPeriodFilters] = useState({\n    startDate: 1,\n    endDate: 365,\n    startHour: 0,\n    endHour: 23,\n  });\n\n  // update current min-max values of both primary and secondary selections\n  let currentMinMax = {\n    min1: params[primarySelectionIdx].min,\n    max1: params[primarySelectionIdx].max,\n    min2: params[secondarySelectionIdx].min,\n    max2: params[secondarySelectionIdx].max,\n  };\n  let currentBounds = params[primarySelectionIdx].bounds;\n  let currentColorScale = params[primarySelectionIdx].colorScale;\n\n  let discreteColors = updateDiscreteColors(\n    currentMinMax.min1,\n    currentMinMax.max1,\n    currentBounds,\n    currentColorScale\n  );\n\n  // d3 scales\n  let xScale = d3.scaleLinear().domain([0.5, 365.5]).range([0, innerWidth]);\n  let yScale = d3.scaleLinear().domain([0, 23]).range([innerHeight, 0]);\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const hours = [\"0\", \"12h\", \"24h\"];\n  let monthScale = d3.scaleBand().domain(months).range([0, innerWidth]);\n  let hourScale = d3.scalePoint().domain(hours).range([innerHeight, 0]);\n\n  const getDisplayData = (data, filter1, filter2, filter3) => {\n    let filteredData = data.filter(\n      (d) =>\n        d.data[primarySelectionIdx] >= filter1.newMin &&\n        d.data[primarySelectionIdx] <= filter1.newMax &&\n        d.data[secondarySelectionIdx] >= filter2.newMin &&\n        d.data[secondarySelectionIdx] <= filter2.newMax &&\n        d.date >= filter3.startDate &&\n        d.date <= filter3.endDate &&\n        d.clock >= filter3.startHour &&\n        d.clock <= filter3.endHour\n    );\n    return filteredData;\n  };\n\n  const getStats = (data, filters) => {\n    let numHoursBounds = [0, 0, 0, 0, 0];\n    data.forEach((d) => {\n      calcStats(d.data[primarySelectionIdx], filters, numHoursBounds);\n    });\n    return numHoursBounds;\n  };\n\n  let displayData = useMemo(() => {\n    return getDisplayData(\n      data,\n      primaryFilters,\n      secondaryFilters,\n      periodFilters\n    );\n  }, [data, primaryFilters, secondaryFilters, periodFilters]);\n\n  let numHours = displayData.length;\n\n  let numHoursBounds = useMemo(() => {\n    return getStats(displayData, primaryFilters);\n  }, [displayData, primaryFilters]);\n\n  let bounds = primaryFilters.newBounds;\n\n  // Draw monthly data\n\n  // Iris chart\n  let radius = 140; // Outer heat radius in pixels\n  let heatmapThickness = 0.3; // Fraction of radius\n  let dotRadius = 1.5;\n  let outerRadiusMonth = radius * (1 - heatmapThickness * 1.1);\n  let angleScale = d3\n    .scaleLinear()\n    .domain([0, 364])\n    .range([0, Math.PI * 2]);\n  let radiusHourScale = d3\n    .scaleLinear()\n    .domain([0, 23])\n    .range([1 - heatmapThickness, 1]); // Min and max distance from center in fraction of radius\n  let dotRadiusScale = d3\n    .scaleLinear()\n    .domain([0, 23])\n    .range([dotRadius * 0.8, dotRadius]);\n  let centerCoordinates = radius + dotRadius;\n  let angleScaleMonth = d3\n    .scaleLinear()\n    .domain([0, 12])\n    .range([0, 2 * Math.PI]);\n\n  if (!isClosed) {\n    return (\n      <>\n        <br></br>\n        <div className=\"container\" id={\"item\" + id}>\n          <ItemHeader id={id} text={text} clickToClose={closeInstance} />\n          <div className=\"row mt-3\">\n            <div className=\"col-3\">\n              <SideBar\n                dropdownOptions={labels}\n                currentMinMax={currentMinMax}\n                bounds={currentBounds}\n                colorScale={currentColorScale}\n                getPrimarySelectionIdx={setPrimarySelectionIdx}\n                getSecondarySelectionIdx={setSecondarySelectionIdx}\n                getPrimaryFilters={setPrimaryFilters}\n                getSecondaryFilters={setSecondaryFilters}\n                getPeriodFilters={setPeriodFilters}\n              />\n            </div>\n            <div className=\"col-9\">\n              <div className=\"row\" id=\"rectangular-field\">\n                <svg width={width} height={height}>\n                  <g\n                    transform={`translate(${margin.left},${margin.top})`}\n                    id=\"svg-field-chart\"\n                  >\n                    {displayData.map((d) => {\n                      return (\n                        <circle\n                          cx={xScale(d.date)}\n                          cy={yScale(d.clock)}\n                          r={1.2}\n                          fill={\n                            primaryFilters.continuous\n                              ? currentColorScale(d.data[primarySelectionIdx])\n                              : colorScaleDiscrete(\n                                  d.data[primarySelectionIdx],\n                                  bounds,\n                                  currentMinMax.min1,\n                                  currentMinMax.max1,\n                                  discreteColors\n                                )\n                          }\n                        ></circle>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left}, ${\n                      innerHeight + margin.top\n                    })`}\n                    id=\"axis-months\"\n                  >\n                    {months.map((d) => {\n                      return (\n                        <g>\n                          <text\n                            x={monthScale(d)}\n                            y={10}\n                            dy={\"0.71em\"}\n                            fontSize={12}\n                          >\n                            {d}\n                          </text>\n                          <line\n                            x1={monthScale(d) + 1.2}\n                            y1={3}\n                            x2={monthScale(d) + 1.2}\n                            y2={7}\n                            stroke={\"black\"}\n                          ></line>\n                        </g>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left},${margin.top})`}\n                    id=\"axis-hours\"\n                  >\n                    {hours.map((d) => {\n                      return (\n                        <g>\n                          <text\n                            x={-8}\n                            y={hourScale(d)}\n                            textAnchor=\"end\"\n                            dy={\"0.32em\"}\n                            fontSize={12}\n                          >\n                            {d}\n                          </text>\n                          <line\n                            x1={-2}\n                            y1={hourScale(d)}\n                            x2={-6}\n                            y2={hourScale(d)}\n                            stroke={\"black\"}\n                          ></line>\n                        </g>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left}, ${\n                      height - margin.bottom + 50\n                    })`}\n                    id=\"axis-legend\"\n                  >\n                    <rect\n                      x={0}\n                      y={-9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[0]}\n                    ></rect>\n                    <text\n                      x={12}\n                      y={0}\n                      fontSize={11}\n                    >{`${primaryFilters.newMin.toFixed(\n                      1\n                    )} to ${bounds[0].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[0]} hours (${(\n                      (numHoursBounds[0] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[1]}\n                    ></rect>\n                    <text x={12} y={18} fontSize={11}>{`${bounds[0].toFixed(\n                      1\n                    )} to ${bounds[1].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[1]} hours (${(\n                      (numHoursBounds[1] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={27}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[2]}\n                    ></rect>\n                    <text x={12} y={36} fontSize={11}>{`${bounds[1].toFixed(\n                      1\n                    )} to ${bounds[2].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[2]} hours (${(\n                      (numHoursBounds[2] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={45}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[3]}\n                    ></rect>\n                    <text x={12} y={54} fontSize={11}>{`${bounds[2].toFixed(\n                      1\n                    )} to ${bounds[3].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[3]} hours (${(\n                      (numHoursBounds[3] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={63}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[4]}\n                    ></rect>\n                    <text x={12} y={72} fontSize={11}>{`${bounds[3].toFixed(\n                      1\n                    )} to ${primaryFilters.newMax.toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[4]} hours (${(\n                      (numHoursBounds[4] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n\n                    <text\n                      className=\"wtm-text\"\n                      x={innerWidth + margin.left - 150}\n                      y={-95}\n                      fontSize={11}\n                    >{`Total Hours: ${numHours} hours`}</text>\n                  </g>\n                  <g\n                    transform={`translate(${innerWidth + margin.left},${\n                      height - margin.bottom + 45\n                    })`}\n                    id=\"axis-watermark-linear\"\n                  >\n                    <WaterMark\n                      className={\"wtm-text-linear\"}\n                      weatherStation={weatherStation}\n                      primarySelection={labels[primarySelectionIdx].caps}\n                      secondarySelection={labels[secondarySelectionIdx].caps}\n                      unit1={labels[primarySelectionIdx].units}\n                      unit2={labels[secondarySelectionIdx].units}\n                      min1={primaryFilters.newMin.toFixed(1)}\n                      max1={primaryFilters.newMax.toFixed(1)}\n                      min2={secondaryFilters.newMin.toFixed(1)}\n                      max2={secondaryFilters.newMax.toFixed(1)}\n                      startDate={dayToDate(periodFilters.startDate)}\n                      endDate={dayToDate(periodFilters.endDate)}\n                      startHour={periodFilters.startHour}\n                      endHour={periodFilters.endHour}\n                      numHours={numHours}\n                      turn={turn}\n                      fontSize={12}\n                      spacing={15}\n                    />\n                  </g>\n                </svg>\n              </div>\n              <div className=\"row\" id=\"iris-field\">\n                <svg width={width} height={height}>\n                  <g\n                    transform={`translate(${margin.left + 30},${\n                      margin.top - 40\n                    })`}\n                    id=\"svg-iris-chart\"\n                  >\n                    <circle\n                      cx={radius + dotRadius}\n                      cy={radius + dotRadius}\n                      r={radius + 2 * dotRadius}\n                      fill={\"none\"}\n                      stroke={\"#635f5d\"}\n                      strokeWidth={1}\n                      id=\"outer-circle\"\n                    ></circle>\n                    <circle\n                      cx={radius + dotRadius}\n                      cy={radius + dotRadius}\n                      r={radius * (1 - heatmapThickness * 1.05)}\n                      fill={\"none\"}\n                      stroke={\"#635f5d\"}\n                      strokeWidth={1}\n                      id=\"inner-circle\"\n                    ></circle>\n                    {displayData.map((d) => {\n                      return (\n                        <circle\n                          cx={\n                            radiusHourScale(d.clock) *\n                              radius *\n                              Math.cos(angleScale(d.date) - Math.PI * 0.5) +\n                            centerCoordinates\n                          }\n                          cy={\n                            radiusHourScale(d.clock) *\n                              radius *\n                              Math.sin(angleScale(d.date) - Math.PI * 0.5) +\n                            centerCoordinates\n                          }\n                          r={dotRadiusScale(d.clock)}\n                          fill={\n                            primaryFilters.continuous\n                              ? currentColorScale(d.data[primarySelectionIdx])\n                              : colorScaleDiscrete(\n                                  d.data[primarySelectionIdx],\n                                  bounds,\n                                  currentMinMax.min1,\n                                  currentMinMax.max1,\n                                  discreteColors\n                                )\n                          }\n                        ></circle>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left + 30},${\n                      margin.top - 40\n                    })`}\n                    id=\"ring-months\"\n                  >\n                    {dataObj.monthlyData.map((d) => {\n                      return (\n                        <path\n                          d={d3\n                            .arc()\n                            .innerRadius(outerRadiusMonth - 10)\n                            .outerRadius(outerRadiusMonth)\n                            .startAngle(angleScaleMonth(d.month))\n                            .endAngle(angleScaleMonth(d.month + 1))\n                            .padAngle(0.007)(d)}\n                          fill={currentColorScale(d.data[primarySelectionIdx])}\n                          transform={`translate(${centerCoordinates},${centerCoordinates})`}\n                        ></path>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left + 30},${\n                      margin.top - 40\n                    })`}\n                    id=\"axis-months-iris\"\n                  >\n                    {months.map((d, i) => {\n                      return (\n                        <text\n                          x={0}\n                          y={0}\n                          dy={\"0.79em\"}\n                          fontSize={12}\n                          textAnchor={i < 6 ? \"start\" : \"end\"}\n                          transform={`translate(${\n                            radius *\n                              Math.cos(\n                                angleScale(15 + 30 * i) - Math.PI * 0.5\n                              ) *\n                              1.05 +\n                            centerCoordinates\n                          },${\n                            radius *\n                              Math.sin(\n                                angleScale(15 + 30 * i) - Math.PI * 0.5\n                              ) *\n                              1.05 +\n                            centerCoordinates\n                          }) rotate(${((15 + 30 * i) % 180) - 90})`}\n                        >\n                          {d}\n                        </text>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${innerWidth + margin.left - 550},${\n                      height - margin.bottom\n                    })`}\n                    id=\"axis-watermark-iris\"\n                  >\n                    <WaterMark\n                      className={\"wtm-text-iris\"}\n                      weatherStation={weatherStation}\n                      primarySelection={labels[primarySelectionIdx].caps}\n                      secondarySelection={labels[secondarySelectionIdx].caps}\n                      unit1={labels[primarySelectionIdx].units}\n                      unit2={labels[secondarySelectionIdx].units}\n                      min1={primaryFilters.newMin.toFixed(1)}\n                      max1={primaryFilters.newMax.toFixed(1)}\n                      min2={secondaryFilters.newMin.toFixed(1)}\n                      max2={secondaryFilters.newMax.toFixed(1)}\n                      startDate={dayToDate(periodFilters.startDate)}\n                      endDate={dayToDate(periodFilters.endDate)}\n                      startHour={periodFilters.startHour}\n                      endHour={periodFilters.endHour}\n                      numHours={numHours}\n                      turn={turn}\n                      fontSize={12}\n                      spacing={15}\n                    />\n                  </g>\n                  <g\n                    transform={`translate(${margin.left + innerWidth - 550}, ${\n                      height - margin.bottom + 150\n                    })`}\n                    id=\"axis-legend-iris\"\n                  >\n                    <rect\n                      x={0}\n                      y={-9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[0]}\n                    ></rect>\n                    <text\n                      x={12}\n                      y={0}\n                      fontSize={11}\n                    >{`${primaryFilters.newMin.toFixed(\n                      1\n                    )} to ${bounds[0].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[0]} hours (${(\n                      (numHoursBounds[0] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[1]}\n                    ></rect>\n                    <text x={12} y={18} fontSize={11}>{`${bounds[0].toFixed(\n                      1\n                    )} to ${bounds[1].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[1]} hours (${(\n                      (numHoursBounds[1] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={27}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[2]}\n                    ></rect>\n                    <text x={12} y={36} fontSize={11}>{`${bounds[1].toFixed(\n                      1\n                    )} to ${bounds[2].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[2]} hours (${(\n                      (numHoursBounds[2] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={45}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[3]}\n                    ></rect>\n                    <text x={12} y={54} fontSize={11}>{`${bounds[2].toFixed(\n                      1\n                    )} to ${bounds[3].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[3]} hours (${(\n                      (numHoursBounds[3] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={63}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[4]}\n                    ></rect>\n                    <text x={12} y={72} fontSize={11}>{`${bounds[3].toFixed(\n                      1\n                    )} to ${primaryFilters.newMax.toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[4]} hours (${(\n                      (numHoursBounds[4] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                  </g>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else return null;\n};\n","// utility functions for calculatig histogram\nconst inRange = (a, b, c) => {\n  //determine if c is between a and b\n  if (a < b) {\n    if (c >= a && c <= b) return true;\n    else return false;\n  }\n  if (a > b) {\n    if (c >= a || c <= b) return true;\n    else return false;\n  }\n  return false;\n};\n\nconst checkRanges = (a) => {\n  let bool = true;\n  a.forEach((d) => {\n    if (!inRange(d[0], d[1], d[2])) bool = false;\n  });\n  return bool;\n};\n\nconst calcBins = (min, max, numBins) => {\n  let bins = [];\n  let dx = (max - min) / Math.max(numBins, 1);\n  let b = [];\n  for (let i = 0; i < numBins; i++) {\n    b.push(min + i * dx);\n  }\n  b.push(max);\n\n  b.forEach((d, i, a) => {\n    if (typeof a[i + 1] != \"undefined\") {\n      bins.push({\n        min: d,\n        max: a[i + 1],\n        n: 0,\n        c: 0,\n      });\n    }\n  });\n  return bins;\n};\n\nexport const calcHistogram = (\n  data,\n  min,\n  max,\n  numBins,\n  altZBool,\n  selectedIdxPrimary,\n  selectedIdxSecondary,\n  currentMin1,\n  currentMax1,\n  currentMin2,\n  currentMax2,\n  startHourVal,\n  endHourVal,\n  startDateVal,\n  endDateVal\n) => {\n  let bins = calcBins(min, max, numBins);\n  let totalHours = 0;\n  let maxHours = 0;\n  //go through every time step\n  let l = data.length;\n  for (let i = 0; i < l; i++) {\n    let v = data[i].data[selectedIdxPrimary];\n    let v2 = data[i].data[selectedIdxSecondary];\n    let hour = data[i].clock;\n    let day = data[i].date;\n\n    //exclude values not between currentMin/currentMax, currentMin2/currentMax2, hour, date\n    let countZero = true;\n    if (altZBool && v === 0) countZero = false;\n    if (countZero) {\n      let a = [\n        [currentMin1, currentMax1, v],\n        [currentMin2, currentMax2, v2],\n        [startHourVal, endHourVal, hour],\n        [startDateVal, endDateVal, day],\n      ];\n      let check = checkRanges(a);\n      if (check) {\n        //choose what bin the value fits into\n        bins.forEach((d) => {\n          if (v >= d.min) d.c += 1;\n          if (v >= d.min && v < d.max) {\n            d.n += 1;\n            totalHours += 1;\n          }\n          if (d.n > maxHours) maxHours = d.n;\n        });\n      }\n    }\n  }\n  return { bins: bins, maxHours: maxHours, totalHours: totalHours };\n};\n","import NumericInput from \"react-numeric-input\";\nimport { useState, useEffect } from \"react\";\n\nexport const PrimarySelection = ({\n  dropdownOptions,\n  currentMinMax,\n  onSelectValueChange,\n  getDataFromPrimarySelection,\n}) => {\n  let min = currentMinMax.min1;\n  let max = currentMinMax.max1;\n  let optionValueList = dropdownOptions.map((d) => d.noncaps);\n  const [selectedValue, setSelectedValue] = useState(\"temperature\");\n\n  const [newMin, setNewMin] = useState(min);\n  const [newMax, setNewMax] = useState(max);\n\n  // change the new min, max when the Primary selection updates\n  useEffect(() => {\n    setNewMax(max);\n    setNewMin(min);\n  }, [selectedValue, min, max]);\n\n  // pass the new min, max to the parent level\n  useEffect(() => {\n    getDataFromPrimarySelection({\n      newMin: newMin,\n      newMax: newMax,\n    });\n  }, [newMin, newMax]);\n\n  return (\n    <>\n      <label htmlFor=\"data-options\" id=\"Primary-label\">\n        <strong>Primary Selection Criteria</strong>\n      </label>\n      <select\n        className=\"form-control\"\n        id={\"data-options\"}\n        value={selectedValue}\n        onChange={(e) => {\n          onSelectValueChange(optionValueList.indexOf(e.target.value));\n          setSelectedValue(e.target.value);\n        }}\n      >\n        {dropdownOptions.map((l) => {\n          return (\n            <option key={l.caps} value={l.noncaps}>\n              {l.capsUnits}\n            </option>\n          );\n        })}\n      </select>\n      <br></br>\n      <div className=\"row numeric-input mt-3\">\n        <div className=\"col-5\">\n          <label>Max: </label>\n        </div>\n        <div className=\"col-7 button\">\n          <NumericInput\n            size={3}\n            min={newMin}\n            max={max}\n            value={newMax}\n            onChange={setNewMax}\n          />\n        </div>\n      </div>\n      <div className=\"row numeric-input\">\n        <div className=\"col-5\">\n          <label>Min: </label>\n        </div>\n        <div className=\"col-7 button\">\n          <NumericInput\n            size={3}\n            min={min}\n            max={newMax}\n            value={newMin}\n            onChange={setNewMin}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NumericField } from \"../NumericalField\";\nimport { PrimarySelection } from \"./PrimarySelection\";\nimport { SecondarySelection } from \"../FieldChart/SecondarySelection\";\nimport { SaveImgButtons } from \"../SaveImgButtons\";\n\nexport const SideBar = ({\n  dropdownOptions,\n  currentMinMax,\n  getPrimarySelectionIdx,\n  getSecondarySelectionIdx,\n  getPrimaryFilters,\n  getSecondaryFilters,\n  getPeriodFilters,\n}) => {\n  return (\n    <div className=\"row\" id=\"side-bar\">\n      <PrimarySelection\n        dropdownOptions={dropdownOptions}\n        currentMinMax={currentMinMax}\n        onSelectValueChange={getPrimarySelectionIdx}\n        getDataFromPrimarySelection={getPrimaryFilters}\n      />\n      <SecondarySelection\n        dropdownOptions={dropdownOptions}\n        currentMinMax={currentMinMax}\n        onSelectValueChange={getSecondarySelectionIdx}\n        getDataFromSecondarySelection={getSecondaryFilters}\n      />\n      <NumericField getNumericInputs={getPeriodFilters} />\n      <SaveImgButtons />\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport NumericInput from \"react-numeric-input\";\n\nexport const ScaleButtons = ({\n  minX,\n  maxX,\n  maxY,\n  numBins,\n  binColor,\n  lineColor,\n  initialValues,\n  getValues,\n}) => {\n  const [newMinX, setNewMinX] = useState(minX);\n  const [newMaxX, setNewMaxX] = useState(maxX);\n  const [newMaxY, setNewMaxY] = useState(maxY);\n  const [newNumBins, setNewNumBins] = useState(numBins);\n  const [newBinColor, setNewBinColor] = useState(binColor);\n  const [newLineColor, setNewLineColor] = useState(lineColor);\n\n  useEffect(() => {\n    getValues({\n      newMinX: newMinX,\n      newMaxX: newMaxX,\n      newMaxY: newMaxY,\n      newNumBins: newNumBins,\n      newBinColor: newBinColor,\n      newLineColor: newLineColor,\n    });\n  }, [newMinX, newMaxX, newMaxY, newNumBins, newBinColor, newLineColor]);\n\n  const reset = () => {\n    setNewMinX(initialValues.xmin);\n    setNewMaxX(initialValues.xmax);\n    setNewMaxY(initialValues.ymax);\n    setNewNumBins(initialValues.numBins);\n    setNewBinColor(initialValues.binColor);\n    setNewLineColor(initialValues.lineColor);\n  };\n\n  return (\n    <>\n      <div className=\"row axis-range-label\">\n        <span>{\"Set X Axis Lower Limit\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"minX\"\n          value={newMinX}\n          size={5}\n          onChange={setNewMinX}\n        />\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Set X Axis upper Limit\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"maxX\"\n          value={newMaxX}\n          size={5}\n          onChange={setNewMaxX}\n        />\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Set Number of Bins\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"numbin\"\n          value={newNumBins}\n          min={1}\n          size={5}\n          onChange={setNewNumBins}\n        />\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Set Y Axis Upper Limit\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"maxY\"\n          value={newMaxY}\n          size={5}\n          onChange={setNewMaxY}\n        />\n      </div>\n      <div className=\"input-group mt-3\">\n        <button className={\"btn btn-secondary\"} onClick={reset}>\n          {\"Reset\"}\n        </button>\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Set Bin Color\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <input\n          className=\"form-control offset-3\"\n          type=\"color\"\n          value={\"#ADD8E6\"}\n          id=\"colorpicker-bin\"\n          onChange={(e) => {\n            setNewBinColor(e.target.value);\n          }}\n        ></input>\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Set Line Color\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <input\n          className=\"form-control offset-3\"\n          type=\"color\"\n          id=\"colorpicker-line\"\n          value={\"#FFA500\"}\n          onChange={(e) => {\n            setNewLineColor(e.target.value);\n          }}\n        ></input>\n      </div>\n    </>\n  );\n};\n","// Visualization Item: Histogram\nimport { useState, useEffect } from \"react\";\nimport { ItemHeader } from \"../ItemHeader\";\nimport * as d3 from \"d3\";\nimport { calcHistogram } from \"./calcBins\";\nimport { SideBar } from \"./SideBar\";\nimport { WaterMark } from \"../FieldChart/WaterMark\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\nimport { ScaleButtons } from \"./ScaleButtons\";\nimport { dayToDate } from \"../NumericalField\";\n\nexport const Histogram = ({\n  text,\n  id,\n  dataObj,\n  weatherStation,\n  unit,\n  turn,\n}) => {\n  // cosntant values\n  const width = 800;\n  const height = 600;\n  const margin = { top: 30, right: 180, bottom: 200, left: 100 };\n\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n\n  const params = dataObj.dataParams;\n  const data = dataObj.data;\n  const labels = params.map((d) => d.labels);\n\n  // console.log(labels[0].units);\n\n  //close button\n  const [isClosed, setIsClosed] = useState(false);\n  // dropdown menus\n  const [primarySelectionIdx, setPrimarySelectionIdx] = useState(3);\n  const [secondarySelectionIdx, setSecondarySelectionIdx] = useState(5);\n\n  const [toggleSum, setToggleSum] = useState(true);\n  const [showPopup, setShowPopup] = useState(false);\n\n  const [primaryFilters, setPrimaryFilters] = useState({\n    newMax: params[3].max,\n    newMin: params[3].min,\n  });\n\n  const [secondaryFilters, setSecondaryFilters] = useState({\n    newMax: params[5].max,\n    newMin: params[5].min,\n  });\n\n  const [periodFilters, setPeriodFilters] = useState({\n    startDate: 1,\n    endDate: 365,\n    startHour: 0,\n    endHour: 23,\n  });\n\n  useEffect(() => {\n    setPrimaryFilters({\n      newMax: params[primarySelectionIdx].max,\n      newMin: params[primarySelectionIdx].min,\n    });\n    setSecondaryFilters({\n      newMax: params[secondarySelectionIdx].max,\n      newMin: params[secondarySelectionIdx].min,\n    });\n  }, [data]);\n\n  const [xMin, setXMin] = useState(params[3].min);\n  const [xMax, setXMax] = useState(params[3].max);\n  const [numBins, setNumBins] = useState(10);\n  const [binColor, setBinColor] = useState(\"lightblue\");\n  const [lineColor, setLineColor] = useState(\"orange\");\n\n  useEffect(() => {\n    setXMin(params[primarySelectionIdx].min);\n    setXMax(params[primarySelectionIdx].max);\n  }, [primarySelectionIdx, data]);\n\n  useEffect(() => {\n    setShowPopup(false);\n  }, [primarySelectionIdx, secondarySelectionIdx, data]);\n\n  let xScale = d3.scaleLinear().domain([xMin, xMax]).range([0, innerWidth]);\n  let altZBool = params[primarySelectionIdx].altZBool;\n\n  let histogram = calcHistogram(\n    data,\n    xMin,\n    xMax,\n    numBins,\n    altZBool,\n    primarySelectionIdx,\n    secondarySelectionIdx,\n    primaryFilters.newMin,\n    primaryFilters.newMax,\n    secondaryFilters.newMin,\n    secondaryFilters.newMax,\n    periodFilters.startHour,\n    periodFilters.endHour,\n    periodFilters.startDate,\n    periodFilters.endDate\n  );\n\n  // console.log(histogram.maxHours);\n  // let maxHour = histogram.maxHours;\n  const [yMax, setYMax] = useState(histogram.maxHours);\n\n  // useEffect(() => {\n  //   setYMax(yMax);\n  // }, [histogram]);\n\n  const getValues = (childProps) => {\n    setXMin(childProps.newMinX);\n    setXMax(childProps.newMaxX);\n    setYMax(childProps.newMaxY);\n    setNumBins(childProps.newNumBins);\n    setBinColor(childProps.newBinColor);\n    setLineColor(childProps.newLineColor);\n  };\n\n  // states to control axis scales\n\n  let yScale = d3\n    .scaleLinear()\n    .domain([0, yMax])\n    .range([innerHeight, 0])\n    .nice(10);\n\n  let sumScale = d3\n    .scaleLinear()\n    .domain([0, 100])\n    .range([innerHeight, 0])\n    .nice(10);\n\n  let bins = histogram.bins;\n  let tw = 0;\n  let bw = 0;\n  let xAxisTicksValues = [];\n  if (bins.length) {\n    bins.forEach((d) => {\n      xAxisTicksValues.push(isNaN(d) ? d.min : 0);\n    });\n    xAxisTicksValues.push(bins[bins.length - 1].max);\n\n    tw = xScale(bins[0].max) - xScale(bins[0].min);\n    bw = 0.95 * tw;\n  }\n\n  const closeInstance = (closeSignal) => {\n    setIsClosed(closeSignal);\n  };\n\n  const togglePopover = () => {\n    setShowPopup(!showPopup);\n  };\n\n  if (!isClosed && data) {\n    return (\n      <>\n        <br></br>\n        <div className=\"container\" id={\"item\" + id}>\n          <ItemHeader id={id} text={text} clickToClose={closeInstance} />\n          <div className=\"row mt-3\">\n            <div className=\"col-3\">\n              <SideBar\n                dropdownOptions={labels}\n                currentMinMax={{\n                  min1: params[primarySelectionIdx].min,\n                  min2: params[secondarySelectionIdx].min,\n                  max1: params[primarySelectionIdx].max,\n                  max2: params[secondarySelectionIdx].max,\n                }}\n                getPrimarySelectionIdx={setPrimarySelectionIdx}\n                getSecondarySelectionIdx={setSecondarySelectionIdx}\n                getPrimaryFilters={setPrimaryFilters}\n                getSecondaryFilters={setSecondaryFilters}\n                getPeriodFilters={setPeriodFilters}\n              />\n            </div>\n            <div className=\"col-9\">\n              <div className=\"container ms-3\" id=\"toggle-lines\">\n                <div class=\"form-check form-check-inline offset-9\">\n                  <input\n                    className={\"form-check-input\"}\n                    type={\"checkbox\"}\n                    checked={toggleSum}\n                    id=\"toggle-db\"\n                    onChange={() => setToggleSum(!toggleSum)}\n                  ></input>\n                  <label className=\"form-check-label\" htmlFor=\"toggle-db\">\n                    Show Sum\n                  </label>\n                </div>\n                <Button\n                  id=\"mypopover-histo\"\n                  type=\"button\"\n                  className=\"btn btn-secondary btn-sm\"\n                >\n                  Chart Settings\n                </Button>\n                <Popover\n                  isOpen={showPopup}\n                  target=\"mypopover-histo\"\n                  toggle={togglePopover}\n                  fade={false}\n                  placement={\"bottom-end\"}\n                >\n                  <PopoverHeader>Chart Settings</PopoverHeader>\n                  <PopoverBody>\n                    <ScaleButtons\n                      minX={xMin}\n                      maxX={xMax}\n                      maxY={yMax}\n                      numBins={numBins}\n                      binColor={binColor}\n                      lineColor={lineColor}\n                      initialValues={{\n                        xmin: params[primarySelectionIdx].min,\n                        xmax: params[primarySelectionIdx].max,\n                        ymax: histogram.maxHours,\n                        numBins: 10,\n                        binColor: \"lightblue\",\n                        lineColor: \"orange\",\n                      }}\n                      getValues={getValues}\n                    />\n                  </PopoverBody>\n                </Popover>\n              </div>\n\n              <div className=\"row viz\" id=\"histogram\">\n                <svg width={width} height={height}>\n                  <g transform={`translate(${margin.left},${margin.top})`}>\n                    {xAxisTicksValues.map((tickVal) => {\n                      return (\n                        <g transform={`translate(${xScale(tickVal)},0)`}>\n                          <line\n                            y1={innerHeight + 6}\n                            y2={innerHeight}\n                            stroke=\"black\"\n                          />\n                          <text\n                            y={innerHeight + 12}\n                            dy={\"0.71em\"}\n                            style={{ textAnchor: \"middle\" }}\n                            fontSize={\"10pt\"}\n                            transform={`rotate(${\n                              xAxisTicksValues.length >= 20 ? 90 : 0\n                            }) translate(${\n                              xAxisTicksValues.length >= 20\n                                ? innerHeight + 25\n                                : 0\n                            },${\n                              xAxisTicksValues.length >= 20\n                                ? -(innerHeight + 15)\n                                : 0\n                            })`}\n                          >\n                            {tickVal.toFixed(1)}\n                          </text>\n                        </g>\n                      );\n                    })}\n                    {yScale.ticks().map((tickVal) => {\n                      return (\n                        <g transform={`translate(0,${yScale(tickVal)})`}>\n                          <line x1={-6} x2={0} stroke=\"black\" />\n                          <text\n                            x={-12}\n                            dy={\"0.32em\"}\n                            style={{ textAnchor: \"end\" }}\n                            fontSize={\"10pt\"}\n                          >\n                            {Math.round(tickVal)}\n                          </text>\n                        </g>\n                      );\n                    })}\n                    {sumScale.ticks().map((tickVal) => {\n                      return (\n                        toggleSum && (\n                          <g transform={`translate(0,${sumScale(tickVal)})`}>\n                            <line\n                              x1={innerWidth}\n                              x2={innerWidth + 6}\n                              stroke=\"black\"\n                            />\n                            <text\n                              x={innerWidth + 12}\n                              dy={\"0.32em\"}\n                              style={{ textAnchor: \"start\" }}\n                              fontSize={\"10pt\"}\n                            >\n                              {Math.round(tickVal) + \"%\"}\n                            </text>\n                          </g>\n                        )\n                      );\n                    })}\n                    <text\n                      id=\"label-sumAxis\"\n                      x={0}\n                      y={0}\n                      transform={`rotate(90) translate(${innerHeight / 2},${\n                        -innerWidth - 55\n                      })`}\n                      textAnchor=\"middle\"\n                      fontSize={\"12pt\"}\n                    >\n                      {toggleSum ? \"Percent of Hours(%)\" : \"\"}\n                    </text>\n\n                    <text\n                      id=\"label-yAxis\"\n                      x={0}\n                      y={0}\n                      transform={`rotate(-90) translate(${\n                        -innerHeight / 2\n                      },${-60})`}\n                      textAnchor=\"middle\"\n                      fontSize={\"12pt\"}\n                    >\n                      {\"Hours Counts(hrs)\"}\n                    </text>\n\n                    <text\n                      id=\"label-xAxis\"\n                      x={innerWidth / 2}\n                      y={innerHeight + 55}\n                      textAnchor=\"middle\"\n                      fontSize={\"12pt\"}\n                    >\n                      {labels[primarySelectionIdx].capsUnits}\n                    </text>\n\n                    {bins.map((bin) => {\n                      return (\n                        <rect\n                          x={(tw - bw) / 2 + xScale(bin.min)}\n                          y={yScale(bin.n)}\n                          width={bw}\n                          height={innerHeight - yScale(bin.n)}\n                          fill={binColor}\n                        ></rect>\n                      );\n                    })}\n                    <path\n                      fill=\"None\"\n                      stroke={toggleSum ? lineColor : \"none\"}\n                      strokeWidth={2}\n                      interpolate={\"curveCatmullRom\"}\n                      d={d3\n                        .line()\n                        .x((d) => xScale(d.min + (d.max - d.min) / 2))\n                        .y((d) => sumScale((d.c * 100) / 8760))\n                        .curve(d3.curveBasis)(bins)}\n                    ></path>\n                  </g>\n                  <g\n                    transform={`translate(${width - margin.right + 90},${\n                      height - margin.bottom - 75\n                    })`}\n                    id=\"axis-watermark-histogram\"\n                  >\n                    <WaterMark\n                      className={\"wtm-text-histogram\"}\n                      weatherStation={weatherStation}\n                      primarySelection={labels[primarySelectionIdx].caps}\n                      secondarySelection={labels[secondarySelectionIdx].caps}\n                      unit1={labels[primarySelectionIdx].units}\n                      unit2={labels[secondarySelectionIdx].units}\n                      min1={primaryFilters.newMin.toFixed(1)}\n                      max1={primaryFilters.newMax.toFixed(1)}\n                      min2={secondaryFilters.newMin.toFixed(1)}\n                      max2={secondaryFilters.newMax.toFixed(1)}\n                      startDate={dayToDate(periodFilters.startDate)}\n                      endDate={dayToDate(periodFilters.endDate)}\n                      startHour={periodFilters.startHour}\n                      endHour={periodFilters.endHour}\n                      numHours={histogram.totalHours}\n                      turn={turn}\n                      fontSize={12}\n                      spacing={15}\n                    />\n                  </g>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n  return null;\n};\n","import NumericInput from \"react-numeric-input\";\nimport * as d3 from \"d3\";\nimport { useState, useEffect } from \"react\";\nimport { updateDiscreteColors, updateBinColors } from \"../FieldChart/calColors\";\n\nexport const PrimaryLegend = ({\n  min,\n  max,\n  bounds,\n  colorScale,\n  getDataFromChild,\n  unit,\n}) => {\n  let discreteColors = updateDiscreteColors(min, max, bounds, colorScale);\n  let binColors = updateBinColors(min, max, 20, colorScale);\n  let legendRectSize = 7.5;\n  let svgWidth = 80;\n  let svgHeight = 150;\n  let margin = { left: 0, top: 3, right: 0, bottom: 3 };\n  let innerHeight = svgHeight - margin.top - margin.bottom;\n\n  let temp_lower = !unit ? 18 : 18 * 1.8 + 32;\n  let temp_upper = !unit ? 24 : 24 * 1.8 + 32;\n  // console.log(temp_lower, temp_upper);\n\n  const [continuous, setContinuous] = useState(true);\n  const [newMin, setNewMin] = useState(temp_lower);\n  const [newMax, setNewMax] = useState(temp_upper);\n  const [newUppper, setNewUpper] = useState(bounds[3]);\n  const [newThird, setNewThird] = useState(bounds[2]);\n  const [newSecond, setNewSecond] = useState(bounds[1]);\n  const [newLower, setNewLower] = useState(bounds[0]);\n  const [newBounds, setNewBounds] = useState(bounds);\n  const [isEven, setIsEven] = useState(true);\n\n  useEffect(() => {\n    if (!unit) {\n      setNewMin(newMin * 1.8 + 32);\n      setNewMax(newMax * 1.8 + 32);\n    } else {\n      setNewMin((newMin - 32) / 1.8);\n      setNewMax((newMax - 32) / 1.8);\n    }\n  }, [unit]);\n\n  // update bounds when number inputs change\n  useEffect(() => {\n    setNewBounds([newLower, newSecond, newThird, newUppper]);\n  }, [newLower, newSecond, newThird, newUppper]);\n\n  // pass the new min, max, bounds, continuity to the parent level\n  useEffect(() => {\n    getDataFromChild({\n      newMax: newMax,\n      newMin: newMin,\n      newBounds: newBounds,\n      continuous: continuous,\n    });\n  }, [newMax, newMin, newBounds, continuous]);\n\n  const toggleDiscrete = () => {\n    setContinuous(!continuous);\n  };\n\n  const toggleEvenSpace = () => {\n    setIsEven(!isEven);\n  };\n\n  let legendScale = d3.scaleLinear().domain([max, min]).range([0, innerHeight]);\n\n  //handle even distribution\n  useEffect(() => {\n    if (isEven) {\n      setNewLower(newMin + (newMax - newMin) / 5);\n      setNewSecond(newMin + ((newMax - newMin) * 2) / 5);\n      setNewThird(newMin + ((newMax - newMin) * 3) / 5);\n      setNewUpper(newMin + ((newMax - newMin) * 4) / 5);\n    }\n  }, [isEven, newMax, newMin]);\n\n  return (\n    <>\n      <div className=\"row\" id=\"continue-or-discrete\">\n        <div className=\"col-6\">\n          <input\n            type={\"checkbox\"}\n            checked={continuous}\n            id=\"continue\"\n            onChange={toggleDiscrete}\n          ></input>\n          <label htmlFor=\"continue\">Continuous</label>\n        </div>\n        <div className=\"col-6\">\n          <input\n            type={\"checkbox\"}\n            id=\"discrete\"\n            checked={!continuous}\n            onChange={toggleDiscrete}\n          ></input>\n          <label htmlFor=\"discrete\">Discrete</label>\n        </div>\n      </div>\n      <div className=\"row mt-3\" id=\"primary-legend-area\">\n        <div className=\"col-8\" id=\"min-max-bounds\">\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Max: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newUppper}\n                value={newMax.toFixed(1)}\n                onChange={setNewMax}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Upper Bound: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newThird}\n                max={newMax}\n                disabled={isEven}\n                value={newUppper.toFixed(1)}\n                onChange={setNewUpper}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Third Bound:</label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newSecond}\n                max={newUppper}\n                disabled={isEven}\n                value={newThird.toFixed(1)}\n                onChange={setNewThird}\n              />\n            </div>\n          </div>\n\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Second Bound:</label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newLower}\n                max={newThird}\n                disabled={isEven}\n                value={newSecond.toFixed(1)}\n                onChange={setNewSecond}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Lower Bound: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                min={newMin}\n                max={newSecond}\n                disabled={isEven}\n                value={newLower.toFixed(1)}\n                onChange={setNewLower}\n              />\n            </div>\n          </div>\n          <div className=\"row numeric-input\">\n            <div className=\"col-8\">\n              <label>Min: </label>\n            </div>\n            <div className=\"col-4\">\n              <NumericInput\n                size={3}\n                max={newLower}\n                value={newMin.toFixed(1)}\n                onChange={setNewMin}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4\" id=\"primary-legend\">\n          <div className=\"row ms-1\">\n            <svg\n              width={svgWidth}\n              height={svgHeight}\n              className=\"primary-legend-bars\"\n            >\n              <g\n                className=\"discrete-color-legend\"\n                transform={`translate(${margin.left},${margin.top})`}\n              >\n                <rect\n                  x={10}\n                  y={legendScale(newMax)}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[3]) - legendScale(newMax)}\n                  fill={discreteColors[4]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[3])}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[2]) - legendScale(newBounds[3])}\n                  fill={discreteColors[3]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[2])}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[1]) - legendScale(newBounds[2])}\n                  fill={discreteColors[2]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[1])}\n                  width={legendRectSize}\n                  height={legendScale(newBounds[0]) - legendScale(newBounds[1])}\n                  fill={discreteColors[1]}\n                ></rect>\n                <rect\n                  x={10}\n                  y={legendScale(newBounds[0])}\n                  width={legendRectSize}\n                  height={legendScale(newMin) - legendScale(newBounds[0])}\n                  fill={discreteColors[0]}\n                ></rect>\n              </g>\n              <g\n                className=\"continuous-color-legend\"\n                transform={`translate(${margin.left + 62.5},${margin.top})`}\n              >\n                {binColors.map((c, i) => {\n                  return (\n                    <rect\n                      x={0}\n                      y={(innerHeight / 20) * (binColors.length - 1 - i)}\n                      width={innerHeight / 20}\n                      height={innerHeight / 20}\n                      fill={c}\n                    ></rect>\n                  );\n                })}\n                <text\n                  x={-3}\n                  y={0}\n                  dy={\"0.79em\"}\n                  textAnchor={\"end\"}\n                  fontSize=\"8pt\"\n                >\n                  {max.toFixed(1)}\n                </text>\n                <text\n                  x={-3}\n                  y={innerHeight - 9}\n                  dy={\"0.79em\"}\n                  textAnchor={\"end\"}\n                  fontSize=\"8pt\"\n                >\n                  {min.toFixed(1)}\n                </text>\n                <line\n                  x1={-2}\n                  y1={legendScale(newMax)}\n                  x2={innerHeight / 20 + 2}\n                  y2={legendScale(newMax)}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  id=\"mark-top\"\n                ></line>\n                <line\n                  x1={-2}\n                  y1={legendScale(newMin)}\n                  x2={innerHeight / 20 + 2}\n                  y2={legendScale(newMin)}\n                  stroke=\"black\"\n                  strokeWidth={2}\n                  id=\"mark-bottom\"\n                ></line>\n              </g>\n            </svg>\n          </div>\n        </div>\n      </div>\n      <div className=\"row mt-1\" id=\"even-space\">\n        <div className=\"col-1\">\n          <input\n            type={\"checkbox\"}\n            id=\"even\"\n            onChange={toggleEvenSpace}\n            checked={isEven}\n          ></input>\n        </div>\n        <div className=\"col-10\">\n          <label htmlFor=\"even\">Evenly Spaced Bounds</label>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { PrimaryLegend } from \"./PrimaryLegend\";\nimport { useState } from \"react\";\n\nexport const PrimarySelection = ({\n  dropdownOptions,\n  currentMinMax,\n  bounds,\n  colorScale,\n  getDataFromPrimarySelection,\n  unit,\n}) => {\n  // let optionValueList = dropdownOptions.map((d) => d.noncaps);\n  // const [selectedValue, setSelectedValue] = useState(\"temperature\");\n  const selectedValue = \"temperature\";\n\n  return (\n    <>\n      <label htmlFor=\"data-options\" id=\"primary-label\">\n        <strong>Primary Selection Criteria</strong>\n      </label>\n      <select\n        className=\"form-control\"\n        id={\"data-options\"}\n        value={selectedValue}\n        disabled={true}\n      >\n        {dropdownOptions.map((l) => {\n          return (\n            <option key={l.caps} value={l.noncaps}>\n              {l.capsUnits}\n            </option>\n          );\n        })}\n      </select>\n      <PrimaryLegend\n        min={currentMinMax.min1}\n        max={currentMinMax.max1}\n        bounds={bounds}\n        colorScale={colorScale}\n        getDataFromChild={getDataFromPrimarySelection}\n        unit={unit}\n      />\n    </>\n  );\n};\n","import NumericInput from \"react-numeric-input\";\nimport { useState, useEffect } from \"react\";\n\nexport const SecondarySelection = ({\n  dropdownOptions,\n  currentMinMax,\n  // onSelectValueChange,\n  getDataFromSecondarySelection,\n}) => {\n  const hr_lower = 2;\n  const hr_upper = 12;\n\n  const selectedValue = \"humidity ratio\";\n\n  const [newMin, setNewMin] = useState(hr_lower);\n  const [newMax, setNewMax] = useState(hr_upper);\n\n  // change the new min, max when the secondary selection updates\n  // useEffect(() => {\n  //   setNewMax(max);\n  //   setNewMin(min);\n  // }, [selectedValue]);\n\n  // pass the new min, max to the parent level\n  useEffect(() => {\n    getDataFromSecondarySelection({\n      newMin: newMin,\n      newMax: newMax,\n    });\n  }, [newMin, newMax]);\n\n  return (\n    <>\n      <label htmlFor=\"data-options\" id=\"secondary-label\">\n        <strong>Secondary Selection Criteria</strong>\n      </label>\n      <select\n        className=\"form-control\"\n        id={\"data-options\"}\n        value={selectedValue}\n        disabled={true}\n      >\n        {dropdownOptions.map((l) => {\n          return (\n            <option key={l.caps} value={l.noncaps}>\n              {l.capsUnits}\n            </option>\n          );\n        })}\n      </select>\n      <br></br>\n      <div className=\"row numeric-input mt-3\">\n        <div className=\"col-5\">\n          <label>Max: </label>\n        </div>\n        <div className=\"col-7 button\">\n          <NumericInput\n            size={3}\n            min={newMin}\n            value={newMax}\n            onChange={setNewMax}\n            step={0.1}\n          />\n        </div>\n      </div>\n      <div className=\"row numeric-input\">\n        <div className=\"col-5\">\n          <label>Min: </label>\n        </div>\n        <div className=\"col-7 button\">\n          <NumericInput\n            size={3}\n            max={newMax}\n            value={newMin}\n            onChange={setNewMin}\n            step={0.1}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NumericField } from \"../NumericalField\";\nimport { PrimarySelection } from \"./PrimarySelection\";\nimport { SecondarySelection } from \"./SecondarySelection\";\nimport { SaveImgButtons } from \"../SaveImgButtons\";\n\nexport const SideBar = ({\n  dropdownOptions,\n  currentMinMax,\n  bounds,\n  colorScale,\n  getPrimaryFilters,\n  getSecondaryFilters,\n  getPeriodFilters,\n  unit,\n}) => {\n  return (\n    <div className=\"row\" id=\"side-bar\">\n      <PrimarySelection\n        dropdownOptions={dropdownOptions}\n        currentMinMax={currentMinMax}\n        bounds={bounds}\n        colorScale={colorScale}\n        getDataFromPrimarySelection={getPrimaryFilters}\n        unit={unit}\n      />\n      <SecondarySelection\n        dropdownOptions={dropdownOptions}\n        currentMinMax={currentMinMax}\n        getDataFromSecondarySelection={getSecondaryFilters}\n      />\n      <NumericField getNumericInputs={getPeriodFilters} />\n      <SaveImgButtons />\n    </div>\n  );\n};\n","import { SideBar } from \"./SideBar\";\nimport { ItemHeader } from \"../ItemHeader\";\nimport { useState, useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport {\n  updateDiscreteColors,\n  colorScaleDiscrete,\n  calcStats,\n} from \"../FieldChart/calColors\";\nimport { WaterMark } from \"../FieldChart/WaterMark\";\nimport { dayToDate } from \"../NumericalField\";\n\nexport const NV = ({ text, id, dataObj, weatherStation, unit, turn }) => {\n  const width = 980;\n  const height = 340;\n  const margin = { top: 60, right: 0, bottom: 240, left: 35 };\n\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n\n  const params = dataObj.dataParams;\n  const data = dataObj.data;\n  const labels = params.map((d) => d.labels);\n\n  let currentMinMax = {\n    min1: params[3].min,\n    max1: params[3].max,\n    min2: params[10].min,\n    max2: params[10].max,\n  };\n  let currentBounds = params[3].bounds;\n  let currentColorScale = d3\n    .scaleLinear()\n    .domain([\n      currentMinMax.min1,\n      (currentMinMax.max1 + currentMinMax.min1) / 2,\n      currentMinMax.max1,\n    ])\n    .range([\"#006666\", \"#00cc66\", \"#339933\"]);\n\n  //close button\n  const [isClosed, setIsClosed] = useState(false);\n  const closeInstance = (closeSignal) => {\n    setIsClosed(closeSignal);\n  };\n\n  // const [primarySelectionIdx, setPrimarySelectionIdx] = useState(3);\n  // const [secondarySelectionIdx, setSecondarySelectionIdx] = useState(10);\n\n  let primarySelectionIdx = 3;\n  let secondarySelectionIdx = 10;\n\n  // min, max and bounds got from all inputs in the primary selection\n  const [primaryFilters, setPrimaryFilters] = useState({\n    newMax: params[3].max,\n    newMin: params[3].min,\n    newBounds: params[3].bounds,\n    continuous: true,\n  });\n\n  const [secondaryFilters, setSecondaryFilters] = useState({\n    newMax: params[10].max,\n    newMin: params[10].min,\n  });\n\n  const [periodFilters, setPeriodFilters] = useState({\n    startDate: 1,\n    endDate: 365,\n    startHour: 0,\n    endHour: 23,\n  });\n\n  let discreteColors = updateDiscreteColors(\n    currentMinMax.min1,\n    currentMinMax.max1,\n    currentBounds,\n    currentColorScale\n  );\n\n  // d3 scales\n  let xScale = d3.scaleLinear().domain([0.5, 365.5]).range([0, innerWidth]);\n  let yScale = d3.scaleLinear().domain([0, 23]).range([innerHeight, 0]);\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const hours = [\"0\", \"12h\", \"24h\"];\n  let monthScale = d3.scaleBand().domain(months).range([0, innerWidth]);\n  let hourScale = d3.scalePoint().domain(hours).range([innerHeight, 0]);\n\n  const getDisplayData = (data, filter1, filter2, filter3) => {\n    let filteredData = data.filter(\n      (d) =>\n        d.data[primarySelectionIdx] >= filter1.newMin &&\n        d.data[primarySelectionIdx] <= filter1.newMax &&\n        d.data[secondarySelectionIdx] >= filter2.newMin &&\n        d.data[secondarySelectionIdx] <= filter2.newMax &&\n        d.date >= filter3.startDate &&\n        d.date <= filter3.endDate &&\n        d.clock >= filter3.startHour &&\n        d.clock <= filter3.endHour\n    );\n    return filteredData;\n  };\n\n  const getStats = (data, filters) => {\n    let numHoursBounds = [0, 0, 0, 0, 0];\n    data.forEach((d) => {\n      calcStats(d.data[primarySelectionIdx], filters, numHoursBounds);\n    });\n    return numHoursBounds;\n  };\n\n  let displayData = useMemo(() => {\n    return getDisplayData(\n      data,\n      primaryFilters,\n      secondaryFilters,\n      periodFilters\n    );\n  }, [data, primaryFilters, secondaryFilters, periodFilters]);\n\n  let numHours = displayData.length;\n\n  let numHoursBounds = useMemo(() => {\n    return getStats(displayData, primaryFilters);\n  }, [displayData, primaryFilters]);\n\n  let bounds = primaryFilters.newBounds;\n\n  // Iris chart\n  let radius = 140; // Outer heat radius in pixels\n  let heatmapThickness = 0.3; // Fraction of radius\n  let dotRadius = 1.5;\n  let outerRadiusMonth = radius * (1 - heatmapThickness * 1.1);\n  let angleScale = d3\n    .scaleLinear()\n    .domain([0, 364])\n    .range([0, Math.PI * 2]);\n  let radiusHourScale = d3\n    .scaleLinear()\n    .domain([0, 23])\n    .range([1 - heatmapThickness, 1]); // Min and max distance from center in fraction of radius\n  let dotRadiusScale = d3\n    .scaleLinear()\n    .domain([0, 23])\n    .range([dotRadius * 0.8, dotRadius]);\n  let centerCoordinates = radius + dotRadius;\n  let angleScaleMonth = d3\n    .scaleLinear()\n    .domain([0, 12])\n    .range([0, 2 * Math.PI]);\n\n  if (!isClosed) {\n    return (\n      <>\n        <br></br>\n        <div className=\"container\" id={\"item\" + id}>\n          <ItemHeader id={id} text={text} clickToClose={closeInstance} />\n          <div className=\"row mt-3\">\n            <div className=\"col-3\">\n              <SideBar\n                dropdownOptions={labels}\n                currentMinMax={currentMinMax}\n                bounds={currentBounds}\n                colorScale={currentColorScale}\n                getPrimaryFilters={setPrimaryFilters}\n                getSecondaryFilters={setSecondaryFilters}\n                getPeriodFilters={setPeriodFilters}\n                unit={unit}\n              />\n            </div>\n            <div className=\"col-9\">\n              <div className=\"row\" id=\"rectangular-field\">\n                <svg width={width} height={height}>\n                  <g\n                    transform={`translate(${margin.left},${margin.top})`}\n                    id=\"svg-field-chart\"\n                  >\n                    {displayData.map((d) => {\n                      return (\n                        <circle\n                          cx={xScale(d.date)}\n                          cy={yScale(d.clock)}\n                          r={1.2}\n                          fill={\n                            primaryFilters.continuous\n                              ? currentColorScale(d.data[primarySelectionIdx])\n                              : colorScaleDiscrete(\n                                  d.data[primarySelectionIdx],\n                                  currentBounds,\n                                  currentMinMax.min1,\n                                  currentMinMax.max1,\n                                  discreteColors\n                                )\n                          }\n                        ></circle>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left}, ${\n                      innerHeight + margin.top\n                    })`}\n                    id=\"axis-months\"\n                  >\n                    {months.map((d) => {\n                      return (\n                        <g>\n                          <text\n                            x={monthScale(d)}\n                            y={10}\n                            dy={\"0.71em\"}\n                            fontSize={12}\n                          >\n                            {d}\n                          </text>\n                          <line\n                            x1={monthScale(d) + 1.2}\n                            y1={3}\n                            x2={monthScale(d) + 1.2}\n                            y2={7}\n                            stroke={\"black\"}\n                          ></line>\n                        </g>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left},${margin.top})`}\n                    id=\"axis-hours\"\n                  >\n                    {hours.map((d) => {\n                      return (\n                        <g>\n                          <text\n                            x={-8}\n                            y={hourScale(d)}\n                            textAnchor=\"end\"\n                            dy={\"0.32em\"}\n                            fontSize={12}\n                          >\n                            {d}\n                          </text>\n                          <line\n                            x1={-2}\n                            y1={hourScale(d)}\n                            x2={-6}\n                            y2={hourScale(d)}\n                            stroke={\"black\"}\n                          ></line>\n                        </g>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left}, ${\n                      height - margin.bottom + 50\n                    })`}\n                    id=\"axis-legend\"\n                  >\n                    <rect\n                      x={0}\n                      y={-9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[0]}\n                    ></rect>\n                    <text\n                      x={12}\n                      y={0}\n                      fontSize={11}\n                    >{`${primaryFilters.newMin.toFixed(\n                      1\n                    )} to ${bounds[0].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[0]} hours (${(\n                      (numHoursBounds[0] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[1]}\n                    ></rect>\n                    <text x={12} y={18} fontSize={11}>{`${bounds[0].toFixed(\n                      1\n                    )} to ${bounds[1].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[1]} hours (${(\n                      (numHoursBounds[1] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={27}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[2]}\n                    ></rect>\n                    <text x={12} y={36} fontSize={11}>{`${bounds[1].toFixed(\n                      1\n                    )} to ${bounds[2].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[2]} hours (${(\n                      (numHoursBounds[2] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={45}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[3]}\n                    ></rect>\n                    <text x={12} y={54} fontSize={11}>{`${bounds[2].toFixed(\n                      1\n                    )} to ${bounds[3].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[3]} hours (${(\n                      (numHoursBounds[3] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={63}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[4]}\n                    ></rect>\n                    <text x={12} y={72} fontSize={11}>{`${bounds[3].toFixed(\n                      1\n                    )} to ${primaryFilters.newMax.toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[4]} hours (${(\n                      (numHoursBounds[4] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n\n                    <text\n                      className=\"wtm-text\"\n                      x={innerWidth + margin.left - 50}\n                      y={-95}\n                      fontSize={11}\n                    >{`Total Hours: ${numHours} hours`}</text>\n                  </g>\n                  <g\n                    transform={`translate(${innerWidth + margin.left - 15},${\n                      height - margin.bottom + 45\n                    })`}\n                    id=\"axis-watermark-linear\"\n                  >\n                    <WaterMark\n                      className={\"wtm-text-linear\"}\n                      weatherStation={weatherStation}\n                      primarySelection={labels[primarySelectionIdx].caps}\n                      secondarySelection={labels[secondarySelectionIdx].caps}\n                      unit1={labels[primarySelectionIdx].units}\n                      unit2={labels[secondarySelectionIdx].units}\n                      min1={primaryFilters.newMin.toFixed(1)}\n                      max1={primaryFilters.newMax.toFixed(1)}\n                      min2={secondaryFilters.newMin.toFixed(1)}\n                      max2={secondaryFilters.newMax.toFixed(1)}\n                      startDate={dayToDate(periodFilters.startDate)}\n                      endDate={dayToDate(periodFilters.endDate)}\n                      startHour={periodFilters.startHour}\n                      endHour={periodFilters.endHour}\n                      numHours={numHours}\n                      turn={turn}\n                      fontSize={12}\n                      spacing={15}\n                    />\n                  </g>\n                </svg>\n              </div>\n              <div className=\"row\" id=\"iris-field\">\n                <svg width={width} height={height}>\n                  <g\n                    transform={`translate(${margin.left + 30},${\n                      margin.top - 40\n                    })`}\n                    id=\"svg-iris-chart\"\n                  >\n                    <circle\n                      cx={radius + dotRadius}\n                      cy={radius + dotRadius}\n                      r={radius + 2 * dotRadius}\n                      fill={\"none\"}\n                      stroke={\"#635f5d\"}\n                      strokeWidth={1}\n                      id=\"outer-circle\"\n                    ></circle>\n                    <circle\n                      cx={radius + dotRadius}\n                      cy={radius + dotRadius}\n                      r={radius * (1 - heatmapThickness * 1.05)}\n                      fill={\"none\"}\n                      stroke={\"#635f5d\"}\n                      strokeWidth={1}\n                      id=\"inner-circle\"\n                    ></circle>\n                    {displayData.map((d) => {\n                      return (\n                        <circle\n                          cx={\n                            radiusHourScale(d.clock) *\n                              radius *\n                              Math.cos(angleScale(d.date) - Math.PI * 0.5) +\n                            centerCoordinates\n                          }\n                          cy={\n                            radiusHourScale(d.clock) *\n                              radius *\n                              Math.sin(angleScale(d.date) - Math.PI * 0.5) +\n                            centerCoordinates\n                          }\n                          r={dotRadiusScale(d.clock)}\n                          fill={\n                            primaryFilters.continuous\n                              ? currentColorScale(d.data[primarySelectionIdx])\n                              : colorScaleDiscrete(\n                                  d.data[primarySelectionIdx],\n                                  currentBounds,\n                                  currentMinMax.min1,\n                                  currentMinMax.max1,\n                                  discreteColors\n                                )\n                          }\n                        ></circle>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left + 30},${\n                      margin.top - 40\n                    })`}\n                    id=\"ring-months\"\n                  >\n                    {dataObj.monthlyData.map((d) => {\n                      return (\n                        <path\n                          d={d3\n                            .arc()\n                            .innerRadius(outerRadiusMonth - 10)\n                            .outerRadius(outerRadiusMonth)\n                            .startAngle(angleScaleMonth(d.month))\n                            .endAngle(angleScaleMonth(d.month + 1))\n                            .padAngle(0.007)(d)}\n                          fill={currentColorScale(d.data[primarySelectionIdx])}\n                          transform={`translate(${centerCoordinates},${centerCoordinates})`}\n                        ></path>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${margin.left + 30},${\n                      margin.top - 40\n                    })`}\n                    id=\"axis-months-iris\"\n                  >\n                    {months.map((d, i) => {\n                      return (\n                        <text\n                          x={0}\n                          y={0}\n                          dy={\"0.79em\"}\n                          fontSize={12}\n                          textAnchor={i < 6 ? \"start\" : \"end\"}\n                          transform={`translate(${\n                            radius *\n                              Math.cos(\n                                angleScale(15 + 30 * i) - Math.PI * 0.5\n                              ) *\n                              1.05 +\n                            centerCoordinates\n                          },${\n                            radius *\n                              Math.sin(\n                                angleScale(15 + 30 * i) - Math.PI * 0.5\n                              ) *\n                              1.05 +\n                            centerCoordinates\n                          }) rotate(${((15 + 30 * i) % 180) - 90})`}\n                        >\n                          {d}\n                        </text>\n                      );\n                    })}\n                  </g>\n                  <g\n                    transform={`translate(${innerWidth + margin.left - 550},${\n                      height - margin.bottom\n                    })`}\n                    id=\"axis-watermark-iris\"\n                  >\n                    <WaterMark\n                      className={\"wtm-text-iris\"}\n                      weatherStation={weatherStation}\n                      primarySelection={labels[primarySelectionIdx].caps}\n                      secondarySelection={labels[secondarySelectionIdx].caps}\n                      unit1={labels[primarySelectionIdx].units}\n                      unit2={labels[secondarySelectionIdx].units}\n                      min1={primaryFilters.newMin.toFixed(1)}\n                      max1={primaryFilters.newMax.toFixed(1)}\n                      min2={secondaryFilters.newMin.toFixed(1)}\n                      max2={secondaryFilters.newMax.toFixed(1)}\n                      startDate={dayToDate(periodFilters.startDate)}\n                      endDate={dayToDate(periodFilters.endDate)}\n                      startHour={periodFilters.startHour}\n                      endHour={periodFilters.endHour}\n                      numHours={numHours}\n                      turn={turn}\n                      fontSize={12}\n                      spacing={15}\n                    />\n                  </g>\n                  <g\n                    transform={`translate(${margin.left + innerWidth - 550}, ${\n                      height - margin.bottom + 150\n                    })`}\n                    id=\"axis-legend-iris\"\n                  >\n                    <rect\n                      x={0}\n                      y={-9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[0]}\n                    ></rect>\n                    <text\n                      x={12}\n                      y={0}\n                      fontSize={11}\n                    >{`${primaryFilters.newMin.toFixed(\n                      1\n                    )} to ${bounds[0].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[0]} hours (${(\n                      (numHoursBounds[0] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[1]}\n                    ></rect>\n                    <text x={12} y={18} fontSize={11}>{`${bounds[0].toFixed(\n                      1\n                    )} to ${bounds[1].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[1]} hours (${(\n                      (numHoursBounds[1] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={27}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[2]}\n                    ></rect>\n                    <text x={12} y={36} fontSize={11}>{`${bounds[1].toFixed(\n                      1\n                    )} to ${bounds[2].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[2]} hours (${(\n                      (numHoursBounds[2] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={45}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[3]}\n                    ></rect>\n                    <text x={12} y={54} fontSize={11}>{`${bounds[2].toFixed(\n                      1\n                    )} to ${bounds[3].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[3]} hours (${(\n                      (numHoursBounds[3] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={63}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[4]}\n                    ></rect>\n                    <text x={12} y={72} fontSize={11}>{`${bounds[3].toFixed(\n                      1\n                    )} to ${primaryFilters.newMax.toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[4]} hours (${(\n                      (numHoursBounds[4] / 8760) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                  </g>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else return null;\n};\n","/*'The function and subfunctions defined herein come with no warranty or certification of fitness for any purpose\n\n'Do not use these functions for conditions outside boundaries defined by their original sources.\n'Subfunctions use equations from the following sources:\n    'ASHRAE Fundamentals, 2005, SI Edition Chapter 6\n\n\n'The function will calculate various properties of moist air. Properties calculated include Wet Bulb, Dew Point, Relative Humidity, Humidity Ratio, Vapor Pressure, Degree of Saturation, enthalpy, specific volume of dry air, and moist air density.\n'The function requires input of: barometric pressure, temperature, and one other parameter.  This third parameter can be Wet Bulb, Dew Point, RH, or Humidity Ratio.\n'Also included are STD_Press(Elevation) and STD_Temp(Elevation)\n\n'Psych was originally made for the WCEC to have simular syntax to a troublesome plugin we were already using.\n'Psych will calculate properties of most air. It can calculate\n'Wet Bulb, Dew Point, RH, Humidity Ratio, Vapor Pressure, degree of saturation, enthalpy, or specific volume of dry air, or moist air density\n'based up Pressure, Temperature, and one other parameter.  This other parameter can be Wet Bulb, Dew Point, RH, Humidity Ratio, or Enthalpy.\n\n'psych(P,Tdb,InV,InNum,OutNum, SIq)\n\n'Where\n'P is the barometric pressure in PSI or Pa.\n'Tdb is the dry bulb in F or C\n'InV is the value of the input parameter \n'InNum is the number that corrisponds to your choice of InVs parameter (1 through 4 or 7 respectivly)\n'OutNum is the value requested.  It should be an integer between 1 and 10 excluding 8.  See below\n'SIq is the optional unit selector.  true is IP, false is SI.  true/IP is default if ommitted.\n\n'The Numbers for InNum and OutNum are\n\n'1 Web Bulb Temp            F or C                              Valid for Input\n'2 Dew point                F or C                              Valid for input\n'3 RH                       between 0 and 1                     Valid for input\n'4 Humidity Ratio           Mass Water/ Mass Dry Air            Valid for input\n'5 Water Vapor Pressure     PSI or Pa\n'6 Degree of Saturation     between 0 and 1\n'7 Enthalpy                 BTU/lb dry air or kJ/kg dry air     Valid for input\n    'Warning 0 state for IP is ~0F, 0% RH ,and  1 ATM, 0 state for SI is 0C, 0%RH and 1 ATM\n'8 NOT VALID, Should be entropy\n'9 Specific Volume          ft3/lbm or m3/kg dry air\n'10 Moist Air Density       lb/ft3 or m3/kg*/\n\nfunction psych(p, tdb, inv, innum, outnum, si_bool) {\n  if (si_bool === undefined) si_bool = true;\n\n  var twb, dew, rh, w, h, out;\n\n  if (!si_bool) {\n    //If metric\n    p = p / 1000; //'Turns Pa to kPA\n    if (innum === 1) twb = inv;\n    if (innum === 2) dew = inv;\n    if (innum === 3) rh = inv;\n    if (innum === 4) w = inv;\n    if (innum === 7) h = inv;\n  } else {\n    //'This section turns US Customary Units to SI units\n    tdb = (tdb - 32) / 1.8;\n    p = (p * 4.4482216152605) / Math.pow(0.0254, 2) / 1000; //'PSI to kPa  Conversion factor exact\n    if (innum === 1) twb = (inv - 32) / 1.8; //'F to C\n    if (innum === 2) dew = (inv - 32) / 1.8; //'F to C\n    if (innum === 3) rh = inv; //'no need to change\n    if (innum === 4) w = inv; //'no need to change\n    if (innum === 7) h = (inv * 1.055056) / 0.45359237 - 17.884444444; //' 1.055056 kJ/(ISO_BTU)  .45359237 kg/lb   17.884444 kJ/kg 0 pt difference [Dry air at 0C and  dry air at 0F are both 0 enthalpy in their respective units]\n  }\n\n  if (outnum === 3 || outnum === 1) {\n    //'Find RH\n    if (innum === 1) rh = rel_hum(tdb, twb, p); //'given Twb\n    if (innum === 2) rh = sat_press(dew) / sat_press(tdb); //'given Dew\n    if (innum === 4) rh = part_press(p, w) / sat_press(tdb); //'given W\n    if (innum === 7) {\n      w = (1.006 * tdb - h) / -(2501 + 1.86 * tdb); //' Algebra from 2005 ASHRAE Handbook - Fundamentals - SI P6.9 eqn 32\n      rh = part_press(p, w) / sat_press(tdb);\n    }\n  } else {\n    //'find W\n    if (innum === 1) w = hum_rat(tdb, twb, p); //'Given Twb\n    if (innum === 2) w = (0.621945 * sat_press(dew)) / (p - sat_press(dew)); //'Given Dew - Equation taken from eq 20 of 2009 Fundemental chapter 1\n    if (innum === 3) w = hum_rat2(tdb, rh, p); //'Given RH\n    if (innum === 7) w = (1.006 * tdb - h) / -(2501 + 1.86 * tdb); //'Given h - Algebra from 2005 ASHRAE Handbook - Fundamentals - SI P6.9 eqn 32\n  }\n\n  //'P, Tdb, and W are now availible\n  if (outnum === 1) out = wet_bulb(tdb, rh, p); //'requesting Twb\n  if (outnum === 2) out = dew_point(p, w); //'requesting Dew\n  if (outnum === 3) out = rh; //'Request RH\n  if (outnum === 4) out = w; //'Request W\n  if (outnum === 5) out = part_press(p, w) * 1000; //'Request Pw\n  if (outnum === 6) out = w / hum_rat2(tdb, 1, p); //'Request deg of sat\n  if (outnum === 7) out = enthalpy_air_h2o(tdb, w); //'Request enthalpy\n  if (outnum === 8) alert(\"No enthalpy equation\");\n  if (outnum === 9) out = 1 / dry_air_density(p, tdb, w); //'Request specific volume\n  if (outnum === 10) out = dry_air_density(p, tdb, w) * (1 + w); //'Request density\n\n  //'Convert to IP\n  if (si_bool) {\n    if (outnum === 1 || outnum === 2) out = 1.8 * out + 32; //'Temperature\n    //'OutNum 3 and 4 (RH and W) are unitless\n    if (outnum === 5) out = (out * Math.pow(0.0254, 2)) / 4.448230531; //'Pressure\n    if (outnum === 7) out = ((out + 17.88444444444) * 0.45359237) / 1.055056; //'Enthalpy\n    if (outnum === 9) out = (out * 0.45359265) / Math.pow(12 * 0.0254, 3); //'Specific Volume\n    if (outnum === 10) out = (out * Math.pow(12 * 0.0254, 3)) / 0.45359265; //'Density\n  }\n\n  return out;\n}\n\nfunction part_press(p, w) {\n  //' Function to compute partial vapor pressure in [kPa]\n  //' From page 6.9 equation 38 in ASHRAE Fundamentals handbook (2005)\n  //'   P = ambient pressure [kPa]\n  //'   W = humidity ratio [kg/kg dry air]\n\n  return (p * w) / (0.62198 + w);\n}\n\nfunction sat_press(tdb) {\n  //' Function to compute saturation vapor pressure in [kPa]\n  //' ASHRAE Fundamentals handbood (2005) p 6.2, equation 5 and 6\n  //'   Tdb = Dry bulb temperature [degC]\n  //' Valid from -100C to 200 C\n\n  var c1 = -5674.5359,\n    c2 = 6.3925247,\n    c3 = -0.009677843,\n    c4 = 0.00000062215701,\n    c5 = 2.0747825e-9,\n    c6 = -9.484024e-13,\n    c7 = 4.1635019,\n    c8 = -5800.2206,\n    c9 = 1.3914993,\n    c10 = -0.048640239,\n    c11 = 0.000041764768,\n    c12 = -0.000000014452093,\n    c13 = 6.5459673;\n\n  var tk = tdb + 273.15; //'Converts from degC to degK\n  var e = 2.71828;\n  if (tk <= 273.15)\n    return (\n      Math.pow(\n        e,\n        c1 / tk +\n          c2 +\n          c3 * tk +\n          c4 * Math.pow(tk, 2) +\n          c5 * Math.pow(tk, 3) +\n          c6 * Math.pow(tk, 4) +\n          c7 * Math.log(tk)\n      ) / 1000\n    );\n  else\n    return (\n      Math.pow(\n        e,\n        c8 / tk +\n          c9 +\n          c10 * tk +\n          c11 * Math.pow(tk, 2) +\n          c12 * Math.pow(tk, 3) +\n          c13 * Math.log(tk)\n      ) / 1000\n    );\n}\n\nfunction hum_rat(tdb, twb, p) {\n  //' Function to calculate humidity ratio [kg H2O/kg air]\n  //' Given dry bulb and wet bulb temp inputs [degC]\n  //' ASHRAE Fundamentals handbood (2005)\n  //'   Tdb = Dry bulb temperature [degC]\n  //'   Twb = Wet bulb temperature [degC]\n  //'   P = Ambient Pressure [kPa]\n\n  var pws = sat_press(twb),\n    ws = (0.62198 * pws) / (p - pws); //' Equation 23, p6.8\n  if (tdb >= 0)\n    return (\n      ((2501 - 2.326 * twb) * ws - 1.006 * (tdb - twb)) /\n      (2501 + 1.86 * tdb - 4.186 * twb)\n    );\n  //' Equation 35, p6.9\n  else\n    return (\n      ((2830 - 0.24 * twb) * ws - 1.006 * (tdb - twb)) /\n      (2830 + 1.86 * tdb - 2.1 * twb)\n    ); //' Equation 37, p6.9\n}\n\nfunction hum_rat2(tdb, rh, p) {\n  //' Function to calculate humidity ratio [kg H2O/kg air]\n  //' Given dry bulb and wet bulb temperature inputs [degC]\n  //' ASHRAE Fundamentals handbood (2005)\n  //'   Tdb = Dry bulb temperature [degC]\n  //'   RH = Relative Humidity [Fraction or %]\n  //'   P = Ambient Pressure [kPa]\n\n  var pws = sat_press(tdb);\n  return (0.62198 * rh * pws) / (p - rh * pws); //' Equation 22, 24, p6.8\n}\n\nfunction rel_hum(tdb, twb, p) {\n  //' Calculates relative humidity ratio\n  //' ASHRAE Fundamentals handbood (2005)\n  //'   Tdb = Dry bulb temperature [degC]\n  //'   Twb = Wet bulb temperature [degC]\n  //'   P = Ambient Pressure [kPa]\n\n  var w = hum_rat(tdb, twb, p);\n  return part_press(p, w) / sat_press(tdb); //' Equation 24, p6.8\n}\n\n// function rel_hum2(tdb, w, p) {\n//   //' Calculates the relative humidity given:\n//   //'   Tdb = Dry bulb temperature [degC]\n//   //'   P = ambient pressure [kPa]\n//   //'   W = humidity ratio [kg/kg dry air]\n\n//   var Pw = part_press(p, w),\n//     Pws = sat_press(tdb);\n//   return Pw / Pws;\n// }\n\nfunction wet_bulb(tdb, rh, p) {\n  //' Calculates the Wet Bulb temp given dry blub temp [degC] and Relative Humidity\n  //' Uses Newton-Rhapson iteration to converge quickly\n  //'   Tdb = Dry bulb temperature [degC]\n  //'   RH = Relative humidity ratio [Fraction or %]\n  //'   P = Ambient Pressure [kPa]\n\n  var w_normal = hum_rat2(tdb, rh, p),\n    wet_bulb = tdb;\n  //' Solve to within 0.001% accuracy using Newton-Rhapson\n  var w_new = hum_rat(tdb, wet_bulb, p);\n  while (Math.abs((w_new - w_normal) / w_normal) > 0.00001) {\n    var w_new2 = hum_rat(tdb, wet_bulb - 0.001, p),\n      dw_dtwb = (w_new - w_new2) / 0.001;\n    wet_bulb = wet_bulb - (w_new - w_normal) / dw_dtwb;\n    w_new = hum_rat(tdb, wet_bulb, p);\n  }\n  return wet_bulb; //not sure about what this one was supposed to be returning...\n}\n\nfunction enthalpy_air_h2o(tdb, w) {\n  //' Calculates enthalpy in kJ/kg (dry air)\n  //'   Tdb = Dry bulb temperature [degC]\n  //'   W = Humidity Ratio [kg/kg dry air]\n\n  return 1.006 * tdb + w * (2501 + 1.86 * tdb); //' Calculations from 2005 ASHRAE Handbook - Fundamentals - SI P6.9 eqn 32\n}\n\nfunction dew_point(p, w) {\n  //' Function to compute the dew point temperature (deg C)\n  //' From page 6.9 equation 39 and 40 in ASHRAE Fundamentals handbook (2005)\n  //'   P = ambient pressure [kPa]\n  //'   W = humidity ratio [kg/kg dry air]\n  //'   Valid for Dew Points less than 93 C\n\n  var c14 = 6.54,\n    c15 = 14.526,\n    c16 = 0.7389,\n    c17 = 0.09486,\n    c18 = 0.4569;\n\n  var pw = part_press(p, w),\n    alpha = Math.log(pw),\n    tdp1 =\n      c14 +\n      c15 * alpha +\n      c16 * Math.pow(alpha, 2) +\n      c17 * Math.pow(alpha, 4) +\n      c18 * Math.pow(pw, 0.1984),\n    tdp2 = 6.09 + 12.608 * alpha + 0.4959 * Math.pow(alpha, 2);\n  if (tdp1 >= 0) return tdp1;\n  else return tdp2;\n}\n\nfunction dry_air_density(p, tdb, w) {\n  //' Function to compute the dry air density (kg_dry_air/m3), using pressure\n  //' [kPa], temperature [C] and humidity ratio\n  //' From page 6.8 equation 28 ASHRAE Fundamentals handbook (2005)\n  //' [rho_dry_air] = Dry_Air_Density(P, Tdb, w)\n  //' Note that total density of air-h2o mixture is:\n  //' rho_air_h2o = rho_dry_air * (1 + W)\n  //' gas constant for dry air\n\n  var r_da = 287.055;\n\n  return (1000 * p) / (r_da * (273.15 + tdb) * (1 + 1.6078 * w));\n}\n\n// function std_press(elevation) {\n//   //' Module to calculate the standard pressure [kPa] at given elevation (meters)\n//   //'   ASHRAE Fundamentals 2005 - chap 6, eqn 3\n//   //' Valid from -5000m to 11000m\n\n//   return Math.pow(101.325 * (1 - 0.0000225577 * elevation), 5.2559);\n// }\n\n// function std_temp(elevation) {\n//   //' Module to calculate the standard temperature [degC] at given elevation (meters)\n//   //'   ASHRAE Fundamentals 2005 - chap 6, eqn 4\n//   //' Valid from -5000m to 11000m\n\n//   return 15 - 0.0065 * elevation;\n// }\n\n//numerical method to find dry bulb temp intercept for a given humidity ratio and 100% rh\n// function tempFromHrRH(hr, rh, si_bool) {\n//   let p = 101353;\n//   if (si_bool) p = 14.7;\n\n//   let lT = -50,\n//     uT = 50;\n//   let lH = psych(p, lT, rh, 3, 4, si_bool),\n//     uH = psych(p, uT, rh, 3, 4, si_bool);\n//   while (Math.abs(hr - lH) > 0.1 || Math.abs(hr - uH) > 0.1) {\n//     if (hr < lH) {\n//       lT -= 20;\n//       lH = psych(p, lT, rh, 3, 4, si_bool);\n//     }\n//     if (hr > uH) {\n//       uT += 20;\n//       uH = psych(p, uT, rh, 3, 4, si_bool);\n//     }\n//     if (lH <= hr && hr <= uH) {\n//       let mT = lT + (uT - lT) / 2,\n//         mH = psych(p, mT, rh, 3, 4, si_bool);\n//       if (mH > hr) {\n//         uT = mT;\n//         uH = mH;\n//       }\n//       if (mH < hr) {\n//         lT = mT;\n//         lH = mH;\n//       }\n//     }\n//   }\n//   return lT + ((hr - lH) * (uT - lT)) / (uH - lH);\n// }\n\nexport { psych };\n","import { useState, useEffect } from \"react\";\nimport NumericInput from \"react-numeric-input\";\n\nexport const ScaleButtons = ({ minX, maxX, maxY, getValues }) => {\n  const [newMinX, setNewMinX] = useState(minX);\n  const [newMaxX, setNewMaxX] = useState(maxX);\n  const [newMaxY, setNewMaxY] = useState(maxY);\n\n  const reset = () => {\n    setNewMinX(minX);\n    setNewMaxX(maxX);\n    setNewMaxY(maxY);\n  };\n\n  // update when unit changes\n  useEffect(() => {\n    setNewMinX(minX);\n    setNewMaxX(maxX);\n    setNewMaxY(maxY);\n  }, [minX, maxX, maxY]);\n\n  useEffect(() => {\n    getValues({\n      newMinX: newMinX,\n      newMaxX: newMaxX,\n      newMaxY: newMaxY,\n    });\n  }, [newMinX, newMaxX, newMaxY]);\n\n  return (\n    <>\n      <div className=\"row axis-range-label\">\n        <span>{\"Min. Dry-Bulb Temperature\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"minDB\"\n          value={newMinX}\n          size={5}\n          onChange={setNewMinX}\n        />\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Max. Dry-Bulb Temperature\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"maxDB\"\n          value={newMaxX}\n          size={5}\n          onChange={setNewMaxX}\n        />\n      </div>\n      <div className=\"row axis-range-label mt-3\">\n        <span>{\"Max. Humidity Ratio\"}</span>\n      </div>\n      <div className=\"row axis-range-input\">\n        <NumericInput\n          id=\"maxHR\"\n          value={newMaxY}\n          size={5}\n          onChange={setNewMaxY}\n        />\n      </div>\n\n      <div className=\"input-group mt-3\">\n        <button className={\"btn btn-secondary\"} onClick={reset}>\n          {\"Reset\"}\n        </button>\n      </div>\n    </>\n  );\n};\n","import { SideBar } from \"../FieldChart/SideBar\";\nimport { ItemHeader } from \"../ItemHeader\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport {\n  updateDiscreteColors,\n  colorScaleDiscrete,\n  calcStats,\n} from \"../FieldChart/calColors\";\nimport { WaterMark } from \"../FieldChart/WaterMark\";\nimport { dayToDate } from \"../NumericalField\";\nimport { psych } from \"../psych\";\nimport { ScaleButtons } from \"./ScaleButtons\";\nimport \"bootstrap/js/dist/popover.js\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\n\nexport const PsyChart = ({ text, id, dataObj, weatherStation, unit, turn }) => {\n  let p = 101353;\n  if (!unit) p = 14.7;\n  const width = 980;\n  const height = 700;\n  const margin = { top: 40, right: 60, bottom: 80, left: 40 };\n\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n\n  const params = dataObj.dataParams;\n  const data = dataObj.data;\n  const labels = params.map((d) => d.labels);\n\n  //close button\n  const [isClosed, setIsClosed] = useState(false);\n  const closeInstance = (closeSignal) => {\n    setIsClosed(closeSignal);\n  };\n\n  //show popup\n  const [showPopup, setShowPopup] = useState(false);\n\n  const [primarySelectionIdx, setPrimarySelectionIdx] = useState(3);\n  const [secondarySelectionIdx, setSecondarySelectionIdx] = useState(5);\n\n  // min, max and bounds got from all inputs in the primary selection\n  const [primaryFilters, setPrimaryFilters] = useState({\n    newMax: params[3].max,\n    newMin: params[3].min,\n    newBounds: params[3].bounds,\n    continuous: true,\n  });\n\n  const [secondaryFilters, setSecondaryFilters] = useState({\n    newMax: params[5].max,\n    newMin: params[5].min,\n  });\n\n  const [periodFilters, setPeriodFilters] = useState({\n    startDate: 1,\n    endDate: 365,\n    startHour: 0,\n    endHour: 23,\n  });\n\n  // states to control axis scales\n  const [xMin, setXMin] = useState(params[3].min);\n  const [xMax, setXMax] = useState(params[3].max);\n  const [yMax, setYMax] = useState(params[10].max);\n\n  const getValues = (childProps) => {\n    setXMin(childProps.newMinX);\n    setXMax(childProps.newMaxX);\n    setYMax(childProps.newMaxY);\n  };\n\n  useEffect(() => {\n    setXMin(params[3].min);\n    setXMax(params[3].max);\n    setYMax(params[10].max);\n  }, [data]);\n\n  // states to control gridline visibilities\n  const [toggleDb, setToggleDb] = useState(true);\n  const [toggleHr, setToggleHr] = useState(true);\n  const [toggleRh, setToggleRh] = useState(true);\n  const [toggleWb, setToggleWb] = useState(false);\n  const [toggleEnt, setToggleEnt] = useState(false);\n\n  // update current min-max values of both primary and secondary selections\n  let currentMinMax = {\n    min1: params[primarySelectionIdx].min,\n    max1: params[primarySelectionIdx].max,\n    min2: params[secondarySelectionIdx].min,\n    max2: params[secondarySelectionIdx].max,\n  };\n  let currentBounds = params[primarySelectionIdx].bounds;\n  let currentColorScale = params[primarySelectionIdx].colorScale;\n\n  let discreteColors = updateDiscreteColors(\n    currentMinMax.min1,\n    currentMinMax.max1,\n    currentBounds,\n    currentColorScale\n  );\n\n  const getDisplayData = (data, filter1, filter2, filter3) => {\n    let filteredData = data.filter(\n      (d) =>\n        d.data[primarySelectionIdx] >= filter1.newMin &&\n        d.data[primarySelectionIdx] <= filter1.newMax &&\n        d.data[secondarySelectionIdx] >= filter2.newMin &&\n        d.data[secondarySelectionIdx] <= filter2.newMax &&\n        d.date >= filter3.startDate &&\n        d.date <= filter3.endDate &&\n        d.clock >= filter3.startHour &&\n        d.clock <= filter3.endHour\n    );\n    return filteredData;\n  };\n\n  const getStats = (data, filters) => {\n    let numHoursBounds = [0, 0, 0, 0, 0];\n    data.forEach((d) => {\n      calcStats(d.data[primarySelectionIdx], filters, numHoursBounds);\n    });\n    return numHoursBounds;\n  };\n\n  let displayData = useMemo(() => {\n    return getDisplayData(\n      data,\n      primaryFilters,\n      secondaryFilters,\n      periodFilters\n    );\n  }, [data, primaryFilters, secondaryFilters, periodFilters]);\n\n  let numHours = displayData.length;\n\n  let numHoursBounds = useMemo(() => {\n    return getStats(displayData, primaryFilters);\n  }, [displayData, primaryFilters]);\n\n  let bounds = primaryFilters.newBounds;\n\n  // bdtemp and humidity ratio axes\n\n  let xScale = d3\n    .scaleLinear()\n    .domain([xMin, xMax])\n    .range([0, innerWidth])\n    .nice(10);\n  let yScale = d3\n    .scaleLinear()\n    .domain([0, yMax])\n    .range([innerHeight, 0])\n    .nice(10);\n\n  //   console.log(yMax);\n\n  // vars for drawing gridlines\n  let tTicks = xScale.ticks();\n  let lt = tTicks.length;\n  let hTicks = yScale.ticks();\n  let lh = hTicks.length;\n  let rhLines = [];\n  let wbLines = [];\n  let entLines = [];\n\n  let lT = xScale.domain()[0];\n  let uT = xScale.domain()[1];\n\n  let dbLines = [];\n  let hrLines = [];\n\n  //numerical method to find humidity ratio and rh intercept\n  const tempFromHR = (hr, rh) => {\n    let lH = psych(p, lT, rh, 3, 4, !unit) * 1000;\n    let uH = psych(p, uT, rh, 3, 4, !unit) * 1000;\n    while (Math.abs(hr - lH) > 0.1 || Math.abs(hr - uH) > 0.1) {\n      if (hr < lH) lT -= 20;\n      if (hr > uH) uT += 20;\n      let mT = lT + (uT - lT) / 2,\n        mH = psych(p, mT, rh, 3, 4, !unit) * 1000;\n      if (mH > hr) uT = mT;\n      if (mH < hr) lT = mT;\n      lH = psych(p, lT, rh, 3, 4, !unit) * 1000;\n      uH = psych(p, uT, rh, 3, 4, !unit) * 1000;\n    }\n    return lT + ((hr - lH) * (uT - lT)) / (uH - lH);\n  };\n\n  //numerical method to find enthalpy and rh intercept\n  const tempFromEnt = (ent) => {\n    let lEnt = psych(p, lT, 1, 3, 7, !unit);\n    let uEnt = psych(p, uT, 1, 3, 7, !unit);\n    while (Math.abs(ent - lEnt) > 0.1 || Math.abs(ent - uEnt) > 0.1) {\n      if (ent < lEnt) lT -= 20;\n      if (ent > uEnt) uT += 20;\n      let mT = lT + (uT - lT) / 2,\n        mEnt = psych(p, mT, 1, 3, 7, !unit);\n      if (mEnt > ent) uT = mT;\n      if (mEnt < ent) lT = mT;\n      lEnt = psych(p, lT, 1, 3, 7, !unit);\n      uEnt = psych(p, uT, 1, 3, 7, !unit);\n    }\n    return lT + ((ent - lEnt) * (uT - lT)) / (uEnt - lEnt);\n  };\n\n  // get enthalpy labels\n  let entLabels = unit\n    ? [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n    : [5, 10, 15, 20, 25, 30, 35, 40, 45, 50];\n\n  let coordsEntLabels = [];\n  entLabels.forEach((d, i) => {\n    let x = tempFromEnt(d);\n    let y = psych(p, x, 1, 3, 4, !unit) * 1000;\n    coordsEntLabels.push({\n      x: xScale(x),\n      y: yScale(y),\n      label: d,\n    });\n  });\n\n  //temp Lines\n  for (let i = 0; i < lt; i++) {\n    dbLines.push([\n      {\n        x: xScale(tTicks[i]),\n        y: yScale(0),\n      },\n      {\n        x: xScale(tTicks[i]),\n        y: yScale(psych(p, tTicks[i], 1, 3, 4, !unit) * 1000),\n      },\n    ]);\n  }\n\n  //Hr lines\n  for (let i = 0; i < lh; i++) {\n    hrLines.push([\n      {\n        x: xScale(xScale.domain()[1]),\n        y: yScale(hTicks[i]),\n      },\n      {\n        x: xScale(tempFromHR(hTicks[i], 1)),\n        y: yScale(hTicks[i]),\n      },\n    ]);\n  }\n\n  // RH lines\n  for (let i = 0; i < 10; i++) {\n    let rhs = [];\n    for (let j = tTicks[0]; j <= tTicks[lt - 1]; j += 1) {\n      let hr = psych(p, j, 1 - i * 0.1, 3, 4, !unit) * 1000;\n      rhs.push({ x: xScale(j), y: yScale(hr) });\n    }\n    rhLines.push(rhs);\n  }\n\n  let lWB = unit ? -10 : -10 * 1.8 + 32;\n  let uWB = unit ? 40 : 40 * 1.8 + 32;\n\n  // Wetbulb lines\n  for (let i = lWB; i < uWB; i++) {\n    let wbs = [];\n    for (let j = tTicks[0]; j <= tTicks[lt - 1]; j += 1) {\n      let wb = psych(p, j, uWB - i, 1, 4, !unit) * 1000;\n      wbs.push({ x: xScale(j), y: yScale(wb) });\n    }\n    wbLines.push(wbs);\n  }\n\n  // Enthalpy lines\n  for (let i = 0; i < 120; i++) {\n    let ents = [];\n    for (let j = tTicks[0]; j <= tTicks[lt - 1]; j += 1) {\n      let ent = psych(p, j, 120 - i, 7, 4, !unit) * 1000;\n      ents.push({ x: xScale(j), y: yScale(ent) });\n    }\n    entLines.push(ents);\n  }\n\n  //get coordinates for wb labels\n  let coordsWbLabels = [];\n  dbLines.forEach((d, i) => {\n    coordsWbLabels.push({ x: d[1].x, y: d[1].y, label: xScale.ticks()[i] });\n  });\n\n  //get coords for rh labels\n  let coordsRHLabels = [];\n  rhLines.forEach((d, i) => {\n    const hr = yScale.ticks()[yScale.ticks().length - 1];\n    let coords = {\n      x: Math.min(xScale(tempFromHR(hr, 1 - i / 10)), xScale.range()[1]),\n      y: Math.max(yScale(hr), d[d.length - 1].y),\n      label: 100 - i * 10,\n    };\n    coordsRHLabels.push(coords);\n  });\n\n  let rhEndPoints = [];\n\n  rhLines.forEach((d) => {\n    rhEndPoints.push(d[d.length - 1]);\n  });\n\n  // clippaths\n  // area under 100% rh line\n  let l = rhLines[0].length;\n  let clipPath1 = [\n    ...rhLines[0],\n    { x: width, y: rhLines[0][l - 1].y },\n    { x: width, y: height },\n    { x: 0, y: height },\n  ];\n\n  // area under max hr line\n  let clipPath2 = [\n    { x: -1, y: yScale(yScale.ticks()[yScale.ticks().length - 1]) - 1 },\n    {\n      x: innerWidth + 5,\n      y: yScale(yScale.ticks()[yScale.ticks().length - 1]) - 1,\n    },\n    { x: innerWidth + 5, y: innerHeight + 1 },\n    { x: -1, y: innerHeight + 1 },\n  ];\n\n  //\n  let p1 = rhLines[0][0];\n  let p2 = coordsRHLabels[0];\n  let pLabelX = (p1.x + p2.x) / 2;\n  let pLabelY = (p1.y + p2.y) / 2;\n  let k = Math.abs(p2.y - p1.y) / Math.abs(p2.x - p1.x);\n\n  const togglePopover = () => {\n    setShowPopup(!showPopup);\n  };\n\n  // render elements\n  if (!isClosed) {\n    return (\n      <>\n        <br></br>\n        <div className=\"container\" id={\"item\" + id}>\n          <ItemHeader id={id} text={text} clickToClose={closeInstance} />\n          <div className=\"row mt-3\">\n            <div className=\"col-3\">\n              <SideBar\n                dropdownOptions={labels}\n                currentMinMax={currentMinMax}\n                bounds={currentBounds}\n                colorScale={currentColorScale}\n                getPrimarySelectionIdx={setPrimarySelectionIdx}\n                getSecondarySelectionIdx={setSecondarySelectionIdx}\n                getPrimaryFilters={setPrimaryFilters}\n                getSecondaryFilters={setSecondaryFilters}\n                getPeriodFilters={setPeriodFilters}\n              />\n            </div>\n            <div className=\"col-9\">\n              <div className=\"container ms-3\" id=\"toggle-lines\">\n                <Button\n                  id=\"mypopover\"\n                  type=\"button\"\n                  className=\"btn btn-secondary btn-sm\"\n                >\n                  Chart Settings\n                </Button>\n                <Popover\n                  isOpen={showPopup}\n                  target=\"mypopover\"\n                  toggle={togglePopover}\n                  fade={false}\n                  placement={\"bottom-start\"}\n                  hideArrow={false}\n                >\n                  <PopoverHeader>Chart Settings</PopoverHeader>\n                  <PopoverBody>\n                    <ScaleButtons\n                      minX={params[3].min}\n                      maxX={params[3].max}\n                      maxY={params[10].max}\n                      getValues={getValues}\n                    />\n                  </PopoverBody>\n                </Popover>\n\n                <div class=\"form-check form-check-inline\">\n                  <label className=\"form-check-label\" htmlFor=\"toggle-db\">\n                    <strong>Chart Metrics</strong>\n                  </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    className={\"form-check-input\"}\n                    type={\"checkbox\"}\n                    checked={toggleDb}\n                    id=\"toggle-db\"\n                    onChange={() => setToggleDb(!toggleDb)}\n                  ></input>\n                  <label className=\"form-check-label\" htmlFor=\"toggle-db\">\n                    Dry-Bulb Temp.\n                  </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    className={\"form-check-input\"}\n                    type={\"checkbox\"}\n                    checked={toggleHr}\n                    id=\"toggle-hr\"\n                    onChange={() => setToggleHr(!toggleHr)}\n                  ></input>\n                  <label className=\"form-check-label\" htmlFor=\"toggle-hr\">\n                    Absolute Humidity\n                  </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    className={\"form-check-input\"}\n                    type={\"checkbox\"}\n                    checked={toggleRh}\n                    id=\"toggle-rh\"\n                    onChange={() => setToggleRh(!toggleRh)}\n                  ></input>\n                  <label className=\"form-check-label\" htmlFor=\"toggle-rh\">\n                    Relative Humidity\n                  </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    className={\"form-check-input\"}\n                    type={\"checkbox\"}\n                    checked={toggleWb}\n                    id=\"toggle-wb\"\n                    onChange={() => setToggleWb(!toggleWb)}\n                  ></input>\n                  <label className=\"form-check-label\" htmlFor=\"toggle-wb\">\n                    Wet-Bulb Temp.\n                  </label>\n                </div>\n                <div class=\"form-check form-check-inline\">\n                  <input\n                    className={\"form-check-input\"}\n                    type={\"checkbox\"}\n                    checked={toggleEnt}\n                    id=\"toggle-ent\"\n                    onChange={() => {\n                      setToggleEnt(!toggleEnt);\n                    }}\n                  ></input>\n                  <label className=\"form-check-label\" htmlFor=\"toggle-ent\">\n                    Enthalpy\n                  </label>\n                </div>\n              </div>\n              <div className=\"row\" id=\"psych-chart\">\n                <svg width={width} height={height}>\n                  <g\n                    transform={`translate(${margin.left},${margin.top})`}\n                    id=\"watermark-psych\"\n                  >\n                    <WaterMark\n                      className={\"wtm-text-psych\"}\n                      weatherStation={weatherStation}\n                      primarySelection={labels[primarySelectionIdx].caps}\n                      secondarySelection={labels[secondarySelectionIdx].caps}\n                      unit1={labels[primarySelectionIdx].units}\n                      unit2={labels[secondarySelectionIdx].units}\n                      min1={primaryFilters.newMin.toFixed(1)}\n                      max1={primaryFilters.newMax.toFixed(1)}\n                      min2={secondaryFilters.newMin.toFixed(1)}\n                      max2={secondaryFilters.newMax.toFixed(1)}\n                      startDate={dayToDate(periodFilters.startDate)}\n                      endDate={dayToDate(periodFilters.endDate)}\n                      startHour={periodFilters.startHour}\n                      endHour={periodFilters.endHour}\n                      numHours={numHours}\n                      turn={turn}\n                      fontSize={12}\n                      spacing={15}\n                    />\n                  </g>\n                  <g\n                    transform={`translate(${margin.left}, ${margin.top + 150})`}\n                    id=\"axis-legend\"\n                  >\n                    <rect\n                      x={0}\n                      y={-9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[0]}\n                    ></rect>\n                    <text\n                      x={12}\n                      y={0}\n                      fontSize={11}\n                    >{`${primaryFilters.newMin.toFixed(\n                      1\n                    )} to ${bounds[0].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[0]} hours (${(\n                      (numHoursBounds[0] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={9}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[1]}\n                    ></rect>\n                    <text x={12} y={18} fontSize={11}>{`${bounds[0].toFixed(\n                      1\n                    )} to ${bounds[1].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[1]} hours (${(\n                      (numHoursBounds[1] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={27}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[2]}\n                    ></rect>\n                    <text x={12} y={36} fontSize={11}>{`${bounds[1].toFixed(\n                      1\n                    )} to ${bounds[2].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[2]} hours (${(\n                      (numHoursBounds[2] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={45}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[3]}\n                    ></rect>\n                    <text x={12} y={54} fontSize={11}>{`${bounds[2].toFixed(\n                      1\n                    )} to ${bounds[3].toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[3]} hours (${(\n                      (numHoursBounds[3] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                    <rect\n                      x={0}\n                      y={63}\n                      width={10}\n                      height={10}\n                      fill={discreteColors[4]}\n                    ></rect>\n                    <text x={12} y={72} fontSize={11}>{`${bounds[3].toFixed(\n                      1\n                    )} to ${primaryFilters.newMax.toFixed(1)} ${\n                      params[primarySelectionIdx].labels.units\n                    }: ${numHoursBounds[4]} hours (${(\n                      (numHoursBounds[4] / numHours) *\n                      100\n                    ).toFixed(1)}%)`}</text>\n                  </g>\n\n                  <defs>\n                    <clipPath id=\"clip\">\n                      <rect\n                        x={margin.left}\n                        y={margin.top}\n                        width={innerWidth}\n                        height={innerHeight}\n                      ></rect>\n                    </clipPath>\n                  </defs>\n                  <defs>\n                    <clipPath id=\"clip-100%RH\">\n                      <path\n                        d={d3\n                          .line()\n                          .x((d) => d.x)\n                          .y((d) => d.y)(clipPath1)}\n                      ></path>\n                    </clipPath>\n                  </defs>\n                  <defs>\n                    <clipPath id=\"clip-hrMax\">\n                      <path\n                        d={d3\n                          .line()\n                          .x((d) => d.x)\n                          .y((d) => d.y)(clipPath2)}\n                      ></path>\n                    </clipPath>\n                  </defs>\n                  <g\n                    id=\"temp-axis\"\n                    transform={`translate(${margin.left}, ${\n                      margin.top + innerHeight\n                    })`}\n                    mask={\"url(#mask-hrMax)\"}\n                  >\n                    {xScale.ticks().map((d) => {\n                      if (toggleDb) {\n                        return (\n                          <g>\n                            <text\n                              x={xScale(d)}\n                              y={12}\n                              dy={\"0.32em\"}\n                              textAnchor={\"middle\"}\n                              fontSize={10}\n                            >\n                              {d}\n                            </text>\n                            <line\n                              x1={xScale(d)}\n                              y1={0}\n                              x2={xScale(d)}\n                              y2={6}\n                              stroke={\"black\"}\n                            ></line>\n                            <text\n                              x={innerWidth / 2}\n                              y={20}\n                              dy={\"0.71em\"}\n                              textAnchor={\"middle\"}\n                              fontSize={10}\n                            >{`Dry-Bulb Temp.[${unit ? \"°C\" : \"°F\"}]`}</text>\n                          </g>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"hr-axis\"\n                    transform={`translate(${margin.left + innerWidth}, ${\n                      margin.top\n                    })`}\n                  >\n                    {yScale.ticks().map((d) => {\n                      if (toggleHr) {\n                        return (\n                          <g>\n                            <text\n                              x={10}\n                              y={yScale(d)}\n                              dy={\"0.3em\"}\n                              textAnchor={\"start\"}\n                              fontSize={10}\n                            >\n                              {d}\n                            </text>\n                            <line\n                              x1={0}\n                              y1={yScale(d)}\n                              x2={6}\n                              y2={yScale(d)}\n                              stroke={\"black\"}\n                            ></line>\n                            <text\n                              transform={`rotate(90)`}\n                              x={innerHeight / 2}\n                              y={-40}\n                              dy={\"0.71em\"}\n                              textAnchor={\"middle\"}\n                              fontSize={10}\n                            >{`Humidity Ratio.[${\n                              unit ? \"g/kg dry air\" : \"lb/klb dry air\"\n                            }]`}</text>\n                          </g>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"wb-lines\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                    clipPath={\"url(#clip)\"}\n                    clipPath={\"url(#clip-hrMax)\"}\n                  >\n                    {wbLines.map((d, i) => {\n                      if (toggleWb) {\n                        return (\n                          <path\n                            d={d3\n                              .line()\n                              .x((d) => d.x)\n                              .y((d) => d.y)\n                              .curve(d3.curveBasis)(d)}\n                            fill={\"none\"}\n                            stroke={\"gray\"}\n                            strokeWidth={i % 5 === 0 ? 2 : 0.5}\n                            clipPath={\"url(#clip-100%RH)\"}\n                          ></path>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"wb-labels\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                  >\n                    {coordsWbLabels.map((d) => {\n                      if (toggleWb && !toggleEnt) {\n                        return (\n                          <>\n                            <text\n                              x={d.x - 3}\n                              y={d.y - 3}\n                              textAnchor={\"end\"}\n                              fontSize={10}\n                            >\n                              {d.y >\n                              yScale(yScale.ticks()[yScale.ticks().length - 1])\n                                ? d.label\n                                : \"\"}\n                            </text>\n                          </>\n                        );\n                      }\n                    })}\n                    <text\n                      x={0}\n                      y={0}\n                      fontSize={10}\n                      transform={`rotate(-${(Math.atan(k) / Math.PI) * 180})\n                          translate(${pLabelY - 100}, ${pLabelX})`}\n                      opacity={toggleWb && !toggleEnt ? 100 : 0}\n                      textAnchor={\"middle\"}\n                    >\n                      {`Wet-Bulb Temperature[${unit ? \"°C\" : \"°F\"}]`}\n                    </text>\n                  </g>\n                  <g\n                    id=\"enthalpy-lines\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                    clipPath={\"url(#clip)\"}\n                    clipPath={\"url(#clip-hrMax)\"}\n                  >\n                    {entLines.map((d, i) => {\n                      let numEnt = unit ? 10 : 5;\n                      if (toggleEnt) {\n                        return (\n                          <path\n                            d={d3\n                              .line()\n                              .x((d) => d.x)\n                              .y((d) => d.y)\n                              .curve(d3.curveBasis)(d)}\n                            fill={\"none\"}\n                            stroke={i % numEnt === 0 ? \"gray\" : \"lightgray\"}\n                            strokeWidth={i % numEnt === 0 ? 2 : 0.5}\n                            clipPath={\"url(#clip-100%RH)\"}\n                          ></path>\n                        );\n                      }\n                    })}\n                    <text\n                      x={0}\n                      y={0}\n                      fontSize={10}\n                      transform={`rotate(-${(Math.atan(k) / Math.PI) * 180})\n                          translate(${pLabelY - 100}, ${pLabelX})`}\n                      opacity={toggleEnt ? 100 : 0}\n                      opacity={toggleEnt ? 100 : 0}\n                      textAnchor={\"middle\"}\n                    >\n                      {`Enthalpy[${unit ? \"kJ/kg\" : \"Btu/lb\"}]`}\n                    </text>\n                  </g>\n                  <g\n                    id=\"dbLines\"\n                    transform={`translate(${margin.left}, ${margin.top})`}\n                    clipPath={\"url(#clip)\"}\n                    clipPath={\"url(#clip-hrMax)\"}\n                  >\n                    {dbLines.map((d, i) => {\n                      if (toggleDb) {\n                        return (\n                          <path\n                            d={d3\n                              .line()\n                              .x((d) => d.x)\n                              .y((d) => d.y)(d)}\n                            fill={\"none\"}\n                            stroke={\n                              i === 0 || i === dbLines.length - 1\n                                ? \"black\"\n                                : \"lightgray\"\n                            }\n                            strokeWidth={\n                              i === 0 || i === dbLines.length - 1 ? 2 : 0.5\n                            }\n                          ></path>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"hrLines\"\n                    transform={`translate(${margin.left}, ${margin.top})`}\n                    clipPath={\"url(#clip)\"}\n                    clipPath={\"url(#clip-hrMax)\"}\n                  >\n                    {hrLines.map((d, i) => {\n                      if (toggleHr) {\n                        return (\n                          <path\n                            d={d3\n                              .line()\n                              .x((d) => d.x)\n                              .y((d) => d.y)(d)}\n                            fill={\"none\"}\n                            stroke={\n                              i === 0 || i === hrLines.length - 1\n                                ? \"black\"\n                                : \"lightgray\"\n                            }\n                            strokeWidth={\n                              i === 0 || i === hrLines.length - 1 ? 2 : 0.5\n                            }\n                          ></path>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"rh-lines\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                    clipPath={\"url(#clip)\"}\n                    clipPath={\"url(#clip-hrMax)\"}\n                  >\n                    {rhLines.map((d, i) => {\n                      if (toggleRh) {\n                        return (\n                          <path\n                            d={d3\n                              .line()\n                              .x((d) => d.x)\n                              .y((d) => d.y)\n                              .curve(d3.curveBasis)(d)}\n                            fill={\"none\"}\n                            stroke={i === 0 ? \"black\" : \"gray\"}\n                            strokeDasharray={i === 0 ? \"\" : \"10 5\"}\n                            strokeWidth={i === 0 ? 2 : 1}\n                          ></path>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"rh-labels\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                  >\n                    {coordsRHLabels.map((d, i) => {\n                      if (toggleRh) {\n                        return (\n                          <text\n                            x={d.x - 2}\n                            y={d.y - 10}\n                            dy={\"0.79em\"}\n                            textAnchor={\"end\"}\n                            fontSize={10}\n                          >{`${d.label}%`}</text>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"ent-labels\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                  >\n                    {coordsEntLabels.map((d, i) => {\n                      if (toggleEnt) {\n                        return (\n                          <text\n                            x={d.x - 2}\n                            y={d.y - 10}\n                            dy={\"0.79em\"}\n                            textAnchor={\"end\"}\n                            fontSize={10}\n                          >\n                            {d.y >\n                            yScale(yScale.ticks()[yScale.ticks().length - 1])\n                              ? d.label\n                              : \"\"}\n                          </text>\n                        );\n                      }\n                    })}\n                  </g>\n                  <g\n                    id=\"marks\"\n                    transform={`translate(${margin.left},${margin.top})`}\n                  >\n                    {displayData.map((d) => {\n                      return (\n                        <circle\n                          cx={xScale(d.data[3])}\n                          cy={yScale(d.data[10])}\n                          r={3}\n                          fill={\n                            primaryFilters.continuous\n                              ? currentColorScale(d.data[primarySelectionIdx])\n                              : colorScaleDiscrete(\n                                  d.data[primarySelectionIdx],\n                                  bounds,\n                                  currentMinMax.min1,\n                                  currentMinMax.max1,\n                                  discreteColors\n                                )\n                          }\n                        ></circle>\n                      );\n                    })}\n                  </g>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else return null;\n};\n","import { SaveImgButtons } from \"../SaveImgButtons\";\nimport NumericInput from \"react-numeric-input\";\nimport { useState, useEffect } from \"react\";\n\nexport const SideBar = ({ unit, getHtClDegrees }) => {\n  const [heatingDegree, setHeatingDegree] = useState(unit ? 18 : 18 * 1.8 + 32);\n  const [coolingDegree, setCoolingDegree] = useState(unit ? 24 : 24 * 1.8 + 32);\n  const [skipCount, setSkipCount] = useState(true);\n\n  useEffect(() => {\n    if (skipCount) setSkipCount(false);\n    if (!skipCount) {\n      if (!unit) {\n        setHeatingDegree(Math.round(heatingDegree * 1.8 + 32, 1));\n        setCoolingDegree(Math.round(coolingDegree * 1.8 + 32, 1));\n      } else {\n        setHeatingDegree(Math.round((heatingDegree - 32) / 1.8, 1));\n        setCoolingDegree(Math.round((coolingDegree - 32) / 1.8, 1));\n      }\n    }\n  }, [unit]);\n\n  useEffect(() => {\n    getHtClDegrees({\n      hsp: heatingDegree,\n      csp: coolingDegree,\n    });\n  }, [heatingDegree, coolingDegree]);\n\n  return (\n    <div className=\"row\" id=\"side-bar\">\n      <label htmlFor=\"heating-degree\"></label>\n      <NumericInput\n        id=\"heating-degree\"\n        value={heatingDegree}\n        onChange={setHeatingDegree}\n      />\n      <label htmlFor=\"cooling-degree\"></label>\n      <NumericInput\n        id=\"cooling-degree\"\n        value={coolingDegree}\n        onChange={setCoolingDegree}\n      />\n      <SaveImgButtons />\n    </div>\n  );\n};\n","const months = [\n  743, 1415, 2159, 2879, 3623, 4343, 5087, 5831, 6551, 7295, 8015, 8759,\n];\nconst mHours = [744, 672, 744, 720, 744, 720, 744, 744, 720, 744, 720, 744];\nconst calcValues = (data, unit, hsp, csp) => {\n  //metric v. imperial\n  let m1 = 1.8;\n  let m2 = 32;\n  if (unit) {\n    m1 = 1;\n    m2 = 0;\n  }\n  hsp = hsp * m1 + m2;\n  csp = csp * m1 + m2;\n\n  //calculate values\n  let totalrad = 0;\n  let south = 0,\n    east = 0,\n    north = 0,\n    west = 0;\n  let meantemp = 0,\n    dailyavg = 0;\n  let hdd = 0,\n    hdh = 0,\n    cdd = 0,\n    cdh = 0;\n  let max = -1e99,\n    min = 1e99;\n\n  let monthcount = 0;\n  let totalradMonthly = 0;\n  let sM = 0,\n    eM = 0,\n    nM = 0,\n    wM = 0;\n  let meantempMonthly = 0;\n  let hddMonthly = 0,\n    hdhMonthly = 0,\n    cddMonthly = 0,\n    cdhMonthly = 0;\n  let maxMonthly = -1e99,\n    minMonthly = 1e99;\n\n  let totalradVals = [];\n  let sV = [],\n    eV = [],\n    nV = [],\n    wV = [];\n  let radMin = 1e99,\n    radMax = -1e99;\n  let meantempVals = [];\n  let hddVals = [],\n    hdhVals = [],\n    cddVals = [],\n    cdhVals = [];\n  let maxVals = [],\n    minVals = [];\n\n  let l = data.length;\n  for (let i = 0; i < l; i++) {\n    //calculate yearly horizontal radiation\n    totalrad += data[i].data[2];\n    totalradMonthly += data[i].data[2];\n\n    //calculate yearly facade radiation\n    north += data[i].data[17];\n    nM += data[i].data[17];\n    east += data[i].data[21];\n    eM += data[i].data[21];\n    south += data[i].data[25];\n    sM += data[i].data[25];\n    west += data[i].data[29];\n    wM += data[i].data[29];\n\n    let temp = data[i].data[3];\n    //calculate mean temperature\n    meantemp += temp;\n    meantempMonthly += temp;\n    //calculate heating degree days\n    dailyavg += temp;\n    if (data[i].clock === 23) {\n      dailyavg = dailyavg / 24;\n      if (dailyavg < hsp) hdd += hsp - dailyavg;\n      if (dailyavg > csp) cdd += Math.abs(csp - dailyavg);\n      if (dailyavg < hsp) hddMonthly += hsp - dailyavg;\n      if (dailyavg > csp) cddMonthly += Math.abs(csp - dailyavg);\n      dailyavg = 0;\n    }\n    //calculate heating degree hours\n    if (temp < hsp) hdh += hsp - temp;\n    if (temp > csp) cdh += Math.abs(csp - temp);\n    if (temp < hsp) hdhMonthly += hsp - temp;\n    if (temp > csp) cdhMonthly += Math.abs(csp - temp);\n\n    // min/max\n    if (temp < min) min = temp;\n    if (temp < minMonthly) minMonthly = temp;\n    if (temp > max) max = temp;\n    if (temp > maxMonthly) maxMonthly = temp;\n\n    if (i === months[monthcount]) {\n      let trm = Math.round(totalradMonthly / 1000);\n      if (trm > radMax) radMax = trm;\n      if (trm < radMin) radMin = trm;\n      totalradVals.push(totalradMonthly);\n      nV.push(nM);\n      eV.push(eM);\n      sV.push(sM);\n      wV.push(wM);\n      meantempVals.push(\n        Math.round((meantempMonthly * 10) / mHours[monthcount]) / 10\n      );\n      hddVals.push(hddMonthly);\n      hdhVals.push(hdhMonthly);\n      cddVals.push(cddMonthly);\n      cdhVals.push(cdhMonthly);\n      minVals.push(minMonthly);\n      maxVals.push(maxMonthly);\n\n      totalradMonthly = 0;\n      nM = 0;\n      eM = 0;\n      sM = 0;\n      wM = 0;\n      meantempMonthly = 0;\n      hddMonthly = 0;\n      hdhMonthly = 0;\n      cddMonthly = 0;\n      cdhMonthly = 0;\n      maxMonthly = -1e99;\n      minMonthly = 1e99;\n\n      monthcount += 1;\n    }\n  }\n  meantemp = Math.round(meantemp / 876) / 10;\n\n  let radMaxTot = totalrad / 1000;\n  totalradVals.push(totalrad);\n  nV.push(north);\n  eV.push(east);\n  sV.push(south);\n  wV.push(west);\n  meantempVals.push(meantemp);\n  hddVals.push(hdd);\n  hdhVals.push(hdh);\n  cddVals.push(cdd);\n  cdhVals.push(cdh);\n  minVals.push(min);\n  maxVals.push(max);\n\n  return {\n    north: nV,\n    east: eV,\n    south: sV,\n    west: wV,\n    meantemp: meantempVals,\n    totalrad: totalradVals,\n    radMin: radMin,\n    radMax: radMax,\n    radMaxTot: radMaxTot,\n    hdd: hddVals,\n    hdh: hdhVals,\n    cdd: cddVals,\n    cdh: cdhVals,\n    min: minVals,\n    max: maxVals,\n  };\n};\n\nconst getRowLabels = (unit, hsp, csp) => {\n  //metric v. imperial\n  let u0 = \"kWh/ft2\",\n    u1 = \"F\",\n    m1 = 1.8,\n    m2 = 32,\n    degreedays = \"F-days\",\n    degreehours = \"F-hrs\";\n  if (unit) {\n    u0 = \"kWh/m2\";\n    u1 = \"C\";\n    m1 = 1;\n    m2 = 0;\n    degreedays = \"K-days\";\n    degreehours = \"K-hrs\";\n  }\n  //   hsp = hsp * m1 + m2;\n  //   csp = csp * m1 + m2;\n\n  return [\n    `Total Horizontal Insolation (${u0})`,\n    `Total North Facade Insolation (${u0})`,\n    `Total East Facade Insolation (${u0})`,\n    `Total South Facade Insolation (${u0})`,\n    `Total West Facade Insolation (${u0})`,\n    \"\",\n    `Max Outisde Temperature (${u1})`,\n    `Mean Outside Temperature (${u1})`,\n    `Min Outside Temperature (${u1})`,\n    \"\",\n    `Heating Degree Days (${degreedays} from ${\n      Math.round(hsp * 10) / 10\n    } ${u1})`,\n    `Heating Degree Hours (${degreehours} from ${\n      Math.round(hsp * 10) / 10\n    } ${u1})`,\n    `Cooling Degree Days (${degreedays} from ${\n      Math.round(csp * 10) / 10\n    } ${u1})`,\n    `Cooling Degree Hours (${degreehours} from ${\n      Math.round(csp * 10) / 10\n    } ${u1})`,\n  ];\n};\n\nconst getTableObj = (data, param, values, rscale, rscaleTot) => {\n  let o = values;\n\n  let horRow = [],\n    nRow = [],\n    eRow = [],\n    sRow = [],\n    wRow = [],\n    maxRow = [],\n    minRow = [],\n    meanRow = [],\n    hddRow = [],\n    hdhRow = [],\n    cddRow = [],\n    cdhRow = [],\n    blank = [];\n\n  var l = o.totalrad.length;\n  for (var i = 0; i < l; i++) {\n    let tr = Math.round(o.totalrad[i] / 1000),\n      nr = Math.round(o.north[i] / 1000),\n      er = Math.round(o.east[i] / 1000),\n      sr = Math.round(o.south[i] / 1000),\n      wr = Math.round(o.west[i] / 1000);\n    let tc = rscale(tr),\n      nc = rscale(nr),\n      ec = rscale(er),\n      sc = rscale(sr),\n      wc = rscale(wr);\n    if (i === 12) {\n      tc = rscaleTot(tr);\n      nc = rscaleTot(nr);\n      ec = rscaleTot(er);\n      sc = rscaleTot(sr);\n      wc = rscaleTot(wr);\n    }\n    horRow.push({ v: addCommas(tr), f: tc });\n    nRow.push({ v: addCommas(nr), f: nc });\n    eRow.push({ v: addCommas(er), f: ec });\n    sRow.push({ v: addCommas(sr), f: sc });\n    wRow.push({ v: addCommas(wr), f: wc });\n    maxRow.push({\n      v: Math.round(o.max[i] * 10) / 10,\n      f: param.colorScale(o.max[i]),\n    });\n    minRow.push({\n      v: Math.round(o.min[i] * 10) / 10,\n      f: param.colorScale(o.min[i]),\n    });\n    meanRow.push({ v: o.meantemp[i], f: param.colorScale(o.meantemp[i]) });\n    hddRow.push({ v: addCommas(Math.round(o.hdd[i])), f: \"none\" });\n    hdhRow.push({ v: addCommas(Math.round(o.hdh[i])), f: \"none\" });\n    cddRow.push({ v: addCommas(Math.round(o.cdd[i])), f: \"none\" });\n    cdhRow.push({ v: addCommas(Math.round(o.cdh[i])), f: \"none\" });\n    blank.push({ v: \"\", f: \"none\" });\n  }\n  return [\n    horRow,\n    nRow,\n    eRow,\n    sRow,\n    wRow,\n    blank,\n    maxRow,\n    meanRow,\n    minRow,\n    blank,\n    hddRow,\n    hdhRow,\n    cddRow,\n    cdhRow,\n  ];\n};\n\nconst addCommas = (n) => {\n  var s = n + \"\";\n  s = s.split(\"\");\n  var s2 = \"\";\n  var ls = s.length;\n  for (var i = 1; i < ls; i++) {\n    s2 = s[ls - i] + s2;\n    if (i % 3 === 0) s2 = \",\" + s2;\n  }\n  s2 = s[0] + s2;\n  return s2;\n};\n\nconst highContrast = (col) => {\n  //decide whether to use black or white text for higher contrast\n  var c1 = contrastRatio(0, relativeLuminance(hexToRGB(col)));\n  var c2 = contrastRatio(1, relativeLuminance(hexToRGB(col))) + 3;\n  if (c2 > c1) return \"white\";\n  else return \"black\";\n};\n\nconst contrastRatio = (l1, l2) => {\n  //numerator is the relative luminance of the lighter color\n  //denominator is the constrast ratio of the darker color\n  if (l1 > l2) return (l1 + 0.05) / (l2 + 0.05);\n  if (l1 < l2) return (l2 + 0.05) / (l1 + 0.05);\n};\n\nconst relativeLuminance = (rgb) => {\n  //the relative brightness of any point in a colorspace, normalized to 0 for darkest black and 1 for lightest white\n  //Note 1: For the sRGB colorspace, the relative luminance of a color is defined as L = 0.2126 * R + 0.7152 * G + 0.0722 * B where R, G and B are defined as:\n  let red = rgb[0] / 255;\n  let green = rgb[1] / 255;\n  let blue = rgb[2] / 255;\n  let r, g, b;\n  if (red <= 0.03928) r = red / 12.92;\n  else r = ((red + 0.055) / 1.055) ** 2.4;\n\n  if (green <= 0.03928) g = green / 12.92;\n  else g = ((green + 0.055) / 1.055) ** 2.4;\n\n  if (blue <= 0.03928) b = blue / 12.92;\n  else b = ((blue + 0.055) / 1.055) ** 2.4;\n\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n\nconst hexToRGB = (h) => {\n  h = h.split(\"\");\n  let rgb = [];\n  var lh = h.length;\n  for (var i = 1; i < lh; i += 2) {\n    rgb.push(h2d(h[i]) * 16 + h2d(h[i + 1]));\n  }\n  return rgb;\n};\n\nconst h2d = (n) => {\n  if (n === \"0\") n = 0;\n  if (n === \"1\") n = 1;\n  if (n === \"2\") n = 2;\n  if (n === \"3\") n = 3;\n  if (n === \"4\") n = 4;\n  if (n === \"5\") n = 5;\n  if (n === \"6\") n = 6;\n  if (n === \"7\") n = 7;\n  if (n === \"8\") n = 8;\n  if (n === \"9\") n = 9;\n  if (n === \"a\") n = 10;\n  if (n === \"b\") n = 11;\n  if (n === \"c\") n = 12;\n  if (n === \"d\") n = 13;\n  if (n === \"e\") n = 14;\n  if (n === \"f\") n = 15;\n  return n;\n};\n\nexport { calcValues, getRowLabels, getTableObj, highContrast };\n","import { SideBar } from \"./SideBar\";\nimport { ItemHeader } from \"../ItemHeader\";\nimport { useState, useMemo } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { calcValues, getRowLabels, getTableObj, highContrast } from \"./utils\";\n\nexport const Summary = ({ text, id, dataObj, weatherStation, unit, turn }) => {\n  const [hsp, setHsp] = useState(unit ? 18 : 18 * 1.8 + 32);\n  const [csp, setCsp] = useState(unit ? 24 : 24 * 1.8 + 32);\n\n  const margin = { top: 0, right: 20, bottom: 50, left: 120 };\n  const params = dataObj.dataParams;\n  const data = dataObj.data;\n\n  const columnLables = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n    \"Yearly\",\n  ];\n\n  let rowLabels = getRowLabels(unit, hsp, csp);\n  let rowLabelWidth = 200;\n\n  const width = 200 + 65 * columnLables.length;\n  const height = 20 * (rowLabels.length + 1);\n\n  const innerWidth = width - margin.left - margin.right;\n  const innerHeight = height - margin.top - margin.bottom;\n\n  let cellH = innerHeight / (rowLabels.length + 1);\n  let cellW = (innerWidth - rowLabelWidth) / (columnLables.length + 1);\n\n  let values = calcValues(data, unit, hsp, csp);\n\n  const rscale = d3\n    .scaleLinear()\n    .domain([0, values.radMax / 2, values.radMax])\n    .range([\"#FFFF00\", \"#FF6600\", \"#d15628\"]);\n  const rscaleTot = d3\n    .scaleLinear()\n    .domain([0, values.radMaxTot / 2, values.radMaxTot])\n    .range([\"#FFFF00\", \"#FF6600\", \"#d15628\"]);\n\n  let tableObj = useMemo(() => {\n    return getTableObj(data, params[3], values, rscale, rscaleTot);\n  }, [data, params, values]);\n\n  console.log(tableObj);\n  //close button\n  const [isClosed, setIsClosed] = useState(false);\n  const closeInstance = (closeSignal) => {\n    setIsClosed(closeSignal);\n  };\n\n  // get data from children\n  const getHtClDegrees = (childProps) => {\n    setHsp(childProps.hsp);\n    setCsp(childProps.csp);\n  };\n\n  if (!isClosed) {\n    return (\n      <>\n        <br></br>\n        <div className=\"container\" id={\"item\" + id}>\n          <ItemHeader id={id} text={text} clickToClose={closeInstance} />\n          <div className=\"row mt-3\">\n            <div className=\"col-3\">\n              <SideBar unit={unit} getHtClDegrees={getHtClDegrees} />\n            </div>\n            <div className=\"col-9\">\n              <svg width={width} height={height}>\n                <g transform={`translate(${margin.left},${margin.top})`}>\n                  {rowLabels.map((d, i) => {\n                    return (\n                      <text\n                        x={0}\n                        y={(i + 1) * cellH}\n                        dx={rowLabelWidth - 5}\n                        dy={12.5}\n                        textAnchor={\"end\"}\n                        fontSize={12}\n                      >\n                        {d}\n                      </text>\n                    );\n                  })}\n                </g>\n                <g transform={`translate(${margin.left},${margin.top})`}>\n                  {tableObj.map((d, i) => {\n                    return (\n                      <g id=\"table-row\">\n                        {d.map((dd, ii) => {\n                          return (\n                            <rect\n                              x={rowLabelWidth + ii * cellW}\n                              y={(i + 1) * cellH}\n                              width={cellW}\n                              height={cellH}\n                              fill={dd.f}\n                            ></rect>\n                          );\n                        })}\n                      </g>\n                    );\n                  })}\n                  {tableObj.map((d, i) => {\n                    return (\n                      <g id=\"table-text\">\n                        {d.map((dd, ii) => {\n                          return (\n                            <text\n                              x={rowLabelWidth + ii * cellW}\n                              y={(i + 1) * cellH}\n                              width={cellW}\n                              dx={5}\n                              dy={12.5}\n                              textAnchor={\"start\"}\n                              fontSize={10}\n                              fill={highContrast(dd.f)}\n                              fontWeight={\"bold\"}\n                            >\n                              {dd.v}\n                            </text>\n                          );\n                        })}\n                      </g>\n                    );\n                  })}\n                </g>\n                <g transform={`translate(${margin.left},${margin.top})`}>\n                  <text\n                    x={195}\n                    y={innerHeight + 20}\n                    textAnchor={\"end\"}\n                    fontSize={12}\n                  >{`Station Name: ${weatherStation}`}</text>\n                  <text\n                    x={195}\n                    y={innerHeight + 40}\n                    textAnchor={\"end\"}\n                    fontSize={12}\n                  >{`Turn: ${turn} degrees`}</text>\n                </g>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else return null;\n};\n","export const Instruction = () => {\n  return (\n    <div className=\"row mt-5\" id=\"guide-text-area\">\n      <span id=\"text-instruct\">\n        <strong>{\"A Short Guide to Interpret This Chart\"}</strong>\n      </span>\n      <ul id=\"guide\">\n        <li className=\"text-guide\">\n          {\"Every arrow represents one hr of the year\"}\n        </li>\n        <li className=\"text-guide\">{\"Every column represents one day\"}</li>\n        <li className=\"text-guide\">{\"Every row represents one time of day\"}</li>\n        <li className=\"text-guide\">\n          {\"The size of the arrow represents wind speed\"}\n        </li>\n        <li className=\"text-guide\">\n          {\n            \"The orientation of the arrow represents wind direction (north is up)\"\n          }\n        </li>\n        <li className=\"text-guide\">\n          {\"The color of the arrow represents air temperature\"}\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { NumericField } from \"../NumericalField\";\nimport { SaveImgButtons } from \"../SaveImgButtons\";\nimport { Instruction } from \"./Instruction\";\n\nexport const SideBar = ({ bounds, colorScale, getPeriodFilters }) => {\n  return (\n    <div className=\"row\" id=\"side-bar\">\n      <NumericField getNumericInputs={getPeriodFilters} />\n      <Instruction />\n      <SaveImgButtons />\n    </div>\n  );\n};\n","import { SideBar } from \"./SideBar\";\nimport { ItemHeader } from \"../ItemHeader\";\nimport { useState, useMemo } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const WindField = ({ text, id, dataObj, weatherStationn, unit }) => {\n  const [periodFilters, setPeriodFilters] = useState({\n    startDate: 1,\n    endDate: 365,\n    startHour: 1,\n    endHour: 24,\n  });\n  const margin = { top: 10, right: 50, bottom: 50, left: 40 };\n  const params = dataObj.dataParams;\n  const data = dataObj.data;\n\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const width = 1000;\n  const height = 900;\n\n  const innerWidth = width - margin.left - margin.right;\n\n  //close button\n  const [isClosed, setIsClosed] = useState(false);\n  const closeInstance = (closeSignal) => {\n    setIsClosed(closeSignal);\n  };\n\n  const getDisplayIdx = (fiter) => {\n    let inds = [];\n    for (let i = fiter.startDate; i < fiter.endDate + 1; i++) {\n      for (let j = fiter.startHour; j < fiter.endHour + 1; j++) {\n        inds.push((i - 1) * 24 + j);\n      }\n    }\n    return inds;\n  };\n\n  let displayIdx = useMemo(() => {\n    return getDisplayIdx(periodFilters);\n  }, [periodFilters]);\n\n  let max = params[4].max < 12.5 ? 12.5 : params[4].max;\n  let dotRadius = 5;\n\n  const radScale = d3\n    .scaleLinear()\n    .domain([0, max])\n    .range([0, 5 * dotRadius]);\n\n  const numSection = 3;\n  const maxNumCols = 8760 / numSection;\n  const sectionDistance = 250;\n  const colorScale = params[3].colorScale;\n\n  const getSectionIdx = (idx, maxNumCols) => {\n    return Math.floor(idx / maxNumCols);\n  };\n\n  const dataPoints = (\n    i,\n    temp,\n    spd,\n    dir,\n    sectionIdx,\n    sectionDistance,\n    dotRadius,\n    maxNumCols,\n    a,\n    b\n  ) => {\n    let pts = [\n      { x: 1, y: -1 },\n      { x: -1, y: -1 },\n      { x: 0, y: 1 },\n      { x: 1, y: -1 },\n    ];\n    let o = (25 * 3.1415) / 180;\n    return {\n      id: i,\n      spd: spd,\n      tri: pts.map((pel) => {\n        return {\n          x:\n            Math.floor((i - sectionIdx * maxNumCols) / 24) * a * dotRadius +\n            pel.x * Math.sin(o) * b * radScale(spd),\n          y:\n            (i % 24) * a * dotRadius +\n            sectionDistance * sectionIdx +\n            pel.y * Math.cos(o) * b * radScale(spd),\n        };\n      }),\n      temp: temp,\n      rot: `rotate(${dir},${\n        Math.floor((i - sectionIdx * maxNumCols) / 24) * a * dotRadius\n      },${(i % 24) * a * dotRadius + sectionDistance * sectionIdx})`,\n    };\n  };\n\n  let displayData = data.map((d, i) => {\n    if (displayIdx.includes(i)) {\n      return dataPoints(\n        i,\n        d.data[3],\n        d.data[4],\n        d.data[6],\n        getSectionIdx(i, maxNumCols),\n        sectionDistance,\n        dotRadius,\n        maxNumCols,\n        1.545,\n        0.7\n      );\n    } else {\n      return dataPoints(i, 0, 0, 0, 0, 0, 0);\n    }\n  });\n\n  //   console.log(displayData);\n  //water marks\n  let spacing = 20;\n  let xPos = 100;\n  let yPos = 780;\n  let speeds = [0.5, 3.5, 6.5, 9.5, 12.5];\n  let wunit = \"m/s\";\n  if (!unit) {\n    speeds = [1.1, 7.8, 14.5, 21.3, 28];\n    wunit = \"mph\";\n  }\n  let legendData = speeds.map((d, i) =>\n    dataPoints(\n      i,\n      0,\n      d,\n      90,\n      0,\n      getSectionIdx(i, 1),\n      spacing,\n      dotRadius,\n      1,\n      1.58,\n      0.8\n    )\n  );\n\n  //legend temperature\n\n  let tMin = params[3].min;\n  let tMax = params[3].max;\n\n  function a(d, l) {\n    return tMin + (d * (tMax - tMin)) / l;\n  }\n  let n = [0, 1, 2, 3, 4];\n  let bounds = n.map((d) => (a(d, n.length) + a(d + 1, n.length)) / 2);\n\n  let tunit = \"C\";\n  if (!unit) tunit = \"F\";\n  let texts = n.map(\n    (d) =>\n      `${Math.round(a(d, n.length) * 10) / 10} to ${\n        Math.round(a(d + 1, n.length) * 10) / 10\n      } ${tunit}`\n  );\n\n  if (!isClosed) {\n    return (\n      <>\n        <br></br>\n        <div className=\"container\" id={\"item\" + id}>\n          <ItemHeader id={id} text={text} clickToClose={closeInstance} />\n          <div className=\"row mt-3\">\n            <div className=\"col-3\">\n              <SideBar getPeriodFilters={setPeriodFilters} />\n            </div>\n            <div className=\"col-9\">\n              <svg width={width} height={height}>\n                <g\n                  id=\"axis-months\"\n                  transform={`translate(${margin.left},${margin.top})`}\n                >\n                  {months.map((d, i) => {\n                    return (\n                      <text\n                        x={((i - getSectionIdx(i, 4) * 4) * innerWidth) / 4}\n                        y={(getSectionIdx(i, 4) + 1) * 250 - 40}\n                        textAnchor={\"start\"}\n                        fontSize={12}\n                      >\n                        {d}\n                      </text>\n                    );\n                  })}\n                </g>\n                <g id=\"axis-hours\" transform={`translate(0,${margin.top})`}>\n                  {[\"0\", \"12h\", \"24h\"].map((d, i) => {\n                    return (\n                      <text\n                        x={30}\n                        y={i * 90}\n                        dy={\"0.32em\"}\n                        textAnchor={\"end\"}\n                        fontSize={12}\n                      >\n                        {d}\n                      </text>\n                    );\n                  })}\n                  {[\"0\", \"12h\", \"24h\"].map((d, i) => {\n                    return (\n                      <text\n                        x={30}\n                        y={i * 90 + 250}\n                        dy={\"0.32em\"}\n                        textAnchor={\"end\"}\n                        fontSize={12}\n                      >\n                        {d}\n                      </text>\n                    );\n                  })}\n                  {[\"0\", \"12h\", \"24h\"].map((d, i) => {\n                    return (\n                      <text\n                        x={30}\n                        y={i * 90 + 250 * 2}\n                        dy={\"0.32em\"}\n                        textAnchor={\"end\"}\n                        fontSize={12}\n                      >\n                        {d}\n                      </text>\n                    );\n                  })}\n                </g>\n                <g transform={`translate(${margin.left},${margin.top})`}>\n                  {displayData.map((d, i) => {\n                    return (\n                      <path\n                        d={d3\n                          .line()\n                          .x((d) => d.x)\n                          .y((d) => d.y)(d.tri)}\n                        transform={d.rot}\n                        fill={colorScale(d.temp)}\n                      ></path>\n                    );\n                  })}\n                </g>\n                <g\n                  id=\"windField-legend\"\n                  transform={`translate(${margin.left}, ${margin.top})`}\n                >\n                  <text\n                    x={xPos - 100}\n                    y={yPos - 40}\n                    dy={\"0.79em\"}\n                    fontStyle={\"bold\"}\n                  >\n                    {\"Legend\"}\n                  </text>\n                  {speeds.map((d, i) => {\n                    return (\n                      <text\n                        x={xPos}\n                        y={yPos + i * spacing}\n                      >{`${d} ${wunit}`}</text>\n                    );\n                  })}\n                  {legendData.map((d, i) => {\n                    return (\n                      <path\n                        d={d3\n                          .line()\n                          .x((d) => d.x)\n                          .y((d) => d.y)(d.tri)}\n                        transform={\n                          ` translate(${margin.left + xPos - 100}, ${\n                            margin.top + yPos - 20\n                          }) ` + d.rot\n                        }\n                        fill={\"gray\"}\n                      ></path>\n                    );\n                  })}\n                  {bounds.map((d, i) => {\n                    return (\n                      <rect\n                        x={xPos + 100}\n                        y={yPos + i * spacing - 10}\n                        width={10}\n                        height={10}\n                        fill={params[3].colorScale(d)}\n                      >\n                        {d}\n                      </rect>\n                    );\n                  })}\n                  {texts.map((d, i) => {\n                    return (\n                      <text x={xPos + 120} y={yPos + i * spacing}>\n                        {d}\n                      </text>\n                    );\n                  })}\n                </g>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else return null;\n};\n","// Component to display visualizations in the itemList\n\nimport { Field } from \"./FieldChart/Field\";\nimport { Histogram } from \"./Histogram/Histogram\";\nimport { NV } from \"./NvPotential/NV\";\nimport { PsyChart } from \"./Psychrometric/PsyChart\";\nimport { Summary } from \"./Summary/Summary\";\nimport { WindField } from \"./WindField/WindField\";\n\nexport const DataDisplay = ({\n  itemList,\n  dataObj,\n  weatherStation,\n  turn,\n  unit,\n}) => {\n  return (\n    <div className=\"container\" id=\"items\">\n      {itemList.map((d, i) => {\n        switch (d) {\n          case \"Summary\":\n            return (\n              dataObj && (\n                <Summary\n                  key={\"summary\" + i}\n                  text={d}\n                  id={i}\n                  dataObj={dataObj}\n                  weatherStation={weatherStation}\n                  turn={turn}\n                  unit={unit}\n                />\n              )\n            );\n          case \"Field\":\n            return (\n              dataObj && (\n                <Field\n                  key={\"field\" + i}\n                  text={d}\n                  id={i}\n                  dataObj={dataObj}\n                  weatherStation={weatherStation}\n                  turn={turn}\n                />\n              )\n            );\n          case \"Natural Ventilation Potential\":\n            return (\n              dataObj && (\n                <NV\n                  key={\"nv\" + i}\n                  text={d}\n                  id={i}\n                  dataObj={dataObj}\n                  weatherStation={weatherStation}\n                  unit={unit}\n                  turn={turn}\n                />\n              )\n            );\n          case \"Histogram\":\n            // if (dataObj) {\n\n            // } else return null;\n            return (\n              dataObj && (\n                <Histogram\n                  key={\"histogram\" + i}\n                  text={d}\n                  id={i}\n                  dataObj={dataObj}\n                  weatherStation={weatherStation}\n                  unit={unit}\n                  turn={turn}\n                />\n              )\n            );\n          case \"Wind Field\":\n            if (dataObj) {\n              return (\n                <WindField\n                  key={\"WindField\" + i}\n                  text={d}\n                  id={i}\n                  dataObj={dataObj}\n                  weatherStation={weatherStation}\n                  unit={unit}\n                />\n              );\n            } else return null;\n          case \"Psychrometric Chart\":\n            if (dataObj) {\n              return (\n                <PsyChart\n                  key={\"Psychrometric Chart\" + i}\n                  text={d}\n                  id={i}\n                  dataObj={dataObj}\n                  weatherStation={weatherStation}\n                  unit={unit}\n                />\n              );\n            } else return null;\n          default:\n            return null;\n        }\n      })}\n    </div>\n  );\n};\n","// component: north arrow\n\nimport NumericInput from \"react-numeric-input\";\nimport { useState, useEffect } from \"react\";\n\nexport const NorthArrow = ({ getTurn }) => {\n  const [turn, setTurn] = useState(0);\n\n  const onNumericInputChange = (value) => {\n    setTurn(value);\n  };\n\n  // pass turn to the parent\n  useEffect(() => {\n    getTurn(turn);\n  }, [turn]);\n\n  return (\n    <>\n      <div className=\"col-3\">\n        <NumericInput\n          min={-45}\n          max={45}\n          value={turn}\n          size={2}\n          onChange={onNumericInputChange}\n        />\n      </div>\n      <div className=\"col-6\">\n        <svg id=\"sqr\" width=\"35px\" height=\"80px\" transform={`rotate(${turn})`}>\n          <rect\n            x=\"0\"\n            y=\"15\"\n            width=\"35\"\n            height=\"45\"\n            stroke=\"black\"\n            fill=\"white\"\n            strokeWidth=\"2pt\"\n          ></rect>\n          <line\n            x1=\"17.5px\"\n            y1=\"15px\"\n            x2=\"17.5px\"\n            y2=\"37.5px\"\n            stroke=\"black\"\n            strokeWidth=\"1pt\"\n          ></line>\n          <text x=\"17.5\" y=\"11\" textAnchor=\"middle\">\n            N\n          </text>\n        </svg>\n      </div>\n    </>\n  );\n};\n","////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// calculate solar position\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// time = hours [1,8760]\n// longitude\n// latitude\n// gmt = num hours time change from GMT (from weather file)\nconst solarPosition = (time, location, logs) => {\n  var latitude = location.latitude;\n  var longitude = location.longitude;\n  var gmt = location.gmt;\n\n  //other\n  var solConst = 4871;\n\n  // location\n  var shift = -15 * gmt + longitude;\n  if (latitude < -90 || latitude > 90)\n    logs.log6 += \"Illegal latitude specified-- \";\n  if (shift < -360 || shift > 360)\n    logs.log6 += \"Illegal shift value specified-- \";\n  var alat = nonZero(rad(latitude));\n  var sinlat = Math.sin(alat);\n  var coslat = Math.cos(alat);\n  var tanlat = sinlat / coslat;\n\n  // declination\n  var decl = getDeclination(time);\n  var sindec = Math.sin(decl);\n  var cosdec = Math.cos(decl);\n  var tandec = sindec / cosdec;\n\n  var cc = coslat * cosdec;\n  var ss = sinlat * sindec;\n  var tt = bounded(-tandec * tanlat, [-1, 1]);\n  var ws = Math.acos(tt);\n\n  //Find hour angles for start and end of timestep. The portion of the timestep during which the sun is down is ignored\n  var w1 = hourAngle(time, -1, shift);\n  var w2 = hourAngle(time, 0, shift);\n  if (w2 < w1) w2 += 2 * Math.PI; //Correct the angles for the hour straddling midnight\n  if (w2 < w1) logs.log6 += \"timestep inconsistency-- \";\n\n  //No point in continuing if there is no sun\n  if (w2 > -ws && w1 < ws) {\n    w1 = Math.max(w1, -ws);\n    w2 = Math.min(w2, ws);\n    var w = (w1 + w2) / 2;\n\n    // Set the horizontal extraterrestrial radiation\n    var hx = cc * (Math.sin(w2) - Math.sin(w1)) + ss * (w2 - w1);\n    var hextra = (solConst * getECC(time) * hx) / (w2 - w1);\n\n    // Find the position of the sun in the sky\n    var coshr = Math.cos(w);\n    var coszen = bounded(nonZero(cc * coshr + ss), [0.009, 1]); //0.009 = a zenith angle of 89.5\n    var zenith = Math.acos(coszen);\n    var sinzen = Math.sin(zenith);\n\n    if (Math.abs(sinzen) >= 1e-6) {\n      var sinhr = Math.sin(w);\n      var sinazm = bounded((cosdec * sinhr) / sinzen, [-1, 1]);\n      var sazm = Math.asin(sinazm);\n\n      // Determine if the absolute value of the solar azimuth is greater than 90 degrees by comparing the hour\n      // angle with the hour angle at which the solar azimuth is +/- degrees\n      var cwew = bounded(tandec / tanlat, [-1, 1]);\n      var wew = Math.PI;\n      if (alat * (decl - alat) <= 0) wew = Math.acos(cwew);\n      if ((Math.abs(w) - Math.abs(wew)) * alat * (decl - alat) <= 0)\n        sazm = sign(Math.PI, sazm) - sazm;\n\n      // Don't allow the absolute value of the solar azimuth to be greater than 180 degrees\n      if (Math.abs(sazm) > Math.pi) sazm = sazm - sign(2 * Math.PI, sazm);\n\n      logs.log2 += `${(sazm * 180) / Math.PI},${\n        (zenith * 180) / Math.PI\n      },${coszen},${sinzen} \\r\\n`;\n      logs.log6 += \",\";\n\n      return {\n        hextra: hextra, //horizontal extraterrestrial radiation\n        solarZenith: zenith, //solar zenith, radians\n        solarAzimuth: sazm, //solar azimuth, radians\n        cosZenith: coszen, //cosine of the solar zenith angle\n        sinZenith: sinzen, //sine of the solar zenith angle\n        logs: logs,\n      };\n    }\n  }\n\n  logs.log2 += `90,-90,0,1 \\r\\n`;\n  logs.log6 += \",\";\n\n  return {\n    hextra: 0, //horizontal extraterrestrial radiation\n    solarZenith: Math.PI / 2, //solar zenith, radians\n    solarAzimuth: -Math.PI / 2, //solar azimuth, radians\n    cosZenith: 0, //cosine of the solar zenith angle\n    sinZenith: 1, //cosine of the solar zenith angle\n    logs: logs,\n  };\n};\n\n//convert to Radians\nconst rad = (v) => {\n  return (v * Math.PI) / 180;\n};\n\n//generalized beta\nconst gBeta = (day) => {\n  return rad((day * 360) / 365);\n};\n\n// new algorithm: declination from Spencer (1971) as cited by Iqbal (1983) as cited by Beckman in Solar Engineering of Thermal Processes (2006)\n// returns units in radians\nconst getDeclination = (time) => {\n  var day = Math.floor(time / 24) + 1; //bugfix:05.07.2012\n  var beta = gBeta(day - 1);\n  // new algorithm:05.07.2012\n  return (\n    0.006918 -\n    0.399912 * Math.cos(beta) +\n    0.070257 * Math.sin(beta) -\n    0.006758 * Math.cos(2 * beta) +\n    0.000907 * Math.sin(2 * beta) -\n    0.002697 * Math.cos(3 * beta) +\n    0.00148 * Math.sin(3 * beta)\n  );\n};\n\n// new algorithm: equation of time from Solar Engineering of Thermal Processes (2006)\n// returns units in radians\nconst getEOT = (time) => {\n  var day = Math.floor(time / 24) + 1; //bugfix:05.07.2012\n  var beta = gBeta(day - 1);\n  //!new eot algorithm:05.07.2012\n  return (\n    (229.2 / 60) *\n    (0.000075 +\n      0.001868 * Math.cos(beta) -\n      0.032077 * Math.sin(beta) -\n      0.014615 * Math.cos(2 * beta) -\n      0.04089 * Math.sin(2 * beta))\n  );\n};\n\nconst getECC = (time) => {\n  var day = Math.floor(time / 24) + 1; //bugfix:05.07.2012\n  return 1 + 0.033 * Math.cos(gBeta(day));\n};\n\n//hour angle\nconst hourAngle = (time, offset, shift) => {\n  var et = getEOT(time);\n  return rad((((time + offset + et) % 24) - 12) * 15 + shift);\n};\n\n//non zero\nconst nonZero = (v) => {\n  return sign(Math.max(Math.abs(v), 1e-6), v);\n};\n\nconst bounded = (v, b) => {\n  if (v >= b[1]) return b[1];\n  if (v <= b[0]) return b[0];\n  return v;\n};\n\n// same as FORTRAN SIGN() and DSIGN()\n// returns value of a with sign of b\nconst sign = (a, b) => {\n  if (b !== 0) return Math.abs(a) * (b / Math.abs(b));\n  else return Math.abs(a);\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// calculate incident solar radiation\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// what radiation data is available\nconst radiationMode = (noteVar) => {\n  var beamBool = noteVar[0],\n    diffBool = noteVar[1],\n    globalBool = noteVar[2],\n    tambBool = noteVar[3],\n    rhBool = noteVar[5];\n  var radMode = false;\n  if (!globalBool) {\n    //no data can be calculated\n    if (!diffBool || !beamBool) {\n      //do nothing\n    }\n    //Ib and Id  are inputs\n    if (diffBool) if (beamBool) radMode = true;\n  }\n  // Iglob: reduced Reindl or full Reindl\n  if (globalBool) {\n    if (!diffBool && !beamBool) {\n      if (tambBool && rhBool) radMode = true;\n      else radMode = true;\n    }\n    //no data can be calculated\n    if (!diffBool && beamBool) {\n      //do nothing\n    }\n    // I  and Id  are inputs\n    if (diffBool && !beamBool) radMode = true;\n    // I, Id  and Ib  are inputs; kick off Ib\n    if (diffBool && beamBool) radMode = true;\n  }\n  //return updated noteVar;\n  return radMode;\n};\n\n// calculate missing radiation data\n//order of temp values => [\"IBEAM_H\",\"IDIFF_H\",\"IGLOB_H\",\"TAMB\",\"WSPEED\",\"RHUM\",\"WDIR\",\"CCOVER\",\"PAMB\",\"PRECIP\",\"HRATIO\"]\nconst extrapolateRadiation = (noteVar, temp, solarPos, logs) => {\n  var rad = { beam: temp[0], diffuse: temp[1], global: temp[2], logs: logs };\n  var beamBool = noteVar[0],\n    diffBool = noteVar[1],\n    globalBool = noteVar[2],\n    tambBool = noteVar[3],\n    rhBool = noteVar[5];\n  if (!globalBool) {\n    //no data can be calculated\n    if (!diffBool || !beamBool) logs.log6 += \"rad mode: insufficient data,\";\n    //Ib and Id  are inputs\n    if (diffBool && beamBool)\n      rad = beamDiffuse(solarPos, rad.beam, rad.diffuse, logs);\n  }\n  // Iglob: reduced Reindl or full Reindl\n  if (globalBool) {\n    if (!diffBool && !beamBool) {\n      if (tambBool && rhBool)\n        rad = globalAndTemp(\n          solarPos.hextra,\n          solarPos.cosZenith,\n          rad.global,\n          temp[3],\n          temp[5],\n          logs\n        );\n      else\n        rad = globalOnly(solarPos.hextra, solarPos.cosZenith, rad.global, logs);\n    }\n    //no data can be calculated\n    if (!diffBool && beamBool) logs.log6 += \"rad mode: insufficient data,\";\n    // I  and Id  are inputs\n    if (diffBool && !beamBool)\n      rad = globalDiffuse(solarPos.hextra, rad.diffuse, rad.global, logs);\n    // I, Id  and Ib  are inputs; kick off Ib\n    if (diffBool && beamBool)\n      rad = globalDiffuse(solarPos.hextra, rad.diffuse, rad.global, logs);\n  }\n\n  let diffuseratio = 0;\n  let beamratio = 0;\n  // Check for beam radiation greater than extraterrestrial radiation\n  if (rad.beam > solarPos.hextra) {\n    diffuseratio = bounded(rad.diffuse / rad.global, [1e-6, 1]);\n    beamratio = bounded(rad.beam / rad.global, [1e-6, 1]);\n    rad.beam = solarPos.hextra;\n    rad.global = rad.beam / beamratio;\n    rad.diffuse = rad.global * diffuseratio;\n    logs.log6 +=\n      \"Horizontal beam calculation greater than extraterrestrial radiation on the horizontal surface\";\n  }\n  logs.log6 += \",\";\n  rad.logs = logs;\n  return rad;\n};\n\n//Use Reindl correlation to estimate horizontal diffuse\n//Use horizontal extraterrestrial profile to set total radiation on a horizontal plane\nconst globalOnly = (hextra, coszen, global, logs) => {\n  logs.log6 += \"rad mode: global only,\";\n\n  if (global > hextra) {\n    global = hextra;\n    logs.log6 +=\n      \"Total horizontal calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n\n  var xkt = global / hextra,\n    dfract;\n  if (xkt <= 0.3) dfract = Math.min(1.02 - 0.254 * xkt + 0.0123 * coszen, 1);\n  if (xkt > 0.3 && xkt < 0.78)\n    dfract = Math.max(Math.min(1.4 - 1.749 * xkt + 0.177 * coszen, 0.97), 0.1);\n  if (xkt >= 0.78)\n    dfract = Math.max(Math.min(0.486 * xkt - 0.182 * coszen, 0.97), 0.1);\n\n  var hd = dfract * global,\n    hb = global - hd;\n\n  return { global: global, beam: hb, diffuse: hd, logs: logs };\n};\n\n// Use Reindl full correlation (Ta in C, rel humidity as int [0,100]) note that Ta and rel humidity are not interpolated\n// Use horizontal extraterrestrial profile to set total radiation on a horizontal plane\nconst globalAndTemp = (hextra, coszen, global, tamb, rh, logs) => {\n  logs.log6 += \"rad mode: global and temp,\";\n\n  if (global > hextra) {\n    global = hextra;\n    logs.log6 +=\n      \"Total horizontal calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n  var xkt = Math.min(1.1, global / hextra),\n    dfract;\n  if (xkt <= 0.3) {\n    dfract = 1 - 0.232 * xkt + 0.0239 * coszen - 0.000682 * tamb + 0.0195 * rh;\n    if (dfract > 1) dfract = 1;\n  }\n  if (xkt > 0.3 && xkt < 0.78) {\n    dfract = 1.329 - 1.716 * xkt + 0.267 * coszen - 0.00357 * tamb + 0.106 * rh;\n    if (dfract > 0.97) dfract = 0.97;\n    if (dfract < 0.1) dfract = 0.1;\n  }\n  if (xkt <= 0.78) {\n    dfract = 0.426 * xkt - 0.256 * coszen + 0.00349 * tamb + 0.0734 * rh;\n    if (dfract > 0.97) dfract = 0.97;\n    if (dfract < 0.1) dfract = 0.1;\n  }\n\n  var hd = dfract * global,\n    hb = global - hd;\n\n  return { global: global, beam: hb, diffuse: hd, logs: logs };\n};\n\n// Inputs are beam on horizontal and diffuse on horizontal\nconst beamDiffuse = (hextra, beam, diff, logs) => {\n  logs.log6 += \"rad mode: beam and diffuse,\";\n\n  // Use horizontal extraterrestrial profile to set beam radiation on a horizontal plane\n  if (beam > hextra) {\n    beam = hextra;\n    logs.log6 +=\n      \"Horizontal beam calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n\n  // Use horizontal extraterrestrial profile to set diffuse radiation on a horizontal plane\n  if (diff > hextra) {\n    diff = hextra;\n    logs.log6 +=\n      \"Horizontal diffuse calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n\n  var hhor = beam + diff;\n  if (hhor > hextra) {\n    diff = hextra * bounded(diff / hhor, [1e-6, 1]);\n    beam = hextra * bounded(beam / hhor, [1e-6, 1]);\n    hhor = hextra;\n    logs.log6 +=\n      \"Total horizontal calculation greater than extraterrestrial radiation on the horizontal surface due to sum of beam and diffuse, ratios used to set beam and diffuse-- \";\n  }\n\n  return { global: hhor, beam: beam, diffuse: diff, logs: logs };\n};\n\n// Inputs are total (horizontal) and diffuse (horizontal)\nconst globalDiffuse = (hextra, diff, global, logs) => {\n  logs.log6 += \"rad mode: diffuse and global\";\n\n  if (global > hextra) {\n    global = hextra;\n    logs.log6 +=\n      \"Total horizontal  calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n\n  if (diff > hextra) {\n    diff = hextra;\n    logs.log6 +=\n      \"Horizontal diffuse calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n\n  var hb = global - diff;\n  if (hb < 0) {\n    hb = 0;\n    diff = global;\n    logs.log6 +=\n      \"Calculated value of beam radiation on the horizontal is less than 0, set horizontal diffuse to total horizontal and horizontal beam to zero-- \";\n  }\n\n  return { global: global, beam: hb, diffuse: diff, logs: logs };\n};\n\n// slope = slope of surface [degrees]\n// azimuth = azimuth of surface [degrees]\n// radiation = radiation data object\nconst incidentRadiation = (slope, azimuth, solarPos, radiation, logs) => {\n  var solConst = 4871;\n\n  // Calculate beam radiation, total radiation and incidence angle for each slope.\n  var axslp = rad(slope);\n  var axazm = rad(azimuth);\n  //   var sinasl = Math.sin(axslp);\n  //   var cosasl = nonZero(Math.cos(axslp));\n  //   var tanasl = sinasl / cosasl;\n\n  // Keep the difference of solar azimuth and axis azimuth between 180 and -180 degrees\n  var alf = nonZero(solarPos.solarAzimuth - axazm);\n  if (Math.abs(alf) > Math.PI) alf = alf - sign(2 * Math.PI, alf);\n  //   var costtp = nonZero(\n  //     cosasl * solarPos.cosZenith + sinasl * solarPos.sinZenith * Math.cos(alf)\n  //   );\n\n  var sinslp = Math.sin(axslp);\n  var cosslp = Math.cos(axslp);\n  var costt = Math.min(\n    cosslp * solarPos.cosZenith +\n      sinslp * solarPos.sinZenith * Math.cos(solarPos.solarAzimuth - axazm),\n    1\n  );\n\n  // Beam and ground reflected radiation independent of tilted surface model\n  var rb = Math.max(costt, 0) / Math.max(solarPos.cosZenith, 0.01745);\n  var surfBeam = radiation.beam * rb;\n  var grndRef = 0.2;\n  var surfGrndRef = radiation.global * grndRef * 0.5 * (1 - cosslp);\n\n  logs.log4 += `${axslp},${axazm},${cosslp},${sinslp},${solarPos.cosZenith},${solarPos.sinZenith},${solarPos.solarAzimuth},${costt},${rb},${surfBeam} \\r\\n`;\n\n  var surfDiff, surfDiffCirc, surfDiffBright, surfDiffIso;\n  if (radiation.beam > 0) {\n    logs.log6 += \"beam > 0 -- \";\n    // Perez point source model (Sandia report Oct. 1988)\n    var p1 = Math.max(\n      param(\n        0,\n        radiation.beam,\n        radiation.diffuse,\n        solarPos.solarZenith,\n        solarPos.cosZenith,\n        solarPos.hextra\n      ),\n      0\n    );\n    var p2 = param(\n      1,\n      radiation.beam,\n      radiation.diffuse,\n      solarPos.solarZenith,\n      solarPos.cosZenith,\n      solarPos.hextra\n    );\n    var a1 = Math.max(costt, 0);\n    var b1 = Math.max(Math.cos(rad(85)), solarPos.cosZenith);\n\n    surfDiff =\n      radiation.diffuse *\n      (0.5 * (1 - p1) * (1 + cosslp) + (p1 * a1) / b1 + p2 * sinslp);\n    logs.log5 += `${radiation.diffuse},${p1},${p2},${a1},${b1},${costt},${cosslp},${sinslp},EOL \\r\\n`;\n    surfDiffCirc = radiation.diffuse * ((p1 * a1) / b1);\n    surfDiffBright = radiation.diffuse * p2 * sinslp;\n    surfDiffIso = surfDiff - surfDiffCirc - surfDiffBright;\n  } else {\n    logs.log6 += \"beam < 0 -- \";\n    // Diffuse assumed isotropic if beam not positive\n    surfDiff = radiation.diffuse * 0.5 * (1 + cosslp);\n    surfDiffCirc = 0;\n    surfDiffBright = 0;\n    surfDiffIso = surfDiff - surfDiffCirc - surfDiffBright;\n  }\n  if (surfDiff < 0) {\n    logs.log6 += \"diffuse < 0 -- \";\n    surfDiff = 0;\n    surfDiffCirc = 0;\n    surfDiffBright = 0;\n    surfDiffIso = surfDiff - surfDiffCirc - surfDiffBright;\n  }\n\n  // Output total (flat surface) radiation, beam radiation, diffuse radiation, incidence angle, and slope.\n  var surfTotal = surfBeam + surfDiff + surfGrndRef;\n  if (surfTotal > solConst) {\n    surfBeam = (surfBeam * solConst) / surfTotal;\n    surfDiff = (surfDiff * solConst) / surfTotal;\n    surfGrndRef = (surfGrndRef * solConst) / surfTotal;\n    logs.log6 +=\n      \"Horizontal beam calculation greater than extraterrestrial radiation on the horizontal surface-- \";\n  }\n  logs.log6 += \",\";\n\n  //results\n  return {\n    total: surfTotal,\n    beam: surfBeam,\n    diffuse: surfDiff,\n    grndRef: surfGrndRef,\n    diffIso: surfDiffIso,\n    diffCirc: surfDiffCirc,\n    diffBright: surfDiffBright,\n    logs: logs,\n  };\n};\n\nconst bin = (eps) => {\n  if (eps > 0 && eps <= 1.065) return 0;\n  if (eps > 1.065 && eps <= 1.23) return 1;\n  if (eps > 1.23 && eps <= 1.5) return 2;\n  if (eps > 1.5 && eps <= 1.95) return 3;\n  if (eps > 1.95 && eps <= 2.8) return 4;\n  if (eps > 2.8 && eps <= 4.5) return 5;\n  if (eps > 4.5 && eps <= 6.2) return 6;\n  if (eps > 6.2) return 7;\n};\n\n// Data for the Perez model reported in Sandia report, 1988\nconst param = (rank, hb, hd, zenith, coszen, hextra) => {\n  var p11 = [-0.196, 0.236, 0.454, 0.866, 1.026, 0.978, 0.748, 0.318];\n  var p12 = [1.084, 0.519, 0.321, -0.381, -0.711, -0.986, -0.913, -0.757];\n  var p13 = [-0.006, -0.18, -0.255, -0.375, -0.426, -0.35, -0.236, 0.103];\n  var p21 = [-0.114, -0.011, 0.072, 0.203, 0.273, 0.28, 0.173, 0.062];\n  var p22 = [0.18, 0.02, -0.098, -0.403, -0.602, -0.915, -1.045, -1.698];\n  var p23 = [-0.019, -0.038, -0.046, -0.049, -0.061, -0.024, 0.065, 0.236];\n  var pa = [\n    [p11, p12, p13],\n    [p21, p22, p23],\n  ];\n\n  var nbin;\n  if (hd < 1e-6) {\n    nbin = 7;\n  } else {\n    var hdn = hb / coszen;\n    var epsilon = (hd + hdn) / hd;\n    var eps = (epsilon + 1.041 * zenith ** 3) / (1 + 1.041 * zenith ** 3);\n    nbin = bin(eps);\n  }\n\n  return (\n    pa[rank][0][nbin] +\n    (pa[rank][1][nbin] * hd) / hextra +\n    pa[rank][2][nbin] * zenith\n  );\n};\n\nexport {\n  radiationMode,\n  extrapolateRadiation,\n  incidentRadiation,\n  solarPosition,\n};\n","import * as d3 from \"d3\";\nimport {\n  radiationMode,\n  extrapolateRadiation,\n  incidentRadiation,\n  solarPosition,\n} from \"./radiationCalcs\";\n\nimport { psych } from \"./psych\";\n\nlet dataset = [];\nlet noteVar = [];\n\nconst prepareData = (temp, metricUnits) => {\n  // console.log(\"fn: prepareData\");\n\n  if (temp) {\n    //determine which vars are present\n    noteVar = presentVariables(temp);\n    // console.log(\"notevar:\",noteVar)\n\n    //lat, lon and gmt\n    let location = getLocations(temp);\n\n    if (isNaN(location.gmt)) {\n      let g = prompt(\n        \"Please enter the correct GMT (East is +), ex. Germany = 1\",\n        \"0\"\n      );\n      if (g != null) location.gmt = g;\n    }\n\n    //for missing info add zeros\n    //ex. in the case that no precipitation data is in the *109 file\n    var temp1 = missingData(temp);\n    // console.log(\"data\",temp1)\n\n    //populate hourly data set\n    var radMode = radiationMode(noteVar);\n    // console.log(\"radMode:\",radMode)\n    dataset = populateHourly(temp1, location, radMode);\n    // console.log(\"data2\",dataset)\n    let dataset2 = dataset;\n    if (!metricUnits) dataset2 = convertDataset(dataset2, metricUnits);\n\n    //update noteVar for presence of facade radiation data\n    if (radMode) {\n      noteVar[0] = 1;\n      noteVar[1] = 1;\n      noteVar[2] = 1;\n\n      let te = 37;\n      while (te-- > 13) {\n        noteVar[te] = 1;\n      }\n    }\n    //populate monthly data set\n    let monthlyData = populateMonthly(dataset2);\n\n    //populate data parameters\n    let dataParams = populateParams(dataset2, metricUnits);\n    //set diffuse max radiation to same as beem diffuse radiation (so that they have the same scale)\n    dataParams[1].max = dataParams[0].max;\n\n    // console.log(\"params\", dataParams)\n\n    return {\n      data: dataset2,\n      monthlyData: monthlyData,\n      dataParams: dataParams,\n      presentVars: noteVar,\n      location: location,\n    };\n  } else {\n    alert(\"Weather data unavailable\");\n    return {\n      data: [],\n      monthlyData: [],\n      dataParams: [],\n      presentVars: [],\n      location: { longitude: -99, latitude: -99, gmt: -99 },\n    };\n  }\n};\n\n// const convertData = (metricUnits) => {\n//   let dataset2 = convertDataset(metricUnits);\n\n//   //populate monthly data set\n//   var monthlyData = populateMonthly(dataset2);\n\n//   //populate data parameters\n//   var dataParams = populateParams(dataset2, metricUnits);\n//   //set diffuse max radiation to same as beem diffuse radiation (so that they have the same scale)\n//   dataParams[1].max = dataParams[0].max;\n\n//   return {\n//     data: dataset2,\n//     monthlyData: monthlyData,\n//     dataParams: dataParams,\n//     presentVars: noteVar,\n//   };\n// };\n\nconst turnData = (data, turn, metricUnits) => {\n  let newDataset = turnDataset(data, turn);\n  // console.log(\"newDataset\", newDataset);\n\n  //populate monthly data set\n\n  var monthlyData = populateMonthly(newDataset);\n\n  //populate data parameters\n  var dataParams = populateParams(newDataset, metricUnits);\n  //set diffuse max radiation to same as beem diffuse radiation (so that they have the same scale)\n  dataParams[1].max = dataParams[0].max;\n\n  return {\n    data: newDataset,\n    monthlyData: monthlyData,\n    dataParams: dataParams,\n    presentVars: noteVar,\n  };\n};\n\n//--------------------------------------------------------------------------------------\n// F U N C T I O N S\n//--------------------------------------------------------------------------------------\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//determine which weather file variables are present in weather file\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst presentVariables = (temp) => {\n  var nv = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0, //classic\n    0,\n    0,\n    0,\n    0, //rad Hor\n    0,\n    0,\n    0,\n    0, //rad North\n    0,\n    0,\n    0,\n    0, //rad South\n    0,\n    0,\n    0,\n    0, //rad East\n    0,\n    0,\n    0,\n    0, //rad West\n    0,\n    0,\n    0,\n    0, //rad All Facades\n  ];\n\n  //check for one hour data interval\n  var interval = \"\";\n  interval = temp.slice(\n    temp.indexOf(\"<interval>\"),\n    temp.indexOf(\"<firsttime>\")\n  );\n  if (parseInt(interval.match(/\\d+/g)[0]) !== 1)\n    alert(\"File is not in hourly time steps\");\n\n  //check for specific variables that are present in *109\n  var dataVar = temp.slice(temp.indexOf(\"<firsttime>\"), temp.indexOf(\"<data>\"));\n  dataVar = dataVar.split(\"<var>\");\n  var ldv = dataVar.length,\n    varAr = [];\n  for (var i = 1; i < ldv; i++) {\n    varAr.push(dataVar[i].split(\"<col>\")[0].replace(/ /g, \"\"));\n  }\n  var allVar = [\n    \"IBEAM_H\",\n    \"IDIFF_H\",\n    \"IGLOB_H\",\n    \"TAMB\",\n    \"WSPEED\",\n    \"RHUM\",\n    \"WDIR\",\n    \"CCOVER\",\n    \"PAMB\",\n    \"PRECIP\",\n    \"HRATIO\",\n  ];\n  var lva = varAr.length,\n    lav = allVar.length;\n  for (let i = 0; i < lva; i++) {\n    for (let j = 0; j < lav; j++) {\n      if (varAr[i] === allVar[j]) {\n        nv[j] = 1;\n        if (i < lva - 1) {\n          j = i;\n          i = i + 1;\n        }\n      }\n    }\n  }\n  //humidity ratio\n  if (nv[3] === 1 && nv[5] === 1) nv[10] = 1;\n\n  //wet bulb\n  if (nv[3] === 1 && nv[5] === 1) nv[11] = 1;\n\n  //dew point\n  if (nv[3] === 1 && nv[5] === 1) nv[12] = 1;\n\n  return nv;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// get location from weather file\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst getLocations = (temp) => {\n  //find weather station elevation\n  var longitude = 0,\n    latitude = 0,\n    gmt = 0;\n  var ia = temp.indexOf(\"<longitude>\");\n  var ib = temp.indexOf(\"<latitude>\");\n  var ic = temp.indexOf(\"<gmt>\");\n  longitude = parseFloat(temp.slice(ia + 12, ia + 20)) * -1;\n  latitude = parseFloat(temp.slice(ib + 12, ib + 20));\n\n  let time = temp.slice(ic + 5, ic + 20).trim(),\n    solarTime = false;\n  if (time === \"solar\") {\n    gmt = 0;\n    solarTime = true;\n  } else {\n    gmt = parseFloat(temp.slice(ic + 5, ic + 20));\n  }\n\n  // console.log(\"longitude: \",longitude,\"latitude: \",latitude,\"gmt: \",gmt,\"solarTime: \",solarTime);\n\n  return {\n    longitude: longitude,\n    latitude: latitude,\n    gmt: gmt,\n    solarTime: solarTime,\n  };\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//for missing info add zeros\n//ex. in the case that no precipitation data is in the *109 file\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst missingData = (temp) => {\n  var count = (temp.match(/var/g) || []).length;\n  var temp2 = parseData(7 + count, temp);\n\n  //for missing info add zeros\n  //ex. in the case that no precipitation data is in the *109 file\n  var lt2 = temp2.length;\n  var lnv = noteVar.length;\n  var temp1 = [];\n  for (var i = 0; i < lt2; i++) {\n    var indV = 1;\n    temp1.push([]);\n    for (var j = 0; j < lnv; j++) {\n      if (noteVar[j] === 1) {\n        temp1[i].push(temp2[i][indV]);\n        indV += 1;\n      } else {\n        temp1[i].push(0);\n      }\n    }\n  }\n  return temp1;\n};\n\n//split all into n-dimensional arrays, removing all header material\nconst parseData = (num, array) => {\n  var array1 = array.split(\"\\r\\n\"),\n    array2 = [];\n  for (var i = num; i < array1.length; i++) {\n    var ar = array1[i].split(/\\s/g);\n    var ar2 = [];\n    var c = true;\n    for (var j = 0; j < ar.length; j++) {\n      if (c && ar[j].length > 0) {\n        ar2.push(parseInt(ar[j]));\n        c = false;\n      } else {\n        if (ar[j].length > 0) ar2.push(parseFloat(ar[j]));\n      }\n    }\n    array2.push(ar2);\n  }\n  // console.log(\"parseData\",array2)\n  return array2;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//populate hourly data set\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nlet logs = {\n  log1: \"beam,diffuse,global,beamX,diffuseX,globalX,hextra \\r\\n\",\n  log2: \"azimuth,zenith,coszen,sinzen \\r\\n\",\n  log3: \"Tot_Hor,Beam_Hor,Diff_Hor,Grnd_Hor,Tot_N,Beam_N,Diff_N,Grnd_N,Tot_S,Beam_S,Diff_S,Grnd_S,Tot_E,Beam_E,Diff_E,Grnd_E,Tot_W,Beam_W,Diff_W,Grnd_W \\r\\n\",\n  log4: \"axslp,axazm,cosslp,sinslp,coszen,sinzen,solarAzimuth,costt,rb,surfBeam \\r\\n\",\n  log5: \"diffuse,p1,p2,a1,b1,costt,cosslp,sinslp \\r\\n\",\n  log6: \"solarPosition messages,rad mode, rad mode message, Hor messages, South messages, West messages, North messages, East messages \\r\\n\",\n};\n\n// let lshd =\n//   \"sky vf, ground vf, beam vf, sky vf, ground vf, beam vf,sky vf, ground vf, beam vf, sky vf, ground vf, beam vf,sky vf, ground vf, beam vf, sky vf, ground vf, beam vf \\r\\n\";\n\n// let getLogs = () => {\n//   download(logs.log1, \"radiation.csv\");\n//   download(logs.log2, \"solarPos.csv\");\n//   download(logs.log3, \"surfaceRadiation.csv\");\n//   download(logs.log4, \"log4.csv\");\n//   download(logs.log5, \"log5.csv\");\n//   download(logs.log6, \"notices.csv\");\n//   logs.log1 = \"\";\n//   logs.log2 = \"\";\n//   logs.log3 = \"\";\n//   logs.log4 = \"\";\n//   logs.log5 = \"\";\n//   logs.log6 = \"\";\n// };\n\n// const getLogs2 = () => {\n//   download(lshd, \"viewFactor.csv\");\n//   lshd = \"\";\n// };\n\n// const download = (text, name) => {\n//   var pom = document.createElement(\"a\");\n//   var file = new Blob([text]);\n//   pom.setAttribute(\"href\", URL.createObjectURL(file));\n//   pom.setAttribute(\"download\", name);\n//   pom.style.display = \"none\";\n//   document.body.appendChild(pom);\n//   pom.click();\n//   document.body.removeChild(pom);\n// };\n\n//data class constructor\nclass TimeStep {\n  constructor(data, date, clock, pos) {\n    this.data = data;\n    this.date = date;\n    this.clock = clock;\n    this.solarPosition = pos;\n  }\n}\n\nconst populateHourly = (temp1, location, radMode) => {\n  const timeStepData = (solarPos, temp) => {\n    //get radiation mode and extrapolate missing radiation data\n    var rad = extrapolateRadiation(noteVar, temp, solarPos, logs);\n    logs = rad.logs;\n\n    var hor = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      s = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      w = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      n = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      e = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      av = { total: 0, beam: 0, diffuse: 0, grndRef: 0 };\n    if (radMode) {\n      //get radiation on surfaces\n      hor = incidentRadiation(0, 0, solarPos, rad, logs);\n      logs = hor.logs;\n      s = incidentRadiation(90, 0, solarPos, rad, logs);\n      logs = s.logs;\n      w = incidentRadiation(90, 90, solarPos, rad, logs);\n      logs = w.logs;\n      n = incidentRadiation(90, 180, solarPos, rad, logs);\n      logs = n.logs;\n      e = incidentRadiation(90, 270, solarPos, rad, logs);\n      logs = e.logs;\n      av.total = s.total + w.total + n.total + e.total;\n      av.beam = s.beam + w.beam + n.beam + e.beam;\n      av.diffuse = s.diffuse + w.diffuse + n.diffuse + e.diffuse;\n      av.grndRef = s.grndRef + w.grndRef + n.grndRef + e.grndRef;\n    }\n    logs.log3 += `${hor.total},${hor.beam},${hor.diffuse},${hor.grndRef},${n.total},${n.beam},${n.diffuse},${n.grndRef},${s.total},${s.beam},${s.diffuse},${s.grndRef},${e.total},${e.beam},${e.diffuse},${e.grndRef},${w.total},${w.beam},${w.diffuse},${w.grndRef} \\r\\n`;\n    logs.log6 += \" \\r\\n\";\n\n    // .109\n    //[IBEAM_H W/m2,IDIFF_H W/m2,IGLOB_H W/m2,TAMB C,WSPEED m/s,RHUM %RH,WDIR wind direction (north=0;east=90),CCOVER,PAMB (sometimes),PRECIP (sometimes),...\n    //calculate humidity ratio\n    var humidityRatio;\n    if (noteVar[10] === 1) {\n      humidityRatio =\n        Math.round(\n          psych(101353, temp[3], temp[5] / 100, 3, 4, false) * 1000 * 10\n        ) / 10;\n    }\n\n    //calculate wet bulb\n    var wetBulb;\n    if (noteVar[11] === 1) {\n      wetBulb =\n        Math.round(psych(101353, temp[3], temp[5] / 100, 3, 1, false) * 10) /\n        10;\n    }\n\n    //calculate dew point\n    var dewPoint;\n    if (noteVar[12] === 1) {\n      dewPoint =\n        Math.round(psych(101353, temp[3], temp[5] / 100, 3, 2, false) * 10) /\n        10;\n    }\n\n    //if total radiation is not available add diffuse and direct together\n    var totalRad = temp[2];\n    if (noteVar[2] === 0) {\n      totalRad = temp[0] + temp[1];\n    }\n    logs.log1 += `${temp[0]},${temp[1]},${totalRad},${rad.beam},${rad.diffuse},${rad.global},${solarPos.hextra}\\r\\n`;\n\n    return [\n      rad.beam,\n      rad.diffuse,\n      rad.global,\n      temp[3],\n      temp[4],\n      temp[5],\n      temp[6],\n      temp[7] * 100,\n      temp[8],\n      temp[9],\n      humidityRatio,\n      wetBulb,\n      dewPoint,\n      hor.total,\n      hor.beam,\n      hor.diffuse,\n      hor.grndRef,\n      n.total,\n      n.beam,\n      n.diffuse,\n      n.grndRef,\n      e.total,\n      e.beam,\n      e.diffuse,\n      e.grndRef,\n      s.total,\n      s.beam,\n      s.diffuse,\n      s.grndRef,\n      w.total,\n      w.beam,\n      w.diffuse,\n      w.grndRef,\n      av.total,\n      av.beam,\n      av.diffuse,\n      av.grndRef,\n    ];\n  };\n\n  //produce 8760 objects representing each hour and monthly objects\n  let ds = [];\n  let nd = 0;\n  //   let l = temp1.length;\n  for (let i = 0; i < 8760; i++) {\n    //populate hourly timesteps\n    if (i % 24 === 0) nd += 1;\n    //get sun position\n    let solarPos = solarPosition(i + 1, location, logs);\n    //time step data\n    let tsd = timeStepData(solarPos, temp1[i]);\n    ds.push(new TimeStep(tsd, nd, i % 24, solarPos));\n  }\n  return ds;\n};\n\nconst convertDataset = (dataset, metricUnits) => {\n  let conv = [\n    [1, 0],\n    [0.092936, 0], // W/m2 -> W/sqft\n    [1.8, 32], // C -> F\n    [2.2369, 0], // m/s -> mph\n    [0.000145038, 0], // Pa -> Psi\n    [0.03936, 0], // mm -> inch\n  ];\n  let cf = [\n    1, 1, 1, 2, 3, 0, 0, 0, 4, 5, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n  ];\n  let ds = [];\n  let l = dataset.length;\n  for (let i = 0; i < l; i++) {\n    let dh = new TimeStep(\n      dataset[i].data,\n      dataset[i].date,\n      dataset[i].clock,\n      dataset[i].solarPosition\n    );\n    dh.data = dh.data.map((e, j) => ip(e, conv[cf[j]]), metricUnits);\n    ds.push(dh);\n  }\n  return ds;\n};\n\nconst ip = (val, conv, metricUnits) => {\n  if (metricUnits) return Math.round(val * 100) / 100;\n  else return Math.round((val * conv[0] + conv[1]) * 100) / 100;\n};\n\nconst turnDataset = (dataset, t) => {\n  // console.log(\"inside turn dataset\", dataset);\n  let ds = [];\n  let turn = parseInt(t);\n  let radMode = radiationMode(noteVar);\n  let l = dataset.length;\n  // console.log(\"l\", l);\n  for (let i = 0; i < l; i++) {\n    let solarPos = dataset[i].solarPosition;\n    let dh = new TimeStep(\n      dataset[i].data,\n      dataset[i].date,\n      dataset[i].clock,\n      solarPos\n    );\n    //calculate new radiation data\n    let rad = extrapolateRadiation(noteVar, dh.data, solarPos, logs);\n    logs = rad.logs;\n\n    let hor = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      s = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      w = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      n = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      e = { total: 0, beam: 0, diffuse: 0, grndRef: 0 },\n      av = { total: 0, beam: 0, diffuse: 0, grndRef: 0 };\n    if (radMode) {\n      //get radiation on surfaces\n      hor = incidentRadiation(0, 0, solarPos, rad, logs);\n      logs = hor.logs;\n      s = incidentRadiation(90, 0 + turn, solarPos, rad, logs);\n      logs = s.logs;\n      w = incidentRadiation(90, 90 + turn, solarPos, rad, logs);\n      logs = w.logs;\n      n = incidentRadiation(90, 180 + turn, solarPos, rad, logs);\n      logs = n.logs;\n      e = incidentRadiation(90, 270 + turn, solarPos, rad, logs);\n      logs = e.logs;\n      av.total = s.total + w.total + n.total + e.total;\n      av.beam = s.beam + w.beam + n.beam + e.beam;\n      av.diffuse = s.diffuse + w.diffuse + n.diffuse + e.diffuse;\n      av.grndRef = s.grndRed + w.grndRef + n.grndRef + e.grndRef;\n    }\n    dh.data = [\n      dh.data[0],\n      dh.data[1],\n      dh.data[2],\n      dh.data[3],\n      dh.data[4],\n      dh.data[5],\n      dh.data[6],\n      dh.data[7],\n      dh.data[8],\n      dh.data[9],\n      dh.data[10],\n      dh.data[11],\n      dh.data[12],\n      hor.total,\n      hor.beam,\n      hor.diffuse,\n      hor.grndRef,\n      n.total,\n      n.beam,\n      n.diffuse,\n      n.grndRef,\n      e.total,\n      e.beam,\n      e.diffuse,\n      e.grndRef,\n      s.total,\n      s.beam,\n      s.diffuse,\n      s.grndRef,\n      w.total,\n      w.beam,\n      w.diffuse,\n      w.grndRef,\n      av.total,\n      av.beam,\n      av.diffuse,\n      av.grndRef,\n    ];\n    // if (i === 12) console.log(90 + turn);\n    ds.push(dh);\n  }\n  return ds;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//populate daily data set\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// function populateDaily(ds){\n//     // var DailyTimeStep = function(max,min,avg){\n//     // \tthis.max = max;\n//     // \tthis.min = min;\n//     // \tthis.avg = avg;\n//     // }\n\n//     // let dailyData = [];\n\n//     // let lp = ds.data[0].length;\n//     // let l = ds.length;\n//     // for(var j = 0; j < lp; j++){\n//     // \tlet series = [];\n//     // \tlet max = -1e99, min = 1e99, sum = 0;\n//     // \tfor(var i = 0; i < l; i++){\n//     // \t\tvar v = data[i].data[j];\n//     // \t\tmax = Math.max(v,max);\n//     // \t\tmin = Math.min(v,min);\n//     // \t\tsum += v;\n//     // \t\tif(data[i].clock === 23){\n//     // \t\t\tseries.push(new DailyTimeStep(max,min,sum/24));\n//     // \t\t\tmax = -1e99, min = 1e99, sum = 0;\n//     // \t\t}\n//     // \t}\n//     // \tdailyData.push(series);\n//     // }\n//     // return dailyData;\n// }\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//populate monthly data set\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst populateMonthly = (ds) => {\n  // console.log(ds);\n  //data class constructor\n  class MonthlyTimeStep {\n    constructor(n, alldata) {\n      this.data = alldata;\n      this.month = n;\n    }\n  }\n\n  let monthlyData = [];\n  let monthEnd = [30, 58, 89, 119, 150, 180, 211, 242, 272, 303, 333, 364],\n    l = ds[0].data.length,\n    sum = primeArray(l, 0),\n    sumn = 0,\n    nd = 0,\n    nm = 0;\n\n  for (let i = 0; i < 8760; i++) {\n    if (i % 24 === 0) nd += 1;\n    let j;\n    for (j = 0; j < l; j++) {\n      sum[j] = sum[j] + parseFloat(ds[i].data[j]);\n    }\n    if (nd === monthEnd[nm]) {\n      monthlyData.push(new MonthlyTimeStep(nm, averageAr(sum, sumn)));\n      nm = nm + 1;\n      sum = primeArray(l, 0);\n      sumn = 0;\n    }\n    sumn = sumn + 1;\n  }\n  return monthlyData;\n};\n\n//this function will mistreat wind direction\nconst averageAr = (ar, n) => {\n  let l = ar.length;\n  for (let i = 0; i < l; i++) {\n    ar[i] = ar[i] / n;\n  }\n  return ar;\n};\n\n//add set (n) amount of items (p) to an array\nconst primeArray = (n, p) => {\n  let a = [];\n  while (n--) a.push(p);\n  return a;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//populate dataParams\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nconst populateParams = (ds, metricUnits) => {\n  //data class constructor\n  //produce one object for each type of data (ambient temp, relative humidity, etc.)\n  class DataType {\n    constructor() {\n      this.setData = (ind) => {\n        //significant digits\n        var sigdigs = [\n          0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        ];\n        this.sigdigs = sigdigs[ind];\n\n        //units\n        this.labels = dataLabels(ind, metricUnits);\n\n        //minimum and maximum values\n        this.min = d3.min(ds, function (d) {\n          return d.data[ind];\n        });\n        this.max = d3.max(ds, function (d) {\n          return d.data[ind];\n        });\n        if (ind === 6) {\n          this.min = 0;\n          this.max = 360;\n        }\n        this.bounds = [\n          Math.round(this.min + ((this.max - this.min) * 1) / 5),\n          Math.round(this.min + ((this.max - this.min) * 2) / 5),\n          Math.round(this.min + ((this.max - this.min) * 3) / 5),\n          Math.round(this.min + ((this.max - this.min) * 4) / 5),\n        ];\n\n        //colours\n        const cList = [\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#4575b4\", \"#ffffdf\", \"#d73027\", \"#FFFFFF\"],\n          [\"#99ccff\", \"#4575b4\", \"#0A122A\", \"#FFFFFF\"],\n          [\"#EFF2FB\", \"#4575b4\", \"#0A122A\", \"#FFFFFF\"],\n          [\"#30BCBF\", \"#FFD707\", \"#30BCBF\", \"#FFFFFF\"],\n          [\"#EFF2FB\", \"#4575b4\", \"#0A122A\", \"#FFFFFF\"],\n          [\"#EFF2FB\", \"#4575b4\", \"#0A122A\", \"#FFFFFF\"],\n          [\"#EFF2FB\", \"#4575b4\", \"#0A122A\", \"#FFFFFF\"],\n          [\"#EFF2FB\", \"#4575b4\", \"#0A122A\", \"#FFFFFF\"],\n          [\"#4575b4\", \"#ffffdf\", \"#d73027\", \"#FFFFFF\"],\n          [\"#4575b4\", \"#ffffdf\", \"#d73027\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"],\n          [\"#FFFF00\", \"#FF6600\", \"#800000\", \"#FFFFFF\"], //total all vertical facades grnd ref radiation\n        ];\n        //Use alternate zero color\n        let alt = false;\n        if (ind >= 0 && ind <= 2) alt = true;\n        if (ind >= 13) alt = true;\n        this.altZBool = alt;\n\n        //use relative or absolute colour scale\n        let relCol = false;\n        if (ind === 3) relCol = true;\n        if (ind === 11 || ind === 12) relCol = true;\n\n        //colour scale\n        let colorDomain;\n        let colorRange;\n        if (relCol) {\n          colorRange = [\n            \"#0F0445\",\n            \"#0F0471\",\n            \"#2068B5\",\n            \"#59ADD6\",\n            \"#EBEEEF\",\n            \"#FFC059\",\n            \"#D60000\",\n            \"#5F1300\",\n          ];\n          if (metricUnits) colorDomain = [-90, -60, -30, -5, 0, 15, 30, 60];\n          else\n            colorDomain = [\n              ctof(-90),\n              ctof(-60),\n              ctof(-30),\n              ctof(-5),\n              ctof(0),\n              ctof(15),\n              ctof(30),\n              ctof(60),\n            ];\n        } else {\n          colorRange = [cList[ind][0], cList[ind][1], cList[ind][2]];\n          colorDomain = [this.min, (this.max + this.min) / 2, this.max];\n        }\n        let colorScale = d3.scaleLinear().domain(colorDomain).range(colorRange);\n        this.colorScale = colorScale;\n\n        const discreteColors = (min, max, scale, bins) => {\n          let cArray = [];\n          for (let i = 0; i < bins; i++) {\n            cArray.push(scale(min + ((max - min) * i) / bins));\n          }\n          return cArray;\n        };\n\n        //discrete colors display\n        this.colorScaleDiscrete = d3\n          .scaleOrdinal()\n          // .threshold()\n          .domain(this.bounds)\n          .range(discreteColors(this.min, this.max, this.colorScale, 5));\n        // .range([0, 1, 2, 3, 4]);\n        this.legendColors = discreteColors(\n          this.min,\n          this.max,\n          this.colorScale,\n          10\n        );\n\n        this.genGradient = (currentMin, currentMax) => {\n          let bins = [];\n          let ldom = colorDomain.length;\n          for (let i = 1; i < ldom; i++) {\n            if (currentMax === colorDomain[i]) {\n              bins.push({\n                val: currentMax,\n                offset: \"0%\",\n                stopcolor: colorScale(currentMax),\n              });\n            }\n            if (\n              currentMax > colorDomain[i - 1] &&\n              currentMax < colorDomain[i]\n            ) {\n              bins.push({\n                val: currentMax,\n                offset: \"0%\",\n                stopcolor: colorScale(currentMax),\n              });\n            }\n          }\n          for (let i = ldom - 1; i >= 0; i--) {\n            if (currentMin < colorDomain[i] && currentMax > colorDomain[i]) {\n              let offset = Math.round(\n                100 -\n                  ((colorDomain[i] - currentMin) / (currentMax - currentMin)) *\n                    100\n              );\n              let so = offset + \"%\";\n              bins.push({\n                val: colorDomain[i],\n                offset: so,\n                stopcolor: colorScale(colorDomain[i]),\n              });\n            }\n          }\n          for (let i = 0; i < ldom - 1; i++) {\n            if (currentMin === colorDomain[i]) {\n              bins.push({\n                val: currentMin,\n                offset: \"100%\",\n                stopcolor: colorScale(currentMin),\n              });\n            }\n            if (\n              currentMin > colorDomain[i] &&\n              currentMin < colorDomain[i + 1]\n            ) {\n              bins.push({\n                val: currentMin,\n                offset: \"100%\",\n                stopcolor: colorScale(currentMin),\n              });\n            }\n          }\n          return bins;\n        };\n      };\n    }\n  }\n\n  //get all dataParams\n  var dataParams = [];\n  var l = noteVar.length;\n  for (var i = 0; i < l; i++) {\n    var d = new DataType();\n    d.setData(i);\n    dataParams.push(d);\n  }\n  return dataParams;\n};\n\n//data labels\nfunction dataLabels(i, metricUnits) {\n  const unitsList = [\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"C\", \"F\"],\n    [\"m/s\", \"mph\"],\n    [\"%\", \"%\"],\n    [\"degrees\", \"degrees\"],\n    [\"%\", \"%\"],\n    [\"Pa\", \"Psi\"],\n    [\"mm\", \"inch\"],\n    [\"g/kg\", \"lb/klb\"],\n    [\"C\", \"F\"],\n    [\"C\", \"F\"],\n    //radiation\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n    [\"W/m2\", \"W/ft2\"],\n  ];\n  const units = unitsList[i][metricUnits ? 0 : 1];\n\n  const capsList = [\n    \"Horizontal beam radiation\",\n    \"Horizontal diffuse radiation\",\n    \"Total horizontal radiation\",\n    \"Temperature\",\n    \"Wind speed\",\n    \"Relative humidity\",\n    \"Wind direction\",\n    \"Cloud cover\",\n    \"Pressure\",\n    \"Precipitation\",\n    \"Humidity ratio\",\n    \"Wet bulb temperature\",\n    \"Dew point temperature\",\n    //radiation\n    \"Total horizontal facade radiation\",\n    \"Horizontal facade beam radiation\",\n    \"Horizontal facade diffuse radiation\",\n    \"Horizontal facade grnd ref radiation\",\n    \"Total north facade radiation\",\n    \"North facade beam radiation\",\n    \"North facade diffuse radiation\",\n    \"North facade grnd ref radiation\",\n    \"Total east facade radiation\",\n    \"East facade beam radiation\",\n    \"East facade diffuse radiation\",\n    \"East facade grnd ref radiation\",\n    \"Total south facade radiation\",\n    \"South facade beam radiation\",\n    \"South facade diffuse radiation\",\n    \"South facade grnd ref radiation\",\n    \"Total west facade radiation\",\n    \"West facade beam radiation\",\n    \"West facade diffuse radiation\",\n    \"West facade grnd ref radiation\",\n    \"Total all facades radiation\",\n    \"All facades beam radiation\",\n    \"All facades diffuse radiation\",\n    \"All facades grnd ref radiation\",\n  ];\n\n  const noncapsList = [\n    \"horizontal beam radiation\",\n    \"horizontal diffuse radiation\",\n    \"total horizontal radiation\",\n    \"temperature\",\n    \"wind speed\",\n    \"relative humidity\",\n    \"wind direction\",\n    \"cloud cover\",\n    \"pressure\",\n    \"precipitation\",\n    \"humidity ratio\",\n    \"wet bulb temperature\",\n    \"dew point temperature\",\n    //radiation\n    \"total horizontal facade radiation\",\n    \"horizontal facade beam radiation\",\n    \"horizontal facade diffuse radiation\",\n    \"horizontal facade grnd ref radiation\",\n    \"total north facade radiation\",\n    \"north facade beam radiation\",\n    \"north facade diffuse radiation\",\n    \"north facade grnd ref radiation\",\n    \"total east facade radiation\",\n    \"east facade beam radiation\",\n    \"east facade diffuse radiation\",\n    \"east facade grnd ref radiation\",\n    \"total south facade radiation\",\n    \"south facade beam radiation\",\n    \"south facade diffuse radiation\",\n    \"south facade grnd ref radiation\",\n    \"total west facade radiation\",\n    \"west facade beam radiation\",\n    \"west facade diffuse radiation\",\n    \"west facade grnd ref radiation\",\n    \"total all facades radiation\",\n    \"all facades beam radiation\",\n    \"all facades diffuse radiation\",\n    \"all facades grnd ref radiation\",\n  ];\n\n  let labels = {\n    units: units,\n    capsUnits: `${capsList[i]} [${units}]`,\n    caps: capsList[i],\n    noncapsUnits: `${noncapsList[i]} [${units}]`,\n    noncaps: noncapsList[i],\n  };\n  return labels;\n}\n\n//celsius to fahrenheit\nconst ctof = (n) => {\n  return n * 1.8 + 32;\n};\n\nexport { prepareData, turnData };\n","import React, { useState, useEffect } from \"react\";\nimport \"./ToggleSwitch.css\";\n\nexport const ToggleSwitch = ({ label, getUnit }) => {\n  const [isMetricUnit, setIsMetricUnit] = useState(true);\n\n  const changeUnits = () => {\n    setIsMetricUnit(!isMetricUnit);\n  };\n\n  // pass unit to the parent\n  useEffect(() => {\n    getUnit(isMetricUnit);\n  }, [isMetricUnit]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-4\">\n        <div className=\"toggle-switch\">\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            name={label}\n            id={label}\n            onClick={changeUnits}\n          />\n          <label className=\"label\" htmlFor={label}>\n            <span className=\"inner\" />\n            <span className=\"switch\" />\n          </label>\n        </div>\n      </div>\n      <div className=\"col-8\">\n        <p id=\"unitsHighlight\">{isMetricUnit ? \"Metrics\" : \"Imperial\"}</p>\n      </div>\n    </div>\n  );\n};\n","// Component to load weather data from weather files in .109 format\n// Display some meta data about the weather file\nimport { useState, useEffect } from \"react\";\nimport { NorthArrow } from \"./NorthArrow\";\nimport { prepareData, turnData } from \"./prepareData\";\nimport { ToggleSwitch } from \"./ToggleSwitch\";\n\nexport const DataLoader = ({ getData }) => {\n  const [weatherStation, setWeatherStation] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  const [gmt, setGmt] = useState(\"\");\n  const [isMetricUnit, setIsMetricUnit] = useState(true);\n  const [turn, setTurn] = useState(0);\n\n  const [dataString, setDataString] = useState(\"\");\n  const [dataObj, setDataObj] = useState(null);\n\n  //function to load data from local files, initialize data object\n  const loadData = (e) => {\n    let file = e.target.files[0];\n    var reader = new FileReader();\n    reader.onload = () => {\n      let fileName = file.name;\n      let currentWeatherStationName = fileName.slice(0, fileName.indexOf(\".\"));\n      setWeatherStation(currentWeatherStationName);\n      let currentDataString = reader.result;\n      setDataString(currentDataString);\n      let currentDataObj = prepareData(currentDataString, isMetricUnit);\n      setDataObj(currentDataObj);\n      setLatitude(currentDataObj.location.latitude);\n      setLongitude(currentDataObj.location.longitude);\n      setGmt(currentDataObj.location.gmt);\n    };\n    reader.readAsText(file);\n  };\n\n  const getUnit = (childProps) => {\n    setIsMetricUnit(childProps);\n  };\n\n  const getTurn = (childProps) => {\n    setTurn(childProps);\n  };\n\n  // update data when unit or turn changes\n  useEffect(() => {\n    if (dataObj && typeof turn == \"number\") {\n      let newDataObj1 = prepareData(dataString, isMetricUnit);\n      let newDataObj2 = turnData(newDataObj1.data, turn, isMetricUnit);\n      setDataObj(newDataObj2);\n    }\n  }, [isMetricUnit, turn]);\n\n  // pass data to the parent component: App\n  useEffect(() => {\n    getData({\n      dataObj: dataObj,\n      weatherStation: weatherStation,\n      isMetricUnit: isMetricUnit,\n      turn: turn,\n    });\n  }, [dataObj, isMetricUnit, turn]);\n\n  // get the orientation angle from the child component: NorthArrow\n  return (\n    <>\n      <div className=\"container mt-6\" id=\"data-loader\">\n        <div className=\"row\" id=\"load-button\">\n          <div className=\"col-6\">\n            <p>\n              <strong>Load Weather files (*.109):</strong>\n            </p>\n          </div>\n          <div className=\"col-6\">\n            <input\n              type=\"file\"\n              className=\"form-control\"\n              text=\"Choose Weather File\"\n              onChange={loadData}\n            ></input>\n          </div>\n        </div>\n        <div className=\"row\">\n          <p id=\"data-loaded-text\">\n            {dataObj ? \"Data Loaded!\" : \"Data Not Loaded...\"}\n          </p>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"row\" id=\"unit\">\n              <div className=\"col-3\">\n                <p>\n                  <strong>Unit:</strong>\n                </p>\n              </div>\n              <div className=\"col-9\">\n                <ToggleSwitch label={\"unit-switch\"} getUnit={getUnit} />\n              </div>\n            </div>\n            <div className=\"row\" id=\"orientation\">\n              <div className=\"col-3\">\n                <p>\n                  <strong>Orientation:</strong>\n                </p>\n              </div>\n              <NorthArrow getTurn={getTurn} />\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"row\" id=\"weather-station\">\n              <div className=\"col-3\">\n                <p>\n                  <strong>Weather Station:</strong>\n                </p>\n              </div>\n              <div className=\"col-9\">\n                <span>{weatherStation}</span>\n              </div>\n            </div>\n            <div className=\"row\" id=\"latitude\">\n              <div className=\"col-3\">\n                <p>\n                  <strong>Latitude:</strong>\n                </p>\n              </div>\n              <div className=\"col-9\">\n                <span>{latitude + \"°N\"}</span>\n              </div>\n            </div>\n            <div className=\"row\" id=\"longitude\">\n              <div className=\"col-3\">\n                <p>\n                  <strong>Longitude:</strong>\n                </p>\n              </div>\n              <div className=\"col-9\">\n                <span>{longitude + \"°E\"}</span>\n              </div>\n            </div>\n            <div className=\"row\" id=\"gmt\">\n              <div className=\"col-3\">\n                <p>\n                  <strong>GMT:</strong>\n                </p>\n              </div>\n              <div className=\"col-9\">\n                <span>{\"GMT \" + gmt}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { AddItem } from \"./AddItem\";\nimport { DataDisplay } from \"./DataDisplay\";\nimport { DataLoader } from \"./DataLoader\";\n\nfunction App() {\n  const [itemList, setItemList] = useState([]); // list of visualizations to display\n  const [counter, setCounter] = useState(0); // number of items\n  const [dataObj, setDataObj] = useState(\"\"); // data from dataloader and pass to the children\n  const [weatherStation, setWeatherStation] = useState(\"\"); // weather station name passed from the DataLoader\n  const [turn, setTurn] = useState(0);\n  const [isMetricUnit, setIsMetricUnit] = useState(true);\n\n  // get data from the child component: DataLoader\n  const getData = (childProps) => {\n    setDataObj(childProps.dataObj);\n    setWeatherStation(childProps.weatherStation);\n    setTurn(childProps.turn);\n    setIsMetricUnit(childProps.isMetricUnit);\n  };\n\n  // get data from the child component: AddItem\n  const getText = (buttonText) => {\n    let currentCounter = counter;\n    currentCounter += 1;\n    setCounter(currentCounter);\n\n    let currentList = itemList;\n    currentList.push(buttonText);\n    setItemList(currentList);\n  };\n\n  return (\n    <>\n      <DataLoader getData={getData} />\n      <section className=\"container mt-3\" id=\"button-area\">\n        <AddItem text={\"Summary\"} getText={getText} />\n        <AddItem text={\"Histogram\"} getText={getText} />\n        <AddItem text={\"Field\"} getText={getText} />\n        <AddItem text={\"Natural Ventilation Potential\"} getText={getText} />\n        <AddItem text={\"Wind Field\"} getText={getText} />\n        <AddItem text={\"Psychrometric Chart\"} getText={getText} />\n      </section>\n      <br></br>\n      <DataDisplay\n        itemList={itemList}\n        dataObj={dataObj}\n        weatherStation={weatherStation}\n        turn={turn}\n        unit={isMetricUnit}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/js/dist/popover.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}